

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Sep  9 09:47:11 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1938
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     8                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  008C                     	;# 
    78  008D                     	;# 
    79  008E                     	;# 
    80  0090                     	;# 
    81  0091                     	;# 
    82  0092                     	;# 
    83  0093                     	;# 
    84  0095                     	;# 
    85  0096                     	;# 
    86  0097                     	;# 
    87  0098                     	;# 
    88  0099                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009B                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  010C                     	;# 
    96  010D                     	;# 
    97  010E                     	;# 
    98  0110                     	;# 
    99  0111                     	;# 
   100  0112                     	;# 
   101  0113                     	;# 
   102  0114                     	;# 
   103  0115                     	;# 
   104  0116                     	;# 
   105  0117                     	;# 
   106  0118                     	;# 
   107  0119                     	;# 
   108  011A                     	;# 
   109  011B                     	;# 
   110  011D                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0199                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019C                     	;# 
   129  019C                     	;# 
   130  019D                     	;# 
   131  019E                     	;# 
   132  019F                     	;# 
   133  020D                     	;# 
   134  0210                     	;# 
   135  0211                     	;# 
   136  0212                     	;# 
   137  0213                     	;# 
   138  0214                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0216                     	;# 
   142  0217                     	;# 
   143  0291                     	;# 
   144  0291                     	;# 
   145  0292                     	;# 
   146  0293                     	;# 
   147  0294                     	;# 
   148  0295                     	;# 
   149  0295                     	;# 
   150  0296                     	;# 
   151  0298                     	;# 
   152  0298                     	;# 
   153  0299                     	;# 
   154  029A                     	;# 
   155  029B                     	;# 
   156  029C                     	;# 
   157  029C                     	;# 
   158  029D                     	;# 
   159  029E                     	;# 
   160  029F                     	;# 
   161  0311                     	;# 
   162  0311                     	;# 
   163  0312                     	;# 
   164  0313                     	;# 
   165  0314                     	;# 
   166  0315                     	;# 
   167  0315                     	;# 
   168  0316                     	;# 
   169  0318                     	;# 
   170  0318                     	;# 
   171  0319                     	;# 
   172  031A                     	;# 
   173  031C                     	;# 
   174  031C                     	;# 
   175  031D                     	;# 
   176  031E                     	;# 
   177  0394                     	;# 
   178  0395                     	;# 
   179  0396                     	;# 
   180  0415                     	;# 
   181  0416                     	;# 
   182  0417                     	;# 
   183  041C                     	;# 
   184  041D                     	;# 
   185  041E                     	;# 
   186  0791                     	;# 
   187  0792                     	;# 
   188  0793                     	;# 
   189  0794                     	;# 
   190  0795                     	;# 
   191  0798                     	;# 
   192  0799                     	;# 
   193  07A0                     	;# 
   194  07A1                     	;# 
   195  07A3                     	;# 
   196  07A4                     	;# 
   197  07A6                     	;# 
   198  07A7                     	;# 
   199  07A9                     	;# 
   200  07AA                     	;# 
   201  0FE4                     	;# 
   202  0FE5                     	;# 
   203  0FE6                     	;# 
   204  0FE7                     	;# 
   205  0FE8                     	;# 
   206  0FE9                     	;# 
   207  0FEA                     	;# 
   208  0FEB                     	;# 
   209  0FED                     	;# 
   210  0FEE                     	;# 
   211  0FEF                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  008E                     	;# 
   245  0090                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009A                     	;# 
   255  009B                     	;# 
   256  009B                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  0110                     	;# 
   264  0111                     	;# 
   265  0112                     	;# 
   266  0113                     	;# 
   267  0114                     	;# 
   268  0115                     	;# 
   269  0116                     	;# 
   270  0117                     	;# 
   271  0118                     	;# 
   272  0119                     	;# 
   273  011A                     	;# 
   274  011B                     	;# 
   275  011D                     	;# 
   276  018C                     	;# 
   277  018D                     	;# 
   278  0191                     	;# 
   279  0191                     	;# 
   280  0192                     	;# 
   281  0193                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0194                     	;# 
   285  0195                     	;# 
   286  0196                     	;# 
   287  0199                     	;# 
   288  019A                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019C                     	;# 
   294  019C                     	;# 
   295  019D                     	;# 
   296  019E                     	;# 
   297  019F                     	;# 
   298  020D                     	;# 
   299  0210                     	;# 
   300  0211                     	;# 
   301  0212                     	;# 
   302  0213                     	;# 
   303  0214                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0216                     	;# 
   307  0217                     	;# 
   308  0291                     	;# 
   309  0291                     	;# 
   310  0292                     	;# 
   311  0293                     	;# 
   312  0294                     	;# 
   313  0295                     	;# 
   314  0295                     	;# 
   315  0296                     	;# 
   316  0298                     	;# 
   317  0298                     	;# 
   318  0299                     	;# 
   319  029A                     	;# 
   320  029B                     	;# 
   321  029C                     	;# 
   322  029C                     	;# 
   323  029D                     	;# 
   324  029E                     	;# 
   325  029F                     	;# 
   326  0311                     	;# 
   327  0311                     	;# 
   328  0312                     	;# 
   329  0313                     	;# 
   330  0314                     	;# 
   331  0315                     	;# 
   332  0315                     	;# 
   333  0316                     	;# 
   334  0318                     	;# 
   335  0318                     	;# 
   336  0319                     	;# 
   337  031A                     	;# 
   338  031C                     	;# 
   339  031C                     	;# 
   340  031D                     	;# 
   341  031E                     	;# 
   342  0394                     	;# 
   343  0395                     	;# 
   344  0396                     	;# 
   345  0415                     	;# 
   346  0416                     	;# 
   347  0417                     	;# 
   348  041C                     	;# 
   349  041D                     	;# 
   350  041E                     	;# 
   351  0791                     	;# 
   352  0792                     	;# 
   353  0793                     	;# 
   354  0794                     	;# 
   355  0795                     	;# 
   356  0798                     	;# 
   357  0799                     	;# 
   358  07A0                     	;# 
   359  07A1                     	;# 
   360  07A3                     	;# 
   361  07A4                     	;# 
   362  07A6                     	;# 
   363  07A7                     	;# 
   364  07A9                     	;# 
   365  07AA                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEB                     	;# 
   374  0FED                     	;# 
   375  0FEE                     	;# 
   376  0FEF                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  008C                     	;# 
   408  008D                     	;# 
   409  008E                     	;# 
   410  0090                     	;# 
   411  0091                     	;# 
   412  0092                     	;# 
   413  0093                     	;# 
   414  0095                     	;# 
   415  0096                     	;# 
   416  0097                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009A                     	;# 
   420  009B                     	;# 
   421  009B                     	;# 
   422  009C                     	;# 
   423  009D                     	;# 
   424  009E                     	;# 
   425  010C                     	;# 
   426  010D                     	;# 
   427  010E                     	;# 
   428  0110                     	;# 
   429  0111                     	;# 
   430  0112                     	;# 
   431  0113                     	;# 
   432  0114                     	;# 
   433  0115                     	;# 
   434  0116                     	;# 
   435  0117                     	;# 
   436  0118                     	;# 
   437  0119                     	;# 
   438  011A                     	;# 
   439  011B                     	;# 
   440  011D                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  0191                     	;# 
   444  0191                     	;# 
   445  0192                     	;# 
   446  0193                     	;# 
   447  0193                     	;# 
   448  0193                     	;# 
   449  0194                     	;# 
   450  0195                     	;# 
   451  0196                     	;# 
   452  0199                     	;# 
   453  019A                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019B                     	;# 
   458  019C                     	;# 
   459  019C                     	;# 
   460  019D                     	;# 
   461  019E                     	;# 
   462  019F                     	;# 
   463  020D                     	;# 
   464  0210                     	;# 
   465  0211                     	;# 
   466  0212                     	;# 
   467  0213                     	;# 
   468  0214                     	;# 
   469  0215                     	;# 
   470  0215                     	;# 
   471  0216                     	;# 
   472  0217                     	;# 
   473  0291                     	;# 
   474  0291                     	;# 
   475  0292                     	;# 
   476  0293                     	;# 
   477  0294                     	;# 
   478  0295                     	;# 
   479  0295                     	;# 
   480  0296                     	;# 
   481  0298                     	;# 
   482  0298                     	;# 
   483  0299                     	;# 
   484  029A                     	;# 
   485  029B                     	;# 
   486  029C                     	;# 
   487  029C                     	;# 
   488  029D                     	;# 
   489  029E                     	;# 
   490  029F                     	;# 
   491  0311                     	;# 
   492  0311                     	;# 
   493  0312                     	;# 
   494  0313                     	;# 
   495  0314                     	;# 
   496  0315                     	;# 
   497  0315                     	;# 
   498  0316                     	;# 
   499  0318                     	;# 
   500  0318                     	;# 
   501  0319                     	;# 
   502  031A                     	;# 
   503  031C                     	;# 
   504  031C                     	;# 
   505  031D                     	;# 
   506  031E                     	;# 
   507  0394                     	;# 
   508  0395                     	;# 
   509  0396                     	;# 
   510  0415                     	;# 
   511  0416                     	;# 
   512  0417                     	;# 
   513  041C                     	;# 
   514  041D                     	;# 
   515  041E                     	;# 
   516  0791                     	;# 
   517  0792                     	;# 
   518  0793                     	;# 
   519  0794                     	;# 
   520  0795                     	;# 
   521  0798                     	;# 
   522  0799                     	;# 
   523  07A0                     	;# 
   524  07A1                     	;# 
   525  07A3                     	;# 
   526  07A4                     	;# 
   527  07A6                     	;# 
   528  07A7                     	;# 
   529  07A9                     	;# 
   530  07AA                     	;# 
   531  0FE4                     	;# 
   532  0FE5                     	;# 
   533  0FE6                     	;# 
   534  0FE7                     	;# 
   535  0FE8                     	;# 
   536  0FE9                     	;# 
   537  0FEA                     	;# 
   538  0FEB                     	;# 
   539  0FED                     	;# 
   540  0FEE                     	;# 
   541  0FEF                     	;# 
   542                           
   543                           	psect	stringtext
   544  0300                     __pstringtext:	
   545  0300                     _AD_a:	
   546  0300  34D8               	retlw	216
   547  0301  34AD               	retlw	173
   548  0302  3405               	retlw	5
   549  0303  3400               	retlw	0
   550  0304  3434               	retlw	52
   551  0305  345A               	retlw	90
   552  0306  3402               	retlw	2
   553  0307  3400               	retlw	0
   554  0308  3416               	retlw	22
   555  0309  34CE               	retlw	206
   556  030A  3401               	retlw	1
   557  030B  3400               	retlw	0
   558  030C  348E               	retlw	142
   559  030D  3485               	retlw	133
   560  030E  3401               	retlw	1
   561  030F  3400               	retlw	0
   562  0310  3435               	retlw	53
   563  0311  3457               	retlw	87
   564  0312  3401               	retlw	1
   565  0313  3400               	retlw	0
   566  0314  3448               	retlw	72
   567  0315  3436               	retlw	54
   568  0316  3401               	retlw	1
   569  0317  3400               	retlw	0
   570  0318  3455               	retlw	85
   571  0319  341D               	retlw	29
   572  031A  3401               	retlw	1
   573  031B  3400               	retlw	0
   574  031C  341F               	retlw	31
   575  031D  340A               	retlw	10
   576  031E  3401               	retlw	1
   577  031F  3400               	retlw	0
   578  0320                     __end_of_AD_a:	
   579  0320                     _commands:	
   580  0320  3472               	retlw	low (STR_14| (0+32768))
   581  0321  3484               	retlw	high (STR_14| (0+32768))
   582  0322  34E9               	retlw	low _echo_command
   583  0323  340B               	retlw	high _echo_command
   584  0324  3483               	retlw	low (STR_15| (0+32768))
   585  0325  3484               	retlw	high (STR_15| (0+32768))
   586  0326  34E1               	retlw	low _remote_command
   587  0327  340C               	retlw	high _remote_command
   588  0328  3460               	retlw	low (STR_16| (0+32768))
   589  0329  3484               	retlw	high (STR_16| (0+32768))
   590  032A  3427               	retlw	low _enable1_command
   591  032B  340C               	retlw	high _enable1_command
   592  032C  3466               	retlw	low (STR_17| (0+32768))
   593  032D  3484               	retlw	high (STR_17| (0+32768))
   594  032E  3465               	retlw	low _enable2_command
   595  032F  340C               	retlw	high _enable2_command
   596  0330  346C               	retlw	low (STR_18| (0+32768))
   597  0331  3484               	retlw	high (STR_18| (0+32768))
   598  0332  34A3               	retlw	low _pulse_command
   599  0333  340C               	retlw	high _pulse_command
   600  0334  3487               	retlw	low (STR_19| (0+32768))
   601  0335  3484               	retlw	high (STR_19| (0+32768))
   602  0336  34CF               	retlw	low _power_command
   603  0337  340D               	retlw	high _power_command
   604  0338  3441               	retlw	low (STR_20| (0+32768))
   605  0339  3484               	retlw	high (STR_20| (0+32768))
   606  033A  34BE               	retlw	low _ttlout_command
   607  033B  3402               	retlw	high _ttlout_command
   608  033C  343A               	retlw	low (STR_21| (0+32768))
   609  033D  3484               	retlw	high (STR_21| (0+32768))
   610  033E  348D               	retlw	low _status_command
   611  033F  3404               	retlw	high _status_command
   612  0340                     __end_of_commands:	
   613  0340                     _AD_x:	
   614  0340  3410               	retlw	16
   615  0341  3400               	retlw	0
   616  0342  3420               	retlw	32
   617  0343  3400               	retlw	0
   618  0344  3430               	retlw	48
   619  0345  3400               	retlw	0
   620  0346  3440               	retlw	64
   621  0347  3400               	retlw	0
   622  0348  3450               	retlw	80
   623  0349  3400               	retlw	0
   624  034A  3460               	retlw	96
   625  034B  3400               	retlw	0
   626  034C  3470               	retlw	112
   627  034D  3400               	retlw	0
   628  034E  347F               	retlw	127
   629  034F  3400               	retlw	0
   630  0350                     __end_of_AD_x:	
   631  0350                     _dpowers:	
   632  0350  3401               	retlw	1
   633  0351  3400               	retlw	0
   634  0352  340A               	retlw	10
   635  0353  3400               	retlw	0
   636  0354  3464               	retlw	100
   637  0355  3400               	retlw	0
   638  0356  34E8               	retlw	232
   639  0357  3403               	retlw	3
   640  0358  3410               	retlw	16
   641  0359  3427               	retlw	39
   642  035A                     __end_of_dpowers:	
   643  035A                     _AD_b:	
   644  035A  3400               	retlw	0
   645  035B  3435               	retlw	53
   646  035C  3447               	retlw	71
   647  035D  3454               	retlw	84
   648  035E  3460               	retlw	96
   649  035F  346A               	retlw	106
   650  0360  3474               	retlw	116
   651  0361  347C               	retlw	124
   652  0362                     __end_of_AD_b:	
   653  0362                     __stringdata:	
   654  0362                     STR_3:	
   655  0362  3445               	retlw	69	;'E'
   656  0363  3452               	retlw	82	;'R'
   657  0364  3452               	retlw	82	;'R'
   658  0365  3434               	retlw	52	;'4'
   659  0366  3420               	retlw	32	;' '
   660  0367  3463               	retlw	99	;'c'
   661  0368  346F               	retlw	111	;'o'
   662  0369  346D               	retlw	109	;'m'
   663  036A  346D               	retlw	109	;'m'
   664  036B  3461               	retlw	97	;'a'
   665  036C  346E               	retlw	110	;'n'
   666  036D  3464               	retlw	100	;'d'
   667  036E  3420               	retlw	32	;' '
   668  036F  346C               	retlw	108	;'l'
   669  0370  3469               	retlw	105	;'i'
   670  0371  346E               	retlw	110	;'n'
   671  0372  3465               	retlw	101	;'e'
   672  0373  3420               	retlw	32	;' '
   673  0374  3462               	retlw	98	;'b'
   674  0375  3475               	retlw	117	;'u'
   675  0376  3466               	retlw	102	;'f'
   676  0377  3466               	retlw	102	;'f'
   677  0378  3465               	retlw	101	;'e'
   678  0379  3472               	retlw	114	;'r'
   679  037A  3420               	retlw	32	;' '
   680  037B  346F               	retlw	111	;'o'
   681  037C  3476               	retlw	118	;'v'
   682  037D  3465               	retlw	101	;'e'
   683  037E  3472               	retlw	114	;'r'
   684  037F  3466               	retlw	102	;'f'
   685  0380  346C               	retlw	108	;'l'
   686  0381  346F               	retlw	111	;'o'
   687  0382  3477               	retlw	119	;'w'
   688  0383  340D               	retlw	13
   689  0384  340A               	retlw	10
   690  0385  3400               	retlw	0
   691  0386                     STR_1:	
   692  0386  340D               	retlw	13
   693  0387  3453               	retlw	83	;'S'
   694  0388  3441               	retlw	65	;'A'
   695  0389  3457               	retlw	87	;'W'
   696  038A  3420               	retlw	32	;' '
   697  038B  344E               	retlw	78	;'N'
   698  038C  3465               	retlw	101	;'e'
   699  038D  3462               	retlw	98	;'b'
   700  038E  3475               	retlw	117	;'u'
   701  038F  346C               	retlw	108	;'l'
   702  0390  3469               	retlw	105	;'i'
   703  0391  347A               	retlw	122	;'z'
   704  0392  3465               	retlw	101	;'e'
   705  0393  3472               	retlw	114	;'r'
   706  0394  3420               	retlw	32	;' '
   707  0395  3452               	retlw	82	;'R'
   708  0396  3446               	retlw	70	;'F'
   709  0397  3420               	retlw	32	;' '
   710  0398  3444               	retlw	68	;'D'
   711  0399  3472               	retlw	114	;'r'
   712  039A  3469               	retlw	105	;'i'
   713  039B  3476               	retlw	118	;'v'
   714  039C  3465               	retlw	101	;'e'
   715  039D  3472               	retlw	114	;'r'
   716  039E  3420               	retlw	32	;' '
   717  039F  342D               	retlw	45	;'-'
   718  03A0  3420               	retlw	32	;' '
   719  03A1  3431               	retlw	49	;'1'
   720  03A2  342E               	retlw	46	;'.'
   721  03A3  3430               	retlw	48	;'0'
   722  03A4  340D               	retlw	13
   723  03A5  340A               	retlw	10
   724  03A6  3400               	retlw	0
   725  03A7                     STR_11:	
   726  03A7  3445               	retlw	69	;'E'
   727  03A8  3452               	retlw	82	;'R'
   728  03A9  3452               	retlw	82	;'R'
   729  03AA  3433               	retlw	51	;'3'
   730  03AB  3420               	retlw	32	;' '
   731  03AC  3462               	retlw	98	;'b'
   732  03AD  3461               	retlw	97	;'a'
   733  03AE  3464               	retlw	100	;'d'
   734  03AF  3420               	retlw	32	;' '
   735  03B0  3470               	retlw	112	;'p'
   736  03B1  3461               	retlw	97	;'a'
   737  03B2  3472               	retlw	114	;'r'
   738  03B3  3461               	retlw	97	;'a'
   739  03B4  346D               	retlw	109	;'m'
   740  03B5  3465               	retlw	101	;'e'
   741  03B6  3474               	retlw	116	;'t'
   742  03B7  3465               	retlw	101	;'e'
   743  03B8  3472               	retlw	114	;'r'
   744  03B9  3420               	retlw	32	;' '
   745  03BA  3476               	retlw	118	;'v'
   746  03BB  3461               	retlw	97	;'a'
   747  03BC  346C               	retlw	108	;'l'
   748  03BD  3475               	retlw	117	;'u'
   749  03BE  3465               	retlw	101	;'e'
   750  03BF  340D               	retlw	13
   751  03C0  340A               	retlw	10
   752  03C1  3400               	retlw	0
   753  03C2                     STR_9:	
   754  03C2  3445               	retlw	69	;'E'
   755  03C3  3452               	retlw	82	;'R'
   756  03C4  3452               	retlw	82	;'R'
   757  03C5  3432               	retlw	50	;'2'
   758  03C6  3420               	retlw	32	;' '
   759  03C7  3470               	retlw	112	;'p'
   760  03C8  3461               	retlw	97	;'a'
   761  03C9  3472               	retlw	114	;'r'
   762  03CA  3461               	retlw	97	;'a'
   763  03CB  346D               	retlw	109	;'m'
   764  03CC  3465               	retlw	101	;'e'
   765  03CD  3474               	retlw	116	;'t'
   766  03CE  3465               	retlw	101	;'e'
   767  03CF  3472               	retlw	114	;'r'
   768  03D0  3420               	retlw	32	;' '
   769  03D1  346D               	retlw	109	;'m'
   770  03D2  3469               	retlw	105	;'i'
   771  03D3  3473               	retlw	115	;'s'
   772  03D4  3473               	retlw	115	;'s'
   773  03D5  3469               	retlw	105	;'i'
   774  03D6  346E               	retlw	110	;'n'
   775  03D7  3467               	retlw	103	;'g'
   776  03D8  340D               	retlw	13
   777  03D9  340A               	retlw	10
   778  03DA  3400               	retlw	0
   779  03DB                     STR_7:	
   780  03DB  3445               	retlw	69	;'E'
   781  03DC  3452               	retlw	82	;'R'
   782  03DD  3452               	retlw	82	;'R'
   783  03DE  3431               	retlw	49	;'1'
   784  03DF  3420               	retlw	32	;' '
   785  03E0  3462               	retlw	98	;'b'
   786  03E1  3461               	retlw	97	;'a'
   787  03E2  3464               	retlw	100	;'d'
   788  03E3  3420               	retlw	32	;' '
   789  03E4  3463               	retlw	99	;'c'
   790  03E5  346F               	retlw	111	;'o'
   791  03E6  346D               	retlw	109	;'m'
   792  03E7  346D               	retlw	109	;'m'
   793  03E8  3461               	retlw	97	;'a'
   794  03E9  346E               	retlw	110	;'n'
   795  03EA  3464               	retlw	100	;'d'
   796  03EB  3420               	retlw	32	;' '
   797  03EC  3476               	retlw	118	;'v'
   798  03ED  3465               	retlw	101	;'e'
   799  03EE  3472               	retlw	114	;'r'
   800  03EF  3462               	retlw	98	;'b'
   801  03F0  340D               	retlw	13
   802  03F1  340A               	retlw	10
   803  03F2  3400               	retlw	0
   804  03F3                     STR_30:	
   805  03F3  3446               	retlw	70	;'F'
   806  03F4  344C               	retlw	76	;'L'
   807  03F5  3431               	retlw	49	;'1'
   808  03F6  343D               	retlw	61	;'='
   809  03F7  3425               	retlw	37	;'%'
   810  03F8  3464               	retlw	100	;'d'
   811  03F9  3420               	retlw	32	;' '
   812  03FA  3400               	retlw	0
   813  03FB                     STR_26:	
   814  03FB  3445               	retlw	69	;'E'
   815  03FC  344E               	retlw	78	;'N'
   816  03FD  3431               	retlw	49	;'1'
   817  03FE  343D               	retlw	61	;'='
   818  03FF  3425               	retlw	37	;'%'
   819  0400  3464               	retlw	100	;'d'
   820  0401  3420               	retlw	32	;' '
   821  0402  3400               	retlw	0
   822  0403                     STR_32:	
   823  0403  344F               	retlw	79	;'O'
   824  0404  3454               	retlw	84	;'T'
   825  0405  3431               	retlw	49	;'1'
   826  0406  343D               	retlw	61	;'='
   827  0407  3425               	retlw	37	;'%'
   828  0408  3464               	retlw	100	;'d'
   829  0409  3420               	retlw	32	;' '
   830  040A  3400               	retlw	0
   831  040B                     STR_31:	
   832  040B  3446               	retlw	70	;'F'
   833  040C  344C               	retlw	76	;'L'
   834  040D  3432               	retlw	50	;'2'
   835  040E  343D               	retlw	61	;'='
   836  040F  3425               	retlw	37	;'%'
   837  0410  3464               	retlw	100	;'d'
   838  0411  3420               	retlw	32	;' '
   839  0412  3400               	retlw	0
   840  0413                     STR_27:	
   841  0413  3445               	retlw	69	;'E'
   842  0414  344E               	retlw	78	;'N'
   843  0415  3432               	retlw	50	;'2'
   844  0416  343D               	retlw	61	;'='
   845  0417  3425               	retlw	37	;'%'
   846  0418  3464               	retlw	100	;'d'
   847  0419  3420               	retlw	32	;' '
   848  041A  3400               	retlw	0
   849  041B                     STR_28:	
   850  041B  3450               	retlw	80	;'P'
   851  041C  3455               	retlw	85	;'U'
   852  041D  344C               	retlw	76	;'L'
   853  041E  343D               	retlw	61	;'='
   854  041F  3425               	retlw	37	;'%'
   855  0420  3464               	retlw	100	;'d'
   856  0421  3420               	retlw	32	;' '
   857  0422  3400               	retlw	0
   858  0423                     STR_25:	
   859  0423  3452               	retlw	82	;'R'
   860  0424  3445               	retlw	69	;'E'
   861  0425  344D               	retlw	77	;'M'
   862  0426  343D               	retlw	61	;'='
   863  0427  3425               	retlw	37	;'%'
   864  0428  3464               	retlw	100	;'d'
   865  0429  3420               	retlw	32	;' '
   866  042A  3400               	retlw	0
   867  042B                     STR_29:	
   868  042B  3450               	retlw	80	;'P'
   869  042C  3457               	retlw	87	;'W'
   870  042D  3452               	retlw	82	;'R'
   871  042E  343D               	retlw	61	;'='
   872  042F  3425               	retlw	37	;'%'
   873  0430  3464               	retlw	100	;'d'
   874  0431  3420               	retlw	32	;' '
   875  0432  3400               	retlw	0
   876  0433                     STR_33:	
   877  0433  344F               	retlw	79	;'O'
   878  0434  3454               	retlw	84	;'T'
   879  0435  3432               	retlw	50	;'2'
   880  0436  343D               	retlw	61	;'='
   881  0437  3425               	retlw	37	;'%'
   882  0438  3464               	retlw	100	;'d'
   883  0439  3400               	retlw	0
   884  043A                     STR_21:	
   885  043A  3473               	retlw	115	;'s'
   886  043B  3474               	retlw	116	;'t'
   887  043C  3461               	retlw	97	;'a'
   888  043D  3474               	retlw	116	;'t'
   889  043E  3475               	retlw	117	;'u'
   890  043F  3473               	retlw	115	;'s'
   891  0440  3400               	retlw	0
   892  0441                     STR_20:	
   893  0441  3474               	retlw	116	;'t'
   894  0442  3474               	retlw	116	;'t'
   895  0443  346C               	retlw	108	;'l'
   896  0444  346F               	retlw	111	;'o'
   897  0445  3475               	retlw	117	;'u'
   898  0446  3474               	retlw	116	;'t'
   899  0447  3400               	retlw	0
   900  0448                     STR_6:	
   901  0448  3445               	retlw	69	;'E'
   902  0449  3452               	retlw	82	;'R'
   903  044A  3452               	retlw	82	;'R'
   904  044B  3431               	retlw	49	;'1'
   905  044C  340D               	retlw	13
   906  044D  3400               	retlw	0
   907  044E                     STR_8:	
   908  044E  3445               	retlw	69	;'E'
   909  044F  3452               	retlw	82	;'R'
   910  0450  3452               	retlw	82	;'R'
   911  0451  3432               	retlw	50	;'2'
   912  0452  340D               	retlw	13
   913  0453  3400               	retlw	0
   914  0454                     STR_10:	
   915  0454  3445               	retlw	69	;'E'
   916  0455  3452               	retlw	82	;'R'
   917  0456  3452               	retlw	82	;'R'
   918  0457  3433               	retlw	51	;'3'
   919  0458  340D               	retlw	13
   920  0459  3400               	retlw	0
   921  045A                     STR_2:	
   922  045A  3445               	retlw	69	;'E'
   923  045B  3452               	retlw	82	;'R'
   924  045C  3452               	retlw	82	;'R'
   925  045D  3434               	retlw	52	;'4'
   926  045E  340D               	retlw	13
   927  045F  3400               	retlw	0
   928  0460                     STR_16:	
   929  0460  3465               	retlw	101	;'e'
   930  0461  346E               	retlw	110	;'n'
   931  0462  3461               	retlw	97	;'a'
   932  0463  3462               	retlw	98	;'b'
   933  0464  3431               	retlw	49	;'1'
   934  0465  3400               	retlw	0
   935  0466                     STR_17:	
   936  0466  3465               	retlw	101	;'e'
   937  0467  346E               	retlw	110	;'n'
   938  0468  3461               	retlw	97	;'a'
   939  0469  3462               	retlw	98	;'b'
   940  046A  3432               	retlw	50	;'2'
   941  046B  3400               	retlw	0
   942  046C                     STR_18:	
   943  046C  3470               	retlw	112	;'p'
   944  046D  3475               	retlw	117	;'u'
   945  046E  346C               	retlw	108	;'l'
   946  046F  3473               	retlw	115	;'s'
   947  0470  3465               	retlw	101	;'e'
   948  0471  3400               	retlw	0
   949  0472                     STR_14:	
   950  0472  3465               	retlw	101	;'e'
   951  0473  3463               	retlw	99	;'c'
   952  0474  3468               	retlw	104	;'h'
   953  0475  346F               	retlw	111	;'o'
   954  0476  3400               	retlw	0
   955  0477                     STR_36:	
   956  0477  3408               	retlw	8
   957  0478  3420               	retlw	32	;' '
   958  0479  3408               	retlw	8
   959  047A  3400               	retlw	0
   960  047B                     STR_4:	
   961  047B  344F               	retlw	79	;'O'
   962  047C  344B               	retlw	75	;'K'
   963  047D  340D               	retlw	13
   964  047E  3400               	retlw	0
   965  047F                     STR_24:	
   966  047F  344F               	retlw	79	;'O'
   967  0480  344B               	retlw	75	;'K'
   968  0481  3420               	retlw	32	;' '
   969  0482  3400               	retlw	0
   970  0483                     STR_15:	
   971  0483  3472               	retlw	114	;'r'
   972  0484  3465               	retlw	101	;'e'
   973  0485  346D               	retlw	109	;'m'
   974  0486  3400               	retlw	0
   975  0487                     STR_19:	
   976  0487  3470               	retlw	112	;'p'
   977  0488  3477               	retlw	119	;'w'
   978  0489  3472               	retlw	114	;'r'
   979  048A  3400               	retlw	0
   980  048B                     STR_23:	
   981  048B  347E               	retlw	126	;'~'
   982  048C  3400               	retlw	0
   983  048D                     __end_of__stringdata:	
   984                           
   985                           ; #config settings
   986  0000                     
   987                           	psect	bitnvCOMMON
   988  03E8                     __pbitnvCOMMON:	
   989  03E8                     _enc_A_1:	
   990  03E8                     	ds	1
   991  03E9                     _enc_A_2:	
   992  03E9                     	ds	1
   993  03EA                     _enc_B_1:	
   994  03EA                     	ds	1
   995  03EB                     _enc_B_2:	
   996  03EB                     	ds	1
   997  001B                     _PR2	set	27
   998  001C                     _T2CON	set	28
   999  005F                     _GIE	set	95
  1000  0063                     _RA3	set	99
  1001  0064                     _RA4	set	100
  1002  0065                     _RA5	set	101
  1003  0066                     _RA6	set	102
  1004  0067                     _RA7	set	103
  1005  0068                     _RB0	set	104
  1006  0069                     _RB1	set	105
  1007  006A                     _RB2	set	106
  1008  006B                     _RB3	set	107
  1009  006C                     _RB4	set	108
  1010  006D                     _RB5	set	109
  1011  0070                     _RC0	set	112
  1012  0071                     _RC1	set	113
  1013  0072                     _RC2	set	114
  1014  0073                     _RC3	set	115
  1015  0074                     _RC4	set	116
  1016  0075                     _RC5	set	117
  1017  008D                     _RCIF	set	141
  1018  005D                     _TMR0IE	set	93
  1019  005A                     _TMR0IF	set	90
  1020  008C                     _TXIF	set	140
  1021  009D                     _ADCON0	set	157
  1022  009E                     _ADCON1	set	158
  1023  009C                     _ADRESH	set	156
  1024  009B                     _ADRESL	set	155
  1025  0095                     _OPTION_REG	set	149
  1026  0099                     _OSCCON	set	153
  1027  008C                     _TRISA	set	140
  1028  008D                     _TRISB	set	141
  1029  008E                     _TRISC	set	142
  1030  04E9                     _nDONE	set	1257
  1031  018C                     _ANSELA	set	396
  1032  018D                     _ANSELB	set	397
  1033  0199                     _RCREG	set	409
  1034  019C                     _SPBRGH	set	412
  1035  019B                     _SPBRGL	set	411
  1036  019A                     _TXREG	set	410
  1037  0CFB                     _BRG16	set	3323
  1038  0CF2                     _BRGH	set	3314
  1039  0CEC                     _CREN	set	3308
  1040  0CEF                     _SPEN	set	3311
  1041  0CF4                     _SYNC	set	3316
  1042  0CF5                     _TXEN	set	3317
  1043  029A                     _CCP2CON	set	666
  1044  0298                     _CCPR2L	set	664
  1045  029E                     _CCPTMRS0	set	670
  1046                           
  1047                           	psect	cinit
  1048  02B1                     start_initialization:	
  1049  02B1                     __initialization:	
  1050                           
  1051                           ; Clear objects allocated to BITCOMMON
  1052  02B1  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  1053                           
  1054                           ; Clear objects allocated to BITBANK0
  1055  02B2  01D8               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
  1056                           
  1057                           ; Clear objects allocated to BANK0
  1058  02B3  3043               	movlw	low __pbssBANK0
  1059  02B4  0084               	movwf	4
  1060  02B5  3000               	movlw	high __pbssBANK0
  1061  02B6  0085               	movwf	5
  1062  02B7  3015               	movlw	21
  1063  02B8  3189  21A4         	fcall	clear_ram0
  1064  02BA                     end_of_initialization:	
  1065                           ;End of C runtime variable initialization code
  1066                           
  1067  02BA                     __end_of__initialization:	
  1068  02BA  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1069  02BB  0020               	movlb	0
  1070  02BC  3186  2E09         	ljmp	_main	;jump to C main() function
  1071                           
  1072                           	psect	bitbssCOMMON
  1073  03E0                     __pbitbssCOMMON:	
  1074  03E0                     _channel1_enabled:	
  1075  03E0                     	ds	1
  1076  03E1                     _channel2_enabled:	
  1077  03E1                     	ds	1
  1078  03E2                     _echo_enabled:	
  1079  03E2                     	ds	1
  1080  03E3                     _pulse_enabled:	
  1081  03E3                     	ds	1
  1082  03E4                     tc_int@overtemp_1:	
  1083  03E4                     	ds	1
  1084  03E5                     tc_int@overtemp_2:	
  1085  03E5                     	ds	1
  1086                           
  1087                           	psect	bitbssBANK0
  1088  02C0                     __pbitbssBANK0:	
  1089  02C0                     _remote_enabled:	
  1090  02C0                     	ds	1
  1091                           
  1092                           	psect	bssBANK0
  1093  0043                     __pbssBANK0:	
  1094  0043                     tc_int@fet_temp_1:	
  1095  0043                     	ds	4
  1096  0047                     tc_int@fet_temp_2:	
  1097  0047                     	ds	4
  1098  004B                     _enc_position:	
  1099  004B                     	ds	2
  1100  004D                     _power_light_counter:	
  1101  004D                     	ds	2
  1102  004F                     tc_int@fault_timer_1:	
  1103  004F                     	ds	2
  1104  0051                     tc_int@fault_timer_2:	
  1105  0051                     	ds	2
  1106  0053                     tc_int@pulse_timer:	
  1107  0053                     	ds	2
  1108  0055                     _remote_power_level:	
  1109  0055                     	ds	1
  1110  0056                     strtok@sp:	
  1111  0056                     	ds	1
  1112  0057                     tc_int@fet_temp_timer:	
  1113  0057                     	ds	1
  1114                           
  1115                           	psect	clrtext
  1116  09A4                     clear_ram0:	
  1117                           ;	Called with FSR0 containing the base address, and
  1118                           ;	WREG with the size to clear
  1119                           
  1120  09A4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1121  09A5                     clrloop0:	
  1122  09A5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1123  09A6  3101               	addfsr 0,1
  1124  09A7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1125  09A8  29A5               	goto	clrloop0	;have we reached the end yet?
  1126  09A9  3400               	retlw	0	;all done for this memory range, return
  1127                           
  1128                           	psect	cstackBANK1
  1129  00A0                     __pcstackBANK1:	
  1130  00A0                     ??___lwmod:	
  1131  00A0                     atoi@sign:	
  1132                           ; 0 bytes @ 0x0
  1133                           
  1134  00A0                     serputstr@len:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  00A0                     strcspn@i:	
  1138                           ; 2 bytes @ 0x0
  1139                           
  1140  00A0                     strspn@i:	
  1141                           ; 2 bytes @ 0x0
  1142                           
  1143                           
  1144                           ; 2 bytes @ 0x0
  1145  00A0                     	ds	1
  1146  00A1                     ___lwmod@counter:	
  1147  00A1                     atoi@a:	
  1148                           ; 1 bytes @ 0x1
  1149                           
  1150                           
  1151                           ; 2 bytes @ 0x1
  1152  00A1                     	ds	1
  1153  00A2                     ?_sprintf:	
  1154  00A2                     strcspn@s1:	
  1155                           ; 2 bytes @ 0x2
  1156                           
  1157  00A2                     strspn@s1:	
  1158                           ; 1 bytes @ 0x2
  1159                           
  1160  00A2                     serputstr@i:	
  1161                           ; 1 bytes @ 0x2
  1162                           
  1163  00A2                     sprintf@f:	
  1164                           ; 2 bytes @ 0x2
  1165                           
  1166                           
  1167                           ; 2 bytes @ 0x2
  1168  00A2                     	ds	1
  1169  00A3                     ?_strtok:	
  1170  00A3                     atoi@s:	
  1171                           ; 1 bytes @ 0x3
  1172                           
  1173  00A3                     strtok@s2:	
  1174                           ; 1 bytes @ 0x3
  1175                           
  1176                           
  1177                           ; 2 bytes @ 0x3
  1178  00A3                     	ds	1
  1179  00A4                     ?_sergetline:	
  1180  00A4                     sergetline@bsize:	
  1181                           ; 2 bytes @ 0x4
  1182                           
  1183                           
  1184                           ; 2 bytes @ 0x4
  1185  00A4                     	ds	1
  1186  00A5                     ??_strtok:	
  1187                           
  1188                           ; 0 bytes @ 0x5
  1189  00A5                     	ds	1
  1190  00A6                     ??_sprintf:	
  1191  00A6                     sergetline@buf:	
  1192                           ; 0 bytes @ 0x6
  1193                           
  1194                           
  1195                           ; 1 bytes @ 0x6
  1196  00A6                     	ds	1
  1197  00A7                     sergetline@i:	
  1198                           
  1199                           ; 2 bytes @ 0x7
  1200  00A7                     	ds	1
  1201  00A8                     ?_parse_setup_cmd:	
  1202  00A8                     parse_setup_cmd@cmd_descr:	
  1203                           ; 2 bytes @ 0x8
  1204                           
  1205                           
  1206                           ; 1 bytes @ 0x8
  1207  00A8                     	ds	1
  1208  00A9                     sergetline@c:	
  1209                           
  1210                           ; 1 bytes @ 0x9
  1211  00A9                     	ds	1
  1212  00AA                     ??_parse_setup_cmd:	
  1213  00AA                     sprintf@ap:	
  1214                           ; 0 bytes @ 0xA
  1215                           
  1216                           
  1217                           ; 1 bytes @ 0xA
  1218  00AA                     	ds	1
  1219  00AB                     sprintf@flag:	
  1220                           
  1221                           ; 1 bytes @ 0xB
  1222  00AB                     	ds	1
  1223  00AC                     sprintf@prec:	
  1224                           
  1225                           ; 1 bytes @ 0xC
  1226  00AC                     	ds	1
  1227  00AD                     sprintf@_val:	
  1228                           
  1229                           ; 4 bytes @ 0xD
  1230  00AD                     	ds	3
  1231  00B0                     parse_setup_cmd@cbuf:	
  1232                           
  1233                           ; 10 bytes @ 0x10
  1234  00B0                     	ds	1
  1235  00B1                     sprintf@sp:	
  1236                           
  1237                           ; 1 bytes @ 0x11
  1238  00B1                     	ds	1
  1239  00B2                     sprintf@c:	
  1240                           
  1241                           ; 1 bytes @ 0x12
  1242  00B2                     	ds	1
  1243  00B3                     ?_echo_command:	
  1244  00B3                     ?_remote_command:	
  1245                           ; 2 bytes @ 0x13
  1246                           
  1247  00B3                     ?_enable1_command:	
  1248                           ; 2 bytes @ 0x13
  1249                           
  1250  00B3                     ?_enable2_command:	
  1251                           ; 2 bytes @ 0x13
  1252                           
  1253  00B3                     ?_pulse_command:	
  1254                           ; 2 bytes @ 0x13
  1255                           
  1256  00B3                     ?_power_command:	
  1257                           ; 2 bytes @ 0x13
  1258                           
  1259  00B3                     ?_ttlout_command:	
  1260                           ; 2 bytes @ 0x13
  1261                           
  1262  00B3                     ?_status_command:	
  1263                           ; 2 bytes @ 0x13
  1264                           
  1265  00B3                     echo_command@param1:	
  1266                           ; 2 bytes @ 0x13
  1267                           
  1268  00B3                     remote_command@param1:	
  1269                           ; 1 bytes @ 0x13
  1270                           
  1271  00B3                     enable1_command@param1:	
  1272                           ; 1 bytes @ 0x13
  1273                           
  1274  00B3                     enable2_command@param1:	
  1275                           ; 1 bytes @ 0x13
  1276                           
  1277  00B3                     pulse_command@param1:	
  1278                           ; 1 bytes @ 0x13
  1279                           
  1280  00B3                     power_command@param1:	
  1281                           ; 1 bytes @ 0x13
  1282                           
  1283  00B3                     ttlout_command@param1:	
  1284                           ; 1 bytes @ 0x13
  1285                           
  1286  00B3                     status_command@param1:	
  1287                           ; 1 bytes @ 0x13
  1288                           
  1289                           
  1290                           ; 1 bytes @ 0x13
  1291  00B3                     	ds	2
  1292  00B5                     ??_echo_command:	
  1293  00B5                     ??_remote_command:	
  1294                           ; 0 bytes @ 0x15
  1295                           
  1296  00B5                     ??_enable1_command:	
  1297                           ; 0 bytes @ 0x15
  1298                           
  1299  00B5                     ??_enable2_command:	
  1300                           ; 0 bytes @ 0x15
  1301                           
  1302  00B5                     ??_pulse_command:	
  1303                           ; 0 bytes @ 0x15
  1304                           
  1305  00B5                     ??_power_command:	
  1306                           ; 0 bytes @ 0x15
  1307                           
  1308  00B5                     ??_ttlout_command:	
  1309                           ; 0 bytes @ 0x15
  1310                           
  1311  00B5                     ??_status_command:	
  1312                           ; 0 bytes @ 0x15
  1313                           
  1314                           
  1315                           ; 0 bytes @ 0x15
  1316  00B5                     	ds	1
  1317  00B6                     echo_command@val:	
  1318  00B6                     remote_command@val:	
  1319                           ; 2 bytes @ 0x16
  1320                           
  1321  00B6                     enable1_command@val:	
  1322                           ; 2 bytes @ 0x16
  1323                           
  1324  00B6                     enable2_command@val:	
  1325                           ; 2 bytes @ 0x16
  1326                           
  1327  00B6                     pulse_command@val:	
  1328                           ; 2 bytes @ 0x16
  1329                           
  1330  00B6                     ttlout_command@val:	
  1331                           ; 2 bytes @ 0x16
  1332                           
  1333                           
  1334                           ; 2 bytes @ 0x16
  1335  00B6                     	ds	4
  1336  00BA                     parse_setup_cmd@num_cmds:	
  1337  00BA                     status_command@buf:	
  1338                           ; 2 bytes @ 0x1A
  1339                           
  1340                           
  1341                           ; 10 bytes @ 0x1A
  1342  00BA                     	ds	1
  1343  00BB                     power_command@temp:	
  1344                           
  1345                           ; 4 bytes @ 0x1B
  1346  00BB                     	ds	1
  1347  00BC                     parse_setup_cmd@buf:	
  1348                           
  1349                           ; 1 bytes @ 0x1C
  1350  00BC                     	ds	1
  1351  00BD                     parse_setup_cmd@i:	
  1352                           
  1353                           ; 2 bytes @ 0x1D
  1354  00BD                     	ds	2
  1355  00BF                     parse_setup_cmd@tokptr:	
  1356  00BF                     power_command@val:	
  1357                           ; 1 bytes @ 0x1F
  1358                           
  1359                           
  1360                           ; 2 bytes @ 0x1F
  1361  00BF                     	ds	5
  1362  00C4                     status_command@temp:	
  1363                           
  1364                           ; 4 bytes @ 0x24
  1365  00C4                     	ds	4
  1366  00C8                     ?_main:	
  1367  00C8                     main@argc:	
  1368                           ; 2 bytes @ 0x28
  1369                           
  1370                           
  1371                           ; 2 bytes @ 0x28
  1372  00C8                     	ds	2
  1373  00CA                     main@argv:	
  1374                           
  1375                           ; 2 bytes @ 0x2A
  1376  00CA                     	ds	2
  1377  00CC                     ??_main:	
  1378                           
  1379                           ; 0 bytes @ 0x2C
  1380  00CC                     	ds	1
  1381  00CD                     main@j:	
  1382                           
  1383                           ; 4 bytes @ 0x2D
  1384  00CD                     	ds	4
  1385  00D1                     main@cmdbuf:	
  1386                           
  1387                           ; 10 bytes @ 0x31
  1388  00D1                     	ds	10
  1389  00DB                     main@i:	
  1390                           
  1391                           ; 4 bytes @ 0x3B
  1392  00DB                     	ds	4
  1393  00DF                     main@status:	
  1394                           
  1395                           ; 2 bytes @ 0x3F
  1396  00DF                     	ds	2
  1397  00E1                     main@cmd_descr:	
  1398                           
  1399                           ; 12 bytes @ 0x41
  1400  00E1                     	ds	12
  1401                           
  1402                           	psect	cstackCOMMON
  1403  0070                     __pcstackCOMMON:	
  1404  0070                     ?_pic_setup:	
  1405  0070                     ?_isdigit:	
  1406                           ; 0 bytes @ 0x0
  1407                           
  1408  0070                     ?_tc_int:	
  1409                           ; 1 bit 
  1410                           
  1411  0070                     ?_serputchar:	
  1412                           ; 0 bytes @ 0x0
  1413                           
  1414  0070                     ?_tolower:	
  1415                           ; 0 bytes @ 0x0
  1416                           
  1417  0070                     ?_sergetchar:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0070                     ?i1___lmul:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423  0070                     i1___lmul@multiplier:	
  1424                           ; 4 bytes @ 0x0
  1425                           
  1426                           
  1427                           ; 4 bytes @ 0x0
  1428  0070                     	ds	4
  1429  0074                     i1___lmul@multiplicand:	
  1430                           
  1431                           ; 4 bytes @ 0x4
  1432  0074                     	ds	4
  1433  0078                     ??i1___lmul:	
  1434  0078                     i1___lmul@product:	
  1435                           ; 0 bytes @ 0x8
  1436                           
  1437                           
  1438                           ; 4 bytes @ 0x8
  1439  0078                     	ds	4
  1440                           
  1441                           	psect	cstackBANK0
  1442  0020                     __pcstackBANK0:	
  1443  0020                     ??_tc_int:	
  1444                           
  1445                           ; 0 bytes @ 0x0
  1446  0020                     	ds	8
  1447  0028                     _tc_int$70:	
  1448                           
  1449                           ; 1 bytes @ 0x8
  1450  0028                     	ds	1
  1451  0029                     _tc_int$71:	
  1452                           
  1453                           ; 1 bytes @ 0x9
  1454  0029                     	ds	1
  1455  002A                     _tc_int$72:	
  1456                           
  1457                           ; 1 bytes @ 0xA
  1458  002A                     	ds	1
  1459  002B                     _tc_int$73:	
  1460                           
  1461                           ; 1 bytes @ 0xB
  1462  002B                     	ds	1
  1463  002C                     _tc_int$74:	
  1464                           
  1465                           ; 1 bytes @ 0xC
  1466  002C                     	ds	1
  1467  002D                     _tc_int$75:	
  1468                           
  1469                           ; 1 bytes @ 0xD
  1470  002D                     	ds	1
  1471  002E                     tc_int@pwm:	
  1472                           
  1473                           ; 2 bytes @ 0xE
  1474  002E                     	ds	2
  1475  0030                     tc_int@AD_val:	
  1476                           
  1477                           ; 2 bytes @ 0x10
  1478  0030                     	ds	2
  1479  0032                     tc_int@slewed_period:	
  1480                           
  1481                           ; 2 bytes @ 0x12
  1482  0032                     	ds	2
  1483  0034                     tc_int@i:	
  1484                           
  1485                           ; 1 bytes @ 0x14
  1486  0034                     	ds	1
  1487  0035                     tc_int@period:	
  1488                           
  1489                           ; 2 bytes @ 0x15
  1490  0035                     	ds	2
  1491  0037                     ??_pic_setup:	
  1492  0037                     ??_tolower:	
  1493                           ; 0 bytes @ 0x17
  1494                           
  1495  0037                     ??_isdigit:	
  1496                           ; 0 bytes @ 0x17
  1497                           
  1498  0037                     ??_serputchar:	
  1499                           ; 0 bytes @ 0x17
  1500                           
  1501  0037                     ??_sergetchar:	
  1502                           ; 0 bytes @ 0x17
  1503                           
  1504  0037                     ?_strcpy:	
  1505                           ; 0 bytes @ 0x17
  1506                           
  1507  0037                     ?_strlen:	
  1508                           ; 1 bytes @ 0x17
  1509                           
  1510  0037                     ?_strcmp:	
  1511                           ; 2 bytes @ 0x17
  1512                           
  1513  0037                     ?_strchr:	
  1514                           ; 2 bytes @ 0x17
  1515                           
  1516  0037                     ?___wmul:	
  1517                           ; 2 bytes @ 0x17
  1518                           
  1519  0037                     ?___lwdiv:	
  1520                           ; 2 bytes @ 0x17
  1521                           
  1522  0037                     ?___lmul:	
  1523                           ; 2 bytes @ 0x17
  1524                           
  1525  0037                     serputchar@c:	
  1526                           ; 4 bytes @ 0x17
  1527                           
  1528  0037                     _isdigit$582:	
  1529                           ; 1 bytes @ 0x17
  1530                           
  1531  0037                     strcpy@from:	
  1532                           ; 1 bytes @ 0x17
  1533                           
  1534  0037                     tolower@c:	
  1535                           ; 1 bytes @ 0x17
  1536                           
  1537  0037                     ___wmul@multiplier:	
  1538                           ; 1 bytes @ 0x17
  1539                           
  1540  0037                     ___lwdiv@divisor:	
  1541                           ; 2 bytes @ 0x17
  1542                           
  1543  0037                     strcmp@s2:	
  1544                           ; 2 bytes @ 0x17
  1545                           
  1546  0037                     strlen@s:	
  1547                           ; 2 bytes @ 0x17
  1548                           
  1549  0037                     strchr@ptr:	
  1550                           ; 2 bytes @ 0x17
  1551                           
  1552  0037                     ___lmul@multiplier:	
  1553                           ; 2 bytes @ 0x17
  1554                           
  1555                           
  1556                           ; 4 bytes @ 0x17
  1557  0037                     	ds	1
  1558  0038                     ??_strcpy:	
  1559  0038                     isdigit@c:	
  1560                           ; 0 bytes @ 0x18
  1561                           
  1562                           
  1563                           ; 1 bytes @ 0x18
  1564  0038                     	ds	1
  1565  0039                     ??_strlen:	
  1566  0039                     ??_strcmp:	
  1567                           ; 0 bytes @ 0x19
  1568                           
  1569  0039                     strcpy@cp:	
  1570                           ; 0 bytes @ 0x19
  1571                           
  1572  0039                     ___wmul@multiplicand:	
  1573                           ; 1 bytes @ 0x19
  1574                           
  1575  0039                     ___lwdiv@dividend:	
  1576                           ; 2 bytes @ 0x19
  1577                           
  1578  0039                     strchr@chr:	
  1579                           ; 2 bytes @ 0x19
  1580                           
  1581                           
  1582                           ; 2 bytes @ 0x19
  1583  0039                     	ds	1
  1584  003A                     strcmp@r:	
  1585  003A                     strcpy@to:	
  1586                           ; 1 bytes @ 0x1A
  1587                           
  1588                           
  1589                           ; 1 bytes @ 0x1A
  1590  003A                     	ds	1
  1591  003B                     ??_strchr:	
  1592  003B                     ??___wmul:	
  1593                           ; 0 bytes @ 0x1B
  1594                           
  1595  003B                     ??___lwdiv:	
  1596                           ; 0 bytes @ 0x1B
  1597                           
  1598  003B                     strcmp@s1:	
  1599                           ; 0 bytes @ 0x1B
  1600                           
  1601  003B                     ___wmul@product:	
  1602                           ; 1 bytes @ 0x1B
  1603                           
  1604  003B                     strlen@cp:	
  1605                           ; 2 bytes @ 0x1B
  1606                           
  1607  003B                     ___lmul@multiplicand:	
  1608                           ; 2 bytes @ 0x1B
  1609                           
  1610                           
  1611                           ; 4 bytes @ 0x1B
  1612  003B                     	ds	1
  1613  003C                     ___lwdiv@counter:	
  1614                           
  1615                           ; 1 bytes @ 0x1C
  1616  003C                     	ds	1
  1617  003D                     ?_serputstr:	
  1618  003D                     ?_atoi:	
  1619                           ; 0 bytes @ 0x1D
  1620                           
  1621  003D                     ?_strspn:	
  1622                           ; 2 bytes @ 0x1D
  1623                           
  1624  003D                     ?_strcspn:	
  1625                           ; 2 bytes @ 0x1D
  1626                           
  1627  003D                     serputstr@line:	
  1628                           ; 2 bytes @ 0x1D
  1629                           
  1630  003D                     ___lwdiv@quotient:	
  1631                           ; 2 bytes @ 0x1D
  1632                           
  1633  003D                     strcspn@s2:	
  1634                           ; 2 bytes @ 0x1D
  1635                           
  1636  003D                     strspn@s2:	
  1637                           ; 2 bytes @ 0x1D
  1638                           
  1639                           
  1640                           ; 2 bytes @ 0x1D
  1641  003D                     	ds	2
  1642  003F                     ??_serputstr:	
  1643  003F                     ??_atoi:	
  1644                           ; 0 bytes @ 0x1F
  1645                           
  1646  003F                     ??_strspn:	
  1647                           ; 0 bytes @ 0x1F
  1648                           
  1649  003F                     ??_strcspn:	
  1650                           ; 0 bytes @ 0x1F
  1651                           
  1652  003F                     ??___lmul:	
  1653                           ; 0 bytes @ 0x1F
  1654                           
  1655  003F                     ?___lwmod:	
  1656                           ; 0 bytes @ 0x1F
  1657                           
  1658  003F                     ___lwmod@divisor:	
  1659                           ; 2 bytes @ 0x1F
  1660                           
  1661  003F                     ___lmul@product:	
  1662                           ; 2 bytes @ 0x1F
  1663                           
  1664                           
  1665                           ; 4 bytes @ 0x1F
  1666  003F                     	ds	1
  1667  0040                     ??_sergetline:	
  1668                           
  1669                           ; 0 bytes @ 0x20
  1670  0040                     	ds	1
  1671  0041                     strtok@s1:	
  1672  0041                     ___lwmod@dividend:	
  1673                           ; 1 bytes @ 0x21
  1674                           
  1675                           
  1676                           ; 2 bytes @ 0x21
  1677  0041                     	ds	2
  1678                           
  1679                           	psect	maintext
  1680  0609                     __pmaintext:	
  1681 ;;
  1682 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1683 ;;
  1684 ;; *************** function _main *****************
  1685 ;; Defined at:
  1686 ;;		line 35 in file "Main.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  argc            2   40[BANK1 ] int 
  1689 ;;  argv            2   42[BANK1 ] PTR PTR unsigned char 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  temp           20    0        unsigned char [20]
  1692 ;;  cmd_descr      12   65[BANK1 ] struct command
  1693 ;;  cmdbuf         10   49[BANK1 ] unsigned char [10]
  1694 ;;  i               4   59[BANK1 ] long 
  1695 ;;  j               4   45[BANK1 ] long 
  1696 ;;  status          2   63[BANK1 ] int 
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  2   40[BANK1 ] int 
  1699 ;; Registers used:
  1700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 17F/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1706 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1707 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  1708 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1709 ;;      Totals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0
  1710 ;;Total ram usage:       37 bytes
  1711 ;; Hardware stack levels required when called:    6
  1712 ;; This function calls:
  1713 ;;		___lmul
  1714 ;;		_echo_command
  1715 ;;		_enable1_command
  1716 ;;		_enable2_command
  1717 ;;		_parse_setup_cmd
  1718 ;;		_pic_setup
  1719 ;;		_power_command
  1720 ;;		_pulse_command
  1721 ;;		_remote_command
  1722 ;;		_sergetline
  1723 ;;		_serputstr
  1724 ;;		_status_command
  1725 ;;		_strlen
  1726 ;;		_ttlout_command
  1727 ;; This function is called by:
  1728 ;;		Startup code after reset
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           
  1733                           ;psect for function _main
  1734  0609                     _main:	
  1735                           
  1736                           ;Main.c: 36: int status;
  1737                           ;Main.c: 37: long int i, j;
  1738                           ;Main.c: 38: unsigned char cmdbuf[10], temp[20];
  1739                           ;Main.c: 39: CMD_DESRCIPTION cmd_descr;
  1740                           ;Main.c: 42: pic_setup();
  1741                           
  1742                           ;incstack = 0
  1743                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1744  0609  318D  2522  3186   	fcall	_pic_setup
  1745                           
  1746                           ;Main.c: 45: for (i = 0; i < 10000; ++i) {
  1747  060C  3000               	movlw	0
  1748  060D  0021               	movlb	1	; select bank1
  1749  060E  00DE               	movwf	(main@i+3)^(0+128)
  1750  060F  3000               	movlw	0
  1751  0610  00DD               	movwf	(main@i+2)^(0+128)
  1752  0611  3000               	movlw	0
  1753  0612  00DC               	movwf	(main@i+1)^(0+128)
  1754  0613  3000               	movlw	0
  1755  0614  00DB               	movwf	main@i^(0+128)
  1756  0615  085E               	movf	(main@i+3)^(0+128),w
  1757  0616  3A80               	xorlw	128
  1758  0617  00CC               	movwf	??_main^(0+128)
  1759  0618  3000               	movlw	0
  1760  0619  3A80               	xorlw	128
  1761  061A  024C               	subwf	??_main^(0+128),w
  1762  061B  1D03               	skipz
  1763  061C  2E27               	goto	u6563
  1764  061D  3000               	movlw	0
  1765  061E  025D               	subwf	(main@i+2)^(0+128),w
  1766  061F  1D03               	skipz
  1767  0620  2E27               	goto	u6563
  1768  0621  3027               	movlw	39
  1769  0622  025C               	subwf	(main@i+1)^(0+128),w
  1770  0623  1D03               	skipz
  1771  0624  2E27               	goto	u6563
  1772  0625  3010               	movlw	16
  1773  0626  025B               	subwf	main@i^(0+128),w
  1774  0627                     u6563:	
  1775  0627  1803               	btfsc	3,0
  1776  0628  2E77               	goto	l4310
  1777  0629                     l4304:	
  1778                           
  1779                           ;Main.c: 46: j = i * i;
  1780  0629  085E               	movf	(main@i+3)^(0+128),w
  1781  062A  0020               	movlb	0	; select bank0
  1782  062B  00BA               	movwf	___lmul@multiplier+3
  1783  062C  0021               	movlb	1	; select bank1
  1784  062D  085D               	movf	(main@i+2)^(0+128),w
  1785  062E  0020               	movlb	0	; select bank0
  1786  062F  00B9               	movwf	___lmul@multiplier+2
  1787  0630  0021               	movlb	1	; select bank1
  1788  0631  085C               	movf	(main@i+1)^(0+128),w
  1789  0632  0020               	movlb	0	; select bank0
  1790  0633  00B8               	movwf	___lmul@multiplier+1
  1791  0634  0021               	movlb	1	; select bank1
  1792  0635  085B               	movf	main@i^(0+128),w
  1793  0636  0020               	movlb	0	; select bank0
  1794  0637  00B7               	movwf	___lmul@multiplier
  1795  0638  0021               	movlb	1	; select bank1
  1796  0639  085E               	movf	(main@i+3)^(0+128),w
  1797  063A  0020               	movlb	0	; select bank0
  1798  063B  00BE               	movwf	___lmul@multiplicand+3
  1799  063C  0021               	movlb	1	; select bank1
  1800  063D  085D               	movf	(main@i+2)^(0+128),w
  1801  063E  0020               	movlb	0	; select bank0
  1802  063F  00BD               	movwf	___lmul@multiplicand+2
  1803  0640  0021               	movlb	1	; select bank1
  1804  0641  085C               	movf	(main@i+1)^(0+128),w
  1805  0642  0020               	movlb	0	; select bank0
  1806  0643  00BC               	movwf	___lmul@multiplicand+1
  1807  0644  0021               	movlb	1	; select bank1
  1808  0645  085B               	movf	main@i^(0+128),w
  1809  0646  0020               	movlb	0	; select bank0
  1810  0647  00BB               	movwf	___lmul@multiplicand
  1811  0648  318A  229A  3186   	fcall	___lmul
  1812  064B  0020               	movlb	0	; select bank0
  1813  064C  083A               	movf	?___lmul+3,w
  1814  064D  0021               	movlb	1	; select bank1
  1815  064E  00D0               	movwf	(main@j+3)^(0+128)
  1816  064F  0020               	movlb	0	; select bank0
  1817  0650  0839               	movf	?___lmul+2,w
  1818  0651  0021               	movlb	1	; select bank1
  1819  0652  00CF               	movwf	(main@j+2)^(0+128)
  1820  0653  0020               	movlb	0	; select bank0
  1821  0654  0838               	movf	?___lmul+1,w
  1822  0655  0021               	movlb	1	; select bank1
  1823  0656  00CE               	movwf	(main@j+1)^(0+128)
  1824  0657  0020               	movlb	0	; select bank0
  1825  0658  0837               	movf	?___lmul,w
  1826  0659  0021               	movlb	1	; select bank1
  1827  065A  00CD               	movwf	main@j^(0+128)
  1828  065B  3001               	movlw	1
  1829  065C  07DB               	addwf	main@i^(0+128),f
  1830  065D  3000               	movlw	0
  1831  065E  3DDC               	addwfc	(main@i+1)^(0+128),f
  1832  065F  3000               	movlw	0
  1833  0660  3DDD               	addwfc	(main@i+2)^(0+128),f
  1834  0661  3000               	movlw	0
  1835  0662  3DDE               	addwfc	(main@i+3)^(0+128),f
  1836  0663  085E               	movf	(main@i+3)^(0+128),w
  1837  0664  3A80               	xorlw	128
  1838  0665  00CC               	movwf	??_main^(0+128)
  1839  0666  3000               	movlw	0
  1840  0667  3A80               	xorlw	128
  1841  0668  024C               	subwf	??_main^(0+128),w
  1842  0669  1D03               	skipz
  1843  066A  2E75               	goto	u6573
  1844  066B  3000               	movlw	0
  1845  066C  025D               	subwf	(main@i+2)^(0+128),w
  1846  066D  1D03               	skipz
  1847  066E  2E75               	goto	u6573
  1848  066F  3027               	movlw	39
  1849  0670  025C               	subwf	(main@i+1)^(0+128),w
  1850  0671  1D03               	skipz
  1851  0672  2E75               	goto	u6573
  1852  0673  3010               	movlw	16
  1853  0674  025B               	subwf	main@i^(0+128),w
  1854  0675                     u6573:	
  1855  0675  1C03               	skipc
  1856  0676  2E29               	goto	l4304
  1857  0677                     l4310:	
  1858                           
  1859                           ;Main.c: 47: }
  1860                           ;Main.c: 49: serputstr("\rSAW Nebulizer RF Driver - " "1.0" "\r\n");
  1861  0677  3086               	movlw	low (STR_1| (0+32768))
  1862  0678  0020               	movlb	0	; select bank0
  1863  0679  00BD               	movwf	serputstr@line
  1864  067A  3083               	movlw	high (STR_1| (0+32768))
  1865  067B  2EAD               	goto	L2
  1866  067C                     l4316:	
  1867                           
  1868                           ;Main.c: 56: if (!echo_enabled) {
  1869  067C  197C               	btfsc	_echo_enabled/(0+8),_echo_enabled& (0+7)
  1870  067D  2E83               	goto	l4320
  1871                           
  1872                           ;Main.c: 57: serputstr("ERR4\r");
  1873  067E  305A               	movlw	low (STR_2| (0+32768))
  1874  067F  0020               	movlb	0	; select bank0
  1875  0680  00BD               	movwf	serputstr@line
  1876  0681  3084               	movlw	high (STR_2| (0+32768))
  1877  0682  2EAD               	goto	L2
  1878  0683                     l4320:	
  1879                           ;Main.c: 58: } else {
  1880                           
  1881                           
  1882                           ;Main.c: 59: serputstr("ERR4 command line buffer overflow\r\n");
  1883  0683  3062               	movlw	low (STR_3| (0+32768))
  1884  0684  0020               	movlb	0	; select bank0
  1885  0685  00BD               	movwf	serputstr@line
  1886  0686  3083               	movlw	high (STR_3| (0+32768))
  1887  0687  2EAD               	goto	L2
  1888  0688                     l4324:	
  1889                           ;Main.c: 60: }
  1890                           ;Main.c: 61: continue;
  1891                           
  1892                           
  1893                           ;Main.c: 65: serputstr("OK\r");
  1894  0688  307B               	movlw	low (STR_4| (0+32768))
  1895  0689  2F13               	goto	L4
  1896  068A                     l4334:	
  1897                           ;Main.c: 67: continue;
  1898                           
  1899                           ;Main.c: 66: if (echo_enabled) serputstr("\n");
  1900                           
  1901                           
  1902                           ;Main.c: 73: if (!echo_enabled) {
  1903  068A  197C               	btfsc	_echo_enabled/(0+8),_echo_enabled& (0+7)
  1904  068B  2E91               	goto	l4338
  1905                           
  1906                           ;Main.c: 74: serputstr("ERR1\r");
  1907  068C  3048               	movlw	low (STR_6| (0+32768))
  1908  068D  0020               	movlb	0	; select bank0
  1909  068E  00BD               	movwf	serputstr@line
  1910  068F  3084               	movlw	high (STR_6| (0+32768))
  1911  0690  2EAD               	goto	L2
  1912  0691                     l4338:	
  1913                           ;Main.c: 75: } else {
  1914                           
  1915                           
  1916                           ;Main.c: 76: serputstr("ERR1 bad command verb\r\n");
  1917  0691  30DB               	movlw	low (STR_7| (0+32768))
  1918  0692  0020               	movlb	0	; select bank0
  1919  0693  00BD               	movwf	serputstr@line
  1920  0694  3083               	movlw	high (STR_7| (0+32768))
  1921  0695  2EAD               	goto	L2
  1922  0696                     l4344:	
  1923                           ;Main.c: 77: }
  1924                           ;Main.c: 78: continue;
  1925                           
  1926                           
  1927                           ;Main.c: 84: if (!echo_enabled) {
  1928  0696  197C               	btfsc	_echo_enabled/(0+8),_echo_enabled& (0+7)
  1929  0697  2E9D               	goto	l4348
  1930                           
  1931                           ;Main.c: 85: serputstr("ERR2\r");
  1932  0698  304E               	movlw	low (STR_8| (0+32768))
  1933  0699  0020               	movlb	0	; select bank0
  1934  069A  00BD               	movwf	serputstr@line
  1935  069B  3084               	movlw	high (STR_8| (0+32768))
  1936  069C  2EAD               	goto	L2
  1937  069D                     l4348:	
  1938                           ;Main.c: 86: } else {
  1939                           
  1940                           
  1941                           ;Main.c: 87: serputstr("ERR2 parameter missing\r\n");
  1942  069D  30C2               	movlw	low (STR_9| (0+32768))
  1943  069E  0020               	movlb	0	; select bank0
  1944  069F  00BD               	movwf	serputstr@line
  1945  06A0  3083               	movlw	high (STR_9| (0+32768))
  1946  06A1  2EAD               	goto	L2
  1947  06A2                     l4354:	
  1948                           ;Main.c: 91: } else if (status == -2) {
  1949                           
  1950                           ;Main.c: 88: }
  1951                           ;Main.c: 89: continue;
  1952                           
  1953                           
  1954                           ;Main.c: 92: if (!echo_enabled) {
  1955  06A2  197C               	btfsc	_echo_enabled/(0+8),_echo_enabled& (0+7)
  1956  06A3  2EA9               	goto	l4358
  1957                           
  1958                           ;Main.c: 93: serputstr("ERR3\r");
  1959  06A4  3054               	movlw	low (STR_10| (0+32768))
  1960  06A5  0020               	movlb	0	; select bank0
  1961  06A6  00BD               	movwf	serputstr@line
  1962  06A7  3084               	movlw	high (STR_10| (0+32768))
  1963  06A8  2EAD               	goto	L2
  1964  06A9                     l4358:	
  1965                           ;Main.c: 94: } else {
  1966                           
  1967                           
  1968                           ;Main.c: 95: serputstr("ERR3 bad parameter value\r\n");
  1969  06A9  30A7               	movlw	low (STR_11| (0+32768))
  1970  06AA  0020               	movlb	0	; select bank0
  1971  06AB  00BD               	movwf	serputstr@line
  1972  06AC  3083               	movlw	high (STR_11| (0+32768))
  1973  06AD                     L2:	
  1974  06AD  00BE               	movwf	serputstr@line+1
  1975  06AE  318B  2337  3186   	fcall	_serputstr
  1976  06B1                     l4312:	
  1977                           ;Main.c: 53: while(1) {
  1978                           
  1979                           ;Main.c: 102: } else {
  1980                           
  1981                           ;Main.c: 100: continue;
  1982                           
  1983                           ;Main.c: 99: } else if (status == -3) {
  1984                           
  1985                           ;Main.c: 96: }
  1986                           ;Main.c: 97: continue;
  1987                           
  1988                           
  1989                           ;Main.c: 54: status = sergetline(cmdbuf, sizeof(cmdbuf));
  1990  06B1  300A               	movlw	10
  1991  06B2  0021               	movlb	1	; select bank1
  1992  06B3  00A4               	movwf	sergetline@bsize^(0+128)
  1993  06B4  3000               	movlw	0
  1994  06B5  00A5               	movwf	(sergetline@bsize^(0+128)+1)
  1995  06B6  30D1               	movlw	main@cmdbuf& (0+255)
  1996  06B7  318E  26CD  3186   	fcall	_sergetline
  1997  06BA  0021               	movlb	1	; select bank1
  1998  06BB  0825               	movf	(?_sergetline+1)^(0+128),w
  1999  06BC  01E0               	clrf	(main@status+1)^(0+128)
  2000  06BD  07E0               	addwf	(main@status+1)^(0+128),f
  2001  06BE  0824               	movf	?_sergetline^(0+128),w
  2002  06BF  01DF               	clrf	main@status^(0+128)
  2003  06C0  07DF               	addwf	main@status^(0+128),f
  2004                           
  2005                           ;Main.c: 55: if (status != 0) {
  2006  06C1  0860               	movf	(main@status+1)^(0+128),w
  2007  06C2  045F               	iorwf	main@status^(0+128),w
  2008  06C3  1D03               	btfss	3,2
  2009  06C4  2E7C               	goto	l4316
  2010                           
  2011                           ;Main.c: 62: }
  2012                           ;Main.c: 64: if (strlen(cmdbuf) == 0) {
  2013  06C5  30D1               	movlw	low main@cmdbuf
  2014  06C6  0020               	movlb	0	; select bank0
  2015  06C7  00B7               	movwf	strlen@s
  2016  06C8  3000               	movlw	high main@cmdbuf
  2017  06C9  00B8               	movwf	strlen@s+1
  2018  06CA  318A  2221  3186   	fcall	_strlen
  2019  06CD  0020               	movlb	0	; select bank0
  2020  06CE  0838               	movf	?_strlen+1,w
  2021  06CF  0437               	iorwf	?_strlen,w
  2022  06D0  1903               	btfsc	3,2
  2023  06D1  2E88               	goto	l4324
  2024                           
  2025                           ;Main.c: 68: }
  2026                           ;Main.c: 71: status = parse_setup_cmd(cmdbuf, &cmd_descr);
  2027  06D2  30E1               	movlw	main@cmd_descr& (0+255)
  2028  06D3  0021               	movlb	1	; select bank1
  2029  06D4  00CC               	movwf	??_main^(0+128)
  2030  06D5  084C               	movf	??_main^(0+128),w
  2031  06D6  00A8               	movwf	parse_setup_cmd@cmd_descr^(0+128)
  2032  06D7  30D1               	movlw	main@cmdbuf& (0+255)
  2033  06D8  318F  275F  3186   	fcall	_parse_setup_cmd
  2034  06DB  0021               	movlb	1	; select bank1
  2035  06DC  0829               	movf	(?_parse_setup_cmd+1)^(0+128),w
  2036  06DD  01E0               	clrf	(main@status+1)^(0+128)
  2037  06DE  07E0               	addwf	(main@status+1)^(0+128),f
  2038  06DF  0828               	movf	?_parse_setup_cmd^(0+128),w
  2039  06E0  01DF               	clrf	main@status^(0+128)
  2040  06E1  07DF               	addwf	main@status^(0+128),f
  2041                           
  2042                           ;Main.c: 72: if (status != 0) {
  2043  06E2  0860               	movf	(main@status+1)^(0+128),w
  2044  06E3  045F               	iorwf	main@status^(0+128),w
  2045  06E4  1D03               	btfss	3,2
  2046  06E5  2E8A               	goto	l4334
  2047                           
  2048                           ;Main.c: 79: }
  2049                           ;Main.c: 82: status = (*cmd_descr.cmdptr)(cmd_descr.arg1);
  2050  06E6  30E1               	movlw	main@cmd_descr& (0+255)
  2051  06E7  0021               	movlb	1	; select bank1
  2052  06E8  00CC               	movwf	??_main^(0+128)
  2053  06E9  084C               	movf	??_main^(0+128),w
  2054  06EA  00B3               	movwf	status_command@param1^(0+128)
  2055  06EB  086C               	movf	(main@cmd_descr+11)^(0+128),w
  2056  06EC  008A               	movwf	10
  2057  06ED  086B               	movf	(main@cmd_descr+10)^(0+128),w
  2058  06EE  000A               	callw
  2059  06EF  3186               	pagesel	$
  2060  06F0  0021               	movlb	1	; select bank1
  2061  06F1  0834               	movf	(?_status_command+1)^(0+128),w
  2062  06F2  01E0               	clrf	(main@status+1)^(0+128)
  2063  06F3  07E0               	addwf	(main@status+1)^(0+128),f
  2064  06F4  0833               	movf	?_status_command^(0+128),w
  2065  06F5  01DF               	clrf	main@status^(0+128)
  2066  06F6  07DF               	addwf	main@status^(0+128),f
  2067                           
  2068                           ;Main.c: 83: if (status == -1) {
  2069  06F7  30FF               	movlw	255
  2070  06F8  0660               	xorwf	(main@status+1)^(0+128),w
  2071  06F9  1D03               	skipz
  2072  06FA  2EFD               	goto	u6645
  2073  06FB  30FF               	movlw	255
  2074  06FC  065F               	xorwf	main@status^(0+128),w
  2075  06FD                     u6645:	
  2076  06FD  1903               	btfsc	3,2
  2077  06FE  2E96               	goto	l4344
  2078  06FF  30FF               	movlw	255
  2079  0700  0021               	movlb	1	; select bank1
  2080  0701  0660               	xorwf	(main@status+1)^(0+128),w
  2081  0702  1D03               	skipz
  2082  0703  2F06               	goto	u6665
  2083  0704  30FE               	movlw	254
  2084  0705  065F               	xorwf	main@status^(0+128),w
  2085  0706                     u6665:	
  2086  0706  1903               	btfsc	3,2
  2087  0707  2EA2               	goto	l4354
  2088  0708  30FF               	movlw	255
  2089  0709  0021               	movlb	1	; select bank1
  2090  070A  0660               	xorwf	(main@status+1)^(0+128),w
  2091  070B  1D03               	skipz
  2092  070C  2F0F               	goto	u6685
  2093  070D  30FD               	movlw	253
  2094  070E  065F               	xorwf	main@status^(0+128),w
  2095  070F                     u6685:	
  2096  070F  1903               	btfsc	3,2
  2097  0710  2EB1               	goto	l4312
  2098                           
  2099                           ;Main.c: 103: serputstr("OK\r");
  2100  0711  307B               	movlw	low (STR_4| (0+32768))
  2101  0712  0020               	movlb	0	; select bank0
  2102  0713                     L4:	
  2103  0713  00BD               	movwf	serputstr@line
  2104  0714  3084               	movlw	high (STR_4| (0+32768))
  2105  0715  00BE               	movwf	serputstr@line+1
  2106  0716  318B  2337  3186   	fcall	_serputstr
  2107                           
  2108                           ;Main.c: 104: if (echo_enabled) serputstr("\n");
  2109  0719  1D7C               	btfss	_echo_enabled/(0+8),_echo_enabled& (0+7)
  2110  071A  2EB1               	goto	l4312
  2111  071B  30A5               	movlw	low ((STR_1+31)| (0+32768))
  2112  071C  0020               	movlb	0	; select bank0
  2113  071D  00BD               	movwf	serputstr@line
  2114  071E  3083               	movlw	high ((STR_1+31)| (0+32768))
  2115  071F  2EAD               	goto	L2
  2116  0720                     __end_of_main:	
  2117                           ;Main.c: 106: }
  2118                           ;Main.c: 108: }
  2119                           ;Main.c: 110: return (0);
  2120                           ;	Return value of _main is never used
  2121                           
  2122                           ;Main.c: 105: continue;
  2123                           
  2124                           
  2125                           	psect	text1
  2126  048D                     __ptext1:	
  2127 ;; *************** function _status_command *****************
  2128 ;; Defined at:
  2129 ;;		line 249 in file "Main.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  param1          1   19[BANK1 ] PTR unsigned char 
  2132 ;;		 -> main@cmd_descr(12), 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  buf            10   26[BANK1 ] unsigned char [10]
  2135 ;;  temp            4   36[BANK1 ] long 
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  2   19[BANK1 ] int 
  2138 ;; Registers used:
  2139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2145 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2146 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  2147 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  2148 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  2149 ;;Total ram usage:       21 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; Hardware stack levels required when called:    4
  2152 ;; This function calls:
  2153 ;;		___lmul
  2154 ;;		_serputstr
  2155 ;;		_sprintf
  2156 ;; This function is called by:
  2157 ;;		_main
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           
  2162                           ;psect for function _status_command
  2163  048D                     _status_command:	
  2164                           
  2165                           ;Main.c: 251: char buf[10];
  2166                           ;Main.c: 252: long int temp;
  2167                           ;Main.c: 254: serputstr("OK ");
  2168                           
  2169                           ;incstack = 0
  2170                           ; Regs used in _status_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2171  048D  307F               	movlw	low (STR_24| (0+32768))
  2172  048E  0020               	movlb	0	; select bank0
  2173  048F  00BD               	movwf	serputstr@line
  2174  0490  3084               	movlw	high (STR_24| (0+32768))
  2175  0491  00BE               	movwf	serputstr@line+1
  2176  0492  318B  2337  3184   	fcall	_serputstr
  2177                           
  2178                           ;Main.c: 255: sprintf(buf, "REM=%d ", remote_enabled);
  2179  0495  3023               	movlw	low (STR_25| (0+32768))
  2180  0496  0021               	movlb	1	; select bank1
  2181  0497  00A2               	movwf	sprintf@f^(0+128)
  2182  0498  3084               	movlw	high (STR_25| (0+32768))
  2183  0499  00A3               	movwf	(sprintf@f^(0+128)+1)
  2184  049A  1003               	clrc
  2185  049B  0020               	movlb	0	; select bank0
  2186  049C  1858               	btfsc	_remote_enabled/(0+8),_remote_enabled& (0+7)
  2187  049D  1403               	setc
  2188  049E  3000               	movlw	0
  2189  049F  3D09               	addwfc	9,w
  2190  04A0  0021               	movlb	1	; select bank1
  2191  04A1  00B5               	movwf	??_status_command^(0+128)
  2192  04A2  01B6               	clrf	(??_status_command^(0+128)+1)
  2193  04A3  0835               	movf	??_status_command^(0+128),w
  2194  04A4  00A4               	movwf	(?_sprintf^(0+128)+2)
  2195  04A5  0836               	movf	(??_status_command+1)^(0+128),w
  2196  04A6  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2197  04A7  30BA               	movlw	status_command@buf& (0+255)
  2198  04A8  3187  2720  3184   	fcall	_sprintf
  2199                           
  2200                           ;Main.c: 256: serputstr(buf);
  2201  04AB  30BA               	movlw	low status_command@buf
  2202  04AC  0020               	movlb	0	; select bank0
  2203  04AD  00BD               	movwf	serputstr@line
  2204  04AE  3000               	movlw	high status_command@buf
  2205  04AF  00BE               	movwf	serputstr@line+1
  2206  04B0  318B  2337  3184   	fcall	_serputstr
  2207                           
  2208                           ;Main.c: 258: sprintf(buf, "EN1=%d ", channel1_enabled);
  2209  04B3  30FB               	movlw	low (STR_26| (0+32768))
  2210  04B4  0021               	movlb	1	; select bank1
  2211  04B5  00A2               	movwf	sprintf@f^(0+128)
  2212  04B6  3083               	movlw	high (STR_26| (0+32768))
  2213  04B7  00A3               	movwf	(sprintf@f^(0+128)+1)
  2214  04B8  1003               	clrc
  2215  04B9  187C               	btfsc	_channel1_enabled/(0+8),_channel1_enabled& (0+7)
  2216  04BA  1403               	setc
  2217  04BB  3000               	movlw	0
  2218  04BC  3D09               	addwfc	9,w
  2219  04BD  00B5               	movwf	??_status_command^(0+128)
  2220  04BE  01B6               	clrf	(??_status_command^(0+128)+1)
  2221  04BF  0835               	movf	??_status_command^(0+128),w
  2222  04C0  00A4               	movwf	(?_sprintf^(0+128)+2)
  2223  04C1  0836               	movf	(??_status_command+1)^(0+128),w
  2224  04C2  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2225  04C3  30BA               	movlw	status_command@buf& (0+255)
  2226  04C4  3187  2720  3184   	fcall	_sprintf
  2227                           
  2228                           ;Main.c: 259: serputstr(buf);
  2229  04C7  30BA               	movlw	low status_command@buf
  2230  04C8  0020               	movlb	0	; select bank0
  2231  04C9  00BD               	movwf	serputstr@line
  2232  04CA  3000               	movlw	high status_command@buf
  2233  04CB  00BE               	movwf	serputstr@line+1
  2234  04CC  318B  2337  3184   	fcall	_serputstr
  2235                           
  2236                           ;Main.c: 261: sprintf(buf, "EN2=%d ", channel2_enabled);
  2237  04CF  3013               	movlw	low (STR_27| (0+32768))
  2238  04D0  0021               	movlb	1	; select bank1
  2239  04D1  00A2               	movwf	sprintf@f^(0+128)
  2240  04D2  3084               	movlw	high (STR_27| (0+32768))
  2241  04D3  00A3               	movwf	(sprintf@f^(0+128)+1)
  2242  04D4  1003               	clrc
  2243  04D5  18FC               	btfsc	_channel2_enabled/(0+8),_channel2_enabled& (0+7)
  2244  04D6  1403               	setc
  2245  04D7  3000               	movlw	0
  2246  04D8  3D09               	addwfc	9,w
  2247  04D9  00B5               	movwf	??_status_command^(0+128)
  2248  04DA  01B6               	clrf	(??_status_command^(0+128)+1)
  2249  04DB  0835               	movf	??_status_command^(0+128),w
  2250  04DC  00A4               	movwf	(?_sprintf^(0+128)+2)
  2251  04DD  0836               	movf	(??_status_command+1)^(0+128),w
  2252  04DE  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2253  04DF  30BA               	movlw	status_command@buf& (0+255)
  2254  04E0  3187  2720  3184   	fcall	_sprintf
  2255                           
  2256                           ;Main.c: 262: serputstr(buf);
  2257  04E3  30BA               	movlw	low status_command@buf
  2258  04E4  0020               	movlb	0	; select bank0
  2259  04E5  00BD               	movwf	serputstr@line
  2260  04E6  3000               	movlw	high status_command@buf
  2261  04E7  00BE               	movwf	serputstr@line+1
  2262  04E8  318B  2337  3184   	fcall	_serputstr
  2263                           
  2264                           ;Main.c: 264: sprintf(buf, "PUL=%d ", pulse_enabled);
  2265  04EB  301B               	movlw	low (STR_28| (0+32768))
  2266  04EC  0021               	movlb	1	; select bank1
  2267  04ED  00A2               	movwf	sprintf@f^(0+128)
  2268  04EE  3084               	movlw	high (STR_28| (0+32768))
  2269  04EF  00A3               	movwf	(sprintf@f^(0+128)+1)
  2270  04F0  1003               	clrc
  2271  04F1  19FC               	btfsc	_pulse_enabled/(0+8),_pulse_enabled& (0+7)
  2272  04F2  1403               	setc
  2273  04F3  3000               	movlw	0
  2274  04F4  3D09               	addwfc	9,w
  2275  04F5  00B5               	movwf	??_status_command^(0+128)
  2276  04F6  01B6               	clrf	(??_status_command^(0+128)+1)
  2277  04F7  0835               	movf	??_status_command^(0+128),w
  2278  04F8  00A4               	movwf	(?_sprintf^(0+128)+2)
  2279  04F9  0836               	movf	(??_status_command+1)^(0+128),w
  2280  04FA  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2281  04FB  30BA               	movlw	status_command@buf& (0+255)
  2282  04FC  3187  2720  3184   	fcall	_sprintf
  2283                           
  2284                           ;Main.c: 265: serputstr(buf);
  2285  04FF  30BA               	movlw	low status_command@buf
  2286  0500  0020               	movlb	0	; select bank0
  2287  0501  00BD               	movwf	serputstr@line
  2288  0502  3000               	movlw	high status_command@buf
  2289  0503  00BE               	movwf	serputstr@line+1
  2290  0504  318B  2337  3184   	fcall	_serputstr
  2291                           
  2292                           ;Main.c: 267: temp = (long int)remote_power_level * 25700L + 32768L;
  2293  0507  0020               	movlb	0	; select bank0
  2294  0508  0855               	movf	_remote_power_level,w
  2295  0509  0021               	movlb	1	; select bank1
  2296  050A  00B5               	movwf	??_status_command^(0+128)
  2297  050B  01B6               	clrf	(??_status_command^(0+128)+1)
  2298  050C  01B7               	clrf	(??_status_command^(0+128)+2)
  2299  050D  01B8               	clrf	(??_status_command^(0+128)+3)
  2300  050E  0838               	movf	(??_status_command+3)^(0+128),w
  2301  050F  0020               	movlb	0	; select bank0
  2302  0510  00BA               	movwf	___lmul@multiplier+3
  2303  0511  0021               	movlb	1	; select bank1
  2304  0512  0837               	movf	(??_status_command+2)^(0+128),w
  2305  0513  0020               	movlb	0	; select bank0
  2306  0514  00B9               	movwf	___lmul@multiplier+2
  2307  0515  0021               	movlb	1	; select bank1
  2308  0516  0836               	movf	(??_status_command+1)^(0+128),w
  2309  0517  0020               	movlb	0	; select bank0
  2310  0518  00B8               	movwf	___lmul@multiplier+1
  2311  0519  0021               	movlb	1	; select bank1
  2312  051A  0835               	movf	??_status_command^(0+128),w
  2313  051B  0020               	movlb	0	; select bank0
  2314  051C  00B7               	movwf	___lmul@multiplier
  2315  051D  3000               	movlw	0
  2316  051E  00BE               	movwf	___lmul@multiplicand+3
  2317  051F  3000               	movlw	0
  2318  0520  00BD               	movwf	___lmul@multiplicand+2
  2319  0521  3064               	movlw	100
  2320  0522  00BC               	movwf	___lmul@multiplicand+1
  2321  0523  3064               	movlw	100
  2322  0524  00BB               	movwf	___lmul@multiplicand
  2323  0525  318A  229A  3184   	fcall	___lmul
  2324  0528  3000               	movlw	0
  2325  0529  0020               	movlb	0	; select bank0
  2326  052A  0737               	addwf	?___lmul,w
  2327  052B  0021               	movlb	1	; select bank1
  2328  052C  00C4               	movwf	status_command@temp^(0+128)
  2329  052D  3080               	movlw	128
  2330  052E  0020               	movlb	0	; select bank0
  2331  052F  3D38               	addwfc	?___lmul+1,w
  2332  0530  0021               	movlb	1	; select bank1
  2333  0531  00C5               	movwf	(status_command@temp+1)^(0+128)
  2334  0532  3000               	movlw	0
  2335  0533  0020               	movlb	0	; select bank0
  2336  0534  3D39               	addwfc	?___lmul+2,w
  2337  0535  0021               	movlb	1	; select bank1
  2338  0536  00C6               	movwf	(status_command@temp+2)^(0+128)
  2339  0537  3000               	movlw	0
  2340  0538  0020               	movlb	0	; select bank0
  2341  0539  3D3A               	addwfc	?___lmul+3,w
  2342  053A  0021               	movlb	1	; select bank1
  2343  053B  00C7               	movwf	(status_command@temp+3)^(0+128)
  2344                           
  2345                           ;Main.c: 268: temp = temp >> 16;
  2346  053C  0844               	movf	status_command@temp^(0+128),w
  2347  053D  00B5               	movwf	??_status_command^(0+128)
  2348  053E  0845               	movf	(status_command@temp+1)^(0+128),w
  2349  053F  00B6               	movwf	(??_status_command^(0+128)+1)
  2350  0540  0846               	movf	(status_command@temp+2)^(0+128),w
  2351  0541  00B7               	movwf	(??_status_command^(0+128)+2)
  2352  0542  0847               	movf	(status_command@temp+3)^(0+128),w
  2353  0543  00B8               	movwf	(??_status_command^(0+128)+3)
  2354  0544  3010               	movlw	16
  2355  0545  00B9               	movwf	(??_status_command+4)^(0+128)
  2356  0546                     u6545:	
  2357  0546  37B8               	asrf	(??_status_command^(0+128)+3),f
  2358  0547  0CB7               	rrf	(??_status_command^(0+128)+2),f
  2359  0548  0CB6               	rrf	(??_status_command^(0+128)+1),f
  2360  0549  0CB5               	rrf	??_status_command^(0+128),f
  2361  054A  0BB9               	decfsz	(??_status_command+4)^(0+128),f
  2362  054B  2D46               	goto	u6545
  2363  054C  0838               	movf	(??_status_command+3)^(0+128),w
  2364  054D  00C7               	movwf	(status_command@temp+3)^(0+128)
  2365  054E  0837               	movf	(??_status_command+2)^(0+128),w
  2366  054F  00C6               	movwf	(status_command@temp+2)^(0+128)
  2367  0550  0836               	movf	(??_status_command+1)^(0+128),w
  2368  0551  00C5               	movwf	(status_command@temp+1)^(0+128)
  2369  0552  0835               	movf	??_status_command^(0+128),w
  2370  0553  00C4               	movwf	status_command@temp^(0+128)
  2371                           
  2372                           ;Main.c: 269: sprintf(buf, "PWR=%d ", (int)temp);
  2373  0554  302B               	movlw	low (STR_29| (0+32768))
  2374  0555  00A2               	movwf	sprintf@f^(0+128)
  2375  0556  3084               	movlw	high (STR_29| (0+32768))
  2376  0557  00A3               	movwf	(sprintf@f^(0+128)+1)
  2377  0558  0845               	movf	(status_command@temp+1)^(0+128),w
  2378  0559  01A5               	clrf	((?_sprintf+1)^(0+128)+2)
  2379  055A  07A5               	addwf	((?_sprintf+1)^(0+128)+2),f
  2380  055B  0844               	movf	status_command@temp^(0+128),w
  2381  055C  01A4               	clrf	(?_sprintf^(0+128)+2)
  2382  055D  07A4               	addwf	(?_sprintf^(0+128)+2),f
  2383  055E  30BA               	movlw	status_command@buf& (0+255)
  2384  055F  3187  2720  3184   	fcall	_sprintf
  2385                           
  2386                           ;Main.c: 270: serputstr(buf);
  2387  0562  30BA               	movlw	low status_command@buf
  2388  0563  0020               	movlb	0	; select bank0
  2389  0564  00BD               	movwf	serputstr@line
  2390  0565  3000               	movlw	high status_command@buf
  2391  0566  00BE               	movwf	serputstr@line+1
  2392  0567  318B  2337  3184   	fcall	_serputstr
  2393                           
  2394                           ;Main.c: 272: sprintf(buf, "FL1=%d ", ~RB0 & 0x0001);
  2395  056A  30F3               	movlw	low (STR_30| (0+32768))
  2396  056B  0021               	movlb	1	; select bank1
  2397  056C  00A2               	movwf	sprintf@f^(0+128)
  2398  056D  3083               	movlw	high (STR_30| (0+32768))
  2399  056E  00A3               	movwf	(sprintf@f^(0+128)+1)
  2400  056F  1003               	clrc
  2401  0570  0020               	movlb	0	; select bank0
  2402  0571  180D               	btfsc	13,0	;volatile
  2403  0572  1403               	setc
  2404  0573  3000               	movlw	0
  2405  0574  3D09               	addwfc	9,w
  2406  0575  0021               	movlb	1	; select bank1
  2407  0576  00B5               	movwf	??_status_command^(0+128)
  2408  0577  01B6               	clrf	(??_status_command^(0+128)+1)
  2409  0578  09B5               	comf	??_status_command^(0+128),f
  2410  0579  09B6               	comf	(??_status_command^(0+128)+1),f
  2411  057A  3001               	movlw	1
  2412  057B  0535               	andwf	??_status_command^(0+128),w
  2413  057C  00A4               	movwf	(?_sprintf^(0+128)+2)
  2414  057D  3000               	movlw	0
  2415  057E  0536               	andwf	(??_status_command+1)^(0+128),w
  2416  057F  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2417  0580  30BA               	movlw	status_command@buf& (0+255)
  2418  0581  3187  2720  3184   	fcall	_sprintf
  2419                           
  2420                           ;Main.c: 273: serputstr(buf);
  2421  0584  30BA               	movlw	low status_command@buf
  2422  0585  0020               	movlb	0	; select bank0
  2423  0586  00BD               	movwf	serputstr@line
  2424  0587  3000               	movlw	high status_command@buf
  2425  0588  00BE               	movwf	serputstr@line+1
  2426  0589  318B  2337  3184   	fcall	_serputstr
  2427                           
  2428                           ;Main.c: 275: sprintf(buf, "FL2=%d ", ~RB2 & 0x0001);
  2429  058C  300B               	movlw	low (STR_31| (0+32768))
  2430  058D  0021               	movlb	1	; select bank1
  2431  058E  00A2               	movwf	sprintf@f^(0+128)
  2432  058F  3084               	movlw	high (STR_31| (0+32768))
  2433  0590  00A3               	movwf	(sprintf@f^(0+128)+1)
  2434  0591  1003               	clrc
  2435  0592  0020               	movlb	0	; select bank0
  2436  0593  190D               	btfsc	13,2	;volatile
  2437  0594  1403               	setc
  2438  0595  3000               	movlw	0
  2439  0596  3D09               	addwfc	9,w
  2440  0597  0021               	movlb	1	; select bank1
  2441  0598  00B5               	movwf	??_status_command^(0+128)
  2442  0599  01B6               	clrf	(??_status_command^(0+128)+1)
  2443  059A  09B5               	comf	??_status_command^(0+128),f
  2444  059B  09B6               	comf	(??_status_command^(0+128)+1),f
  2445  059C  3001               	movlw	1
  2446  059D  0535               	andwf	??_status_command^(0+128),w
  2447  059E  00A4               	movwf	(?_sprintf^(0+128)+2)
  2448  059F  3000               	movlw	0
  2449  05A0  0536               	andwf	(??_status_command+1)^(0+128),w
  2450  05A1  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2451  05A2  30BA               	movlw	status_command@buf& (0+255)
  2452  05A3  3187  2720  3184   	fcall	_sprintf
  2453                           
  2454                           ;Main.c: 276: serputstr(buf);
  2455  05A6  30BA               	movlw	low status_command@buf
  2456  05A7  0020               	movlb	0	; select bank0
  2457  05A8  00BD               	movwf	serputstr@line
  2458  05A9  3000               	movlw	high status_command@buf
  2459  05AA  00BE               	movwf	serputstr@line+1
  2460  05AB  318B  2337  3184   	fcall	_serputstr
  2461                           
  2462                           ;Main.c: 278: sprintf(buf, "OT1=%d ", ~RB1 & 0x0001);
  2463  05AE  3003               	movlw	low (STR_32| (0+32768))
  2464  05AF  0021               	movlb	1	; select bank1
  2465  05B0  00A2               	movwf	sprintf@f^(0+128)
  2466  05B1  3084               	movlw	high (STR_32| (0+32768))
  2467  05B2  00A3               	movwf	(sprintf@f^(0+128)+1)
  2468  05B3  1003               	clrc
  2469  05B4  0020               	movlb	0	; select bank0
  2470  05B5  188D               	btfsc	13,1	;volatile
  2471  05B6  1403               	setc
  2472  05B7  3000               	movlw	0
  2473  05B8  3D09               	addwfc	9,w
  2474  05B9  0021               	movlb	1	; select bank1
  2475  05BA  00B5               	movwf	??_status_command^(0+128)
  2476  05BB  01B6               	clrf	(??_status_command^(0+128)+1)
  2477  05BC  09B5               	comf	??_status_command^(0+128),f
  2478  05BD  09B6               	comf	(??_status_command^(0+128)+1),f
  2479  05BE  3001               	movlw	1
  2480  05BF  0535               	andwf	??_status_command^(0+128),w
  2481  05C0  00A4               	movwf	(?_sprintf^(0+128)+2)
  2482  05C1  3000               	movlw	0
  2483  05C2  0536               	andwf	(??_status_command+1)^(0+128),w
  2484  05C3  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2485  05C4  30BA               	movlw	status_command@buf& (0+255)
  2486  05C5  3187  2720  3184   	fcall	_sprintf
  2487                           
  2488                           ;Main.c: 279: serputstr(buf);
  2489  05C8  30BA               	movlw	low status_command@buf
  2490  05C9  0020               	movlb	0	; select bank0
  2491  05CA  00BD               	movwf	serputstr@line
  2492  05CB  3000               	movlw	high status_command@buf
  2493  05CC  00BE               	movwf	serputstr@line+1
  2494  05CD  318B  2337  3184   	fcall	_serputstr
  2495                           
  2496                           ;Main.c: 281: sprintf(buf, "OT2=%d", ~RB3 & 0x0001);
  2497  05D0  3033               	movlw	low (STR_33| (0+32768))
  2498  05D1  0021               	movlb	1	; select bank1
  2499  05D2  00A2               	movwf	sprintf@f^(0+128)
  2500  05D3  3084               	movlw	high (STR_33| (0+32768))
  2501  05D4  00A3               	movwf	(sprintf@f^(0+128)+1)
  2502  05D5  1003               	clrc
  2503  05D6  0020               	movlb	0	; select bank0
  2504  05D7  198D               	btfsc	13,3	;volatile
  2505  05D8  1403               	setc
  2506  05D9  3000               	movlw	0
  2507  05DA  3D09               	addwfc	9,w
  2508  05DB  0021               	movlb	1	; select bank1
  2509  05DC  00B5               	movwf	??_status_command^(0+128)
  2510  05DD  01B6               	clrf	(??_status_command^(0+128)+1)
  2511  05DE  09B5               	comf	??_status_command^(0+128),f
  2512  05DF  09B6               	comf	(??_status_command^(0+128)+1),f
  2513  05E0  3001               	movlw	1
  2514  05E1  0535               	andwf	??_status_command^(0+128),w
  2515  05E2  00A4               	movwf	(?_sprintf^(0+128)+2)
  2516  05E3  3000               	movlw	0
  2517  05E4  0536               	andwf	(??_status_command+1)^(0+128),w
  2518  05E5  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2519  05E6  30BA               	movlw	status_command@buf& (0+255)
  2520  05E7  3187  2720  3184   	fcall	_sprintf
  2521                           
  2522                           ;Main.c: 282: serputstr(buf);
  2523  05EA  30BA               	movlw	low status_command@buf
  2524  05EB  0020               	movlb	0	; select bank0
  2525  05EC  00BD               	movwf	serputstr@line
  2526  05ED  3000               	movlw	high status_command@buf
  2527  05EE  00BE               	movwf	serputstr@line+1
  2528  05EF  318B  2337  3184   	fcall	_serputstr
  2529                           
  2530                           ;Main.c: 284: serputstr("\r");
  2531  05F2  304C               	movlw	low ((STR_6+4)| (0+32768))
  2532  05F3  0020               	movlb	0	; select bank0
  2533  05F4  00BD               	movwf	serputstr@line
  2534  05F5  3084               	movlw	high ((STR_6+4)| (0+32768))
  2535  05F6  00BE               	movwf	serputstr@line+1
  2536  05F7  318B  2337  3184   	fcall	_serputstr
  2537                           
  2538                           ;Main.c: 285: if (echo_enabled) serputstr("\n");
  2539  05FA  1D7C               	btfss	_echo_enabled/(0+8),_echo_enabled& (0+7)
  2540  05FB  2E03               	goto	l4292
  2541  05FC  30A5               	movlw	low ((STR_1+31)| (0+32768))
  2542  05FD  0020               	movlb	0	; select bank0
  2543  05FE  00BD               	movwf	serputstr@line
  2544  05FF  3083               	movlw	high ((STR_1+31)| (0+32768))
  2545  0600  00BE               	movwf	serputstr@line+1
  2546  0601  318B  2337         	fcall	_serputstr
  2547  0603                     l4292:	
  2548                           
  2549                           ;Main.c: 287: return -3;
  2550  0603  30FD               	movlw	253
  2551  0604  0021               	movlb	1	; select bank1
  2552  0605  00B3               	movwf	?_status_command^(0+128)
  2553  0606  30FF               	movlw	255
  2554  0607  00B4               	movwf	(?_status_command^(0+128)+1)
  2555  0608  0008               	return
  2556  0609                     __end_of_status_command:	
  2557                           
  2558                           	psect	text2
  2559  0DCF                     __ptext2:	
  2560 ;; *************** function _power_command *****************
  2561 ;; Defined at:
  2562 ;;		line 222 in file "Main.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  param1          1   19[BANK1 ] PTR unsigned char 
  2565 ;;		 -> main@cmd_descr(12), 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  temp            4   27[BANK1 ] long 
  2568 ;;  val             2   31[BANK1 ] int 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  2   19[BANK1 ] int 
  2571 ;; Registers used:
  2572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2578 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2579 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2580 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2581 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  2582 ;;Total ram usage:       14 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    4
  2585 ;; This function calls:
  2586 ;;		___lmul
  2587 ;;		_atoi
  2588 ;;		_strlen
  2589 ;; This function is called by:
  2590 ;;		_main
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           
  2595                           ;psect for function _power_command
  2596  0DCF                     _power_command:	
  2597                           
  2598                           ;Main.c: 224: int val;
  2599                           ;Main.c: 225: long int temp;
  2600                           ;Main.c: 227: if (strlen(param1) == 0) return -1;
  2601                           
  2602                           ;incstack = 0
  2603                           ; Regs used in _power_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2604  0DCF  0021               	movlb	1	; select bank1
  2605  0DD0  0833               	movf	power_command@param1^(0+128),w
  2606  0DD1  0020               	movlb	0	; select bank0
  2607  0DD2  00B7               	movwf	strlen@s
  2608  0DD3  3000               	movlw	0
  2609  0DD4  00B8               	movwf	strlen@s+1
  2610  0DD5  318A  2221  318D   	fcall	_strlen
  2611  0DD8  0020               	movlb	0	; select bank0
  2612  0DD9  0838               	movf	?_strlen+1,w
  2613  0DDA  0437               	iorwf	?_strlen,w
  2614  0DDB  1D03               	skipz
  2615  0DDC  2DE3               	goto	l4210
  2616  0DDD  30FF               	movlw	255
  2617  0DDE  0021               	movlb	1	; select bank1
  2618  0DDF  00B3               	movwf	?_power_command^(0+128)
  2619  0DE0  30FF               	movlw	255
  2620  0DE1  00B4               	movwf	(?_power_command^(0+128)+1)
  2621  0DE2  0008               	return
  2622  0DE3                     l4210:	
  2623                           
  2624                           ;Main.c: 228: val = atoi(param1);
  2625  0DE3  0021               	movlb	1	; select bank1
  2626  0DE4  0833               	movf	power_command@param1^(0+128),w
  2627  0DE5  318E  264A  318D   	fcall	_atoi
  2628  0DE8  0020               	movlb	0	; select bank0
  2629  0DE9  083E               	movf	?_atoi+1,w
  2630  0DEA  0021               	movlb	1	; select bank1
  2631  0DEB  01C0               	clrf	(power_command@val+1)^(0+128)
  2632  0DEC  07C0               	addwf	(power_command@val+1)^(0+128),f
  2633  0DED  0020               	movlb	0	; select bank0
  2634  0DEE  083D               	movf	?_atoi,w
  2635  0DEF  0021               	movlb	1	; select bank1
  2636  0DF0  01BF               	clrf	power_command@val^(0+128)
  2637  0DF1  07BF               	addwf	power_command@val^(0+128),f
  2638                           
  2639                           ;Main.c: 229: if (val < 0 || val > 100) return -2;
  2640  0DF2  1BC0               	btfsc	(power_command@val+1)^(0+128),7
  2641  0DF3  2DFF               	goto	l4216
  2642  0DF4  0840               	movf	(power_command@val+1)^(0+128),w
  2643  0DF5  3A80               	xorlw	128
  2644  0DF6  00B5               	movwf	??_power_command^(0+128)
  2645  0DF7  3080               	movlw	128
  2646  0DF8  0235               	subwf	??_power_command^(0+128),w
  2647  0DF9  1D03               	skipz
  2648  0DFA  2DFD               	goto	u6475
  2649  0DFB  3065               	movlw	101
  2650  0DFC  023F               	subwf	power_command@val^(0+128),w
  2651  0DFD                     u6475:	
  2652  0DFD  1C03               	skipc
  2653  0DFE  2E05               	goto	l4220
  2654  0DFF                     l4216:	
  2655  0DFF  30FE               	movlw	254
  2656  0E00  0021               	movlb	1	; select bank1
  2657  0E01  00B3               	movwf	?_power_command^(0+128)
  2658  0E02  30FF               	movlw	255
  2659  0E03  00B4               	movwf	(?_power_command^(0+128)+1)
  2660  0E04  0008               	return
  2661  0E05                     l4220:	
  2662                           
  2663                           ;Main.c: 232: temp = (long int)val * 167116L + 32768L;
  2664  0E05  0021               	movlb	1	; select bank1
  2665  0E06  083F               	movf	power_command@val^(0+128),w
  2666  0E07  0020               	movlb	0	; select bank0
  2667  0E08  00B7               	movwf	___lmul@multiplier
  2668  0E09  0021               	movlb	1	; select bank1
  2669  0E0A  0840               	movf	(power_command@val+1)^(0+128),w
  2670  0E0B  0020               	movlb	0	; select bank0
  2671  0E0C  00B8               	movwf	___lmul@multiplier+1
  2672  0E0D  0D89               	rlf	9,f
  2673  0E0E  3B89               	subwfb	9,f
  2674  0E0F  0989               	comf	9,f
  2675  0E10  00B9               	movwf	___lmul@multiplier+2
  2676  0E11  00BA               	movwf	___lmul@multiplier+3
  2677  0E12  3000               	movlw	0
  2678  0E13  00BE               	movwf	___lmul@multiplicand+3
  2679  0E14  3002               	movlw	2
  2680  0E15  00BD               	movwf	___lmul@multiplicand+2
  2681  0E16  308C               	movlw	140
  2682  0E17  00BC               	movwf	___lmul@multiplicand+1
  2683  0E18  30CC               	movlw	204
  2684  0E19  00BB               	movwf	___lmul@multiplicand
  2685  0E1A  318A  229A  318D   	fcall	___lmul
  2686  0E1D  3000               	movlw	0
  2687  0E1E  0020               	movlb	0	; select bank0
  2688  0E1F  0737               	addwf	?___lmul,w
  2689  0E20  0021               	movlb	1	; select bank1
  2690  0E21  00BB               	movwf	power_command@temp^(0+128)
  2691  0E22  3080               	movlw	128
  2692  0E23  0020               	movlb	0	; select bank0
  2693  0E24  3D38               	addwfc	?___lmul+1,w
  2694  0E25  0021               	movlb	1	; select bank1
  2695  0E26  00BC               	movwf	(power_command@temp+1)^(0+128)
  2696  0E27  3000               	movlw	0
  2697  0E28  0020               	movlb	0	; select bank0
  2698  0E29  3D39               	addwfc	?___lmul+2,w
  2699  0E2A  0021               	movlb	1	; select bank1
  2700  0E2B  00BD               	movwf	(power_command@temp+2)^(0+128)
  2701  0E2C  3000               	movlw	0
  2702  0E2D  0020               	movlb	0	; select bank0
  2703  0E2E  3D3A               	addwfc	?___lmul+3,w
  2704  0E2F  0021               	movlb	1	; select bank1
  2705  0E30  00BE               	movwf	(power_command@temp+3)^(0+128)
  2706                           
  2707                           ;Main.c: 233: remote_power_level = temp >> 16;
  2708  0E31  083B               	movf	power_command@temp^(0+128),w
  2709  0E32  00B5               	movwf	??_power_command^(0+128)
  2710  0E33  083C               	movf	(power_command@temp+1)^(0+128),w
  2711  0E34  00B6               	movwf	(??_power_command^(0+128)+1)
  2712  0E35  083D               	movf	(power_command@temp+2)^(0+128),w
  2713  0E36  00B7               	movwf	(??_power_command^(0+128)+2)
  2714  0E37  083E               	movf	(power_command@temp+3)^(0+128),w
  2715  0E38  00B8               	movwf	(??_power_command^(0+128)+3)
  2716  0E39  3010               	movlw	16
  2717  0E3A  00B9               	movwf	(??_power_command+4)^(0+128)
  2718  0E3B                     u6485:	
  2719  0E3B  37B8               	asrf	(??_power_command^(0+128)+3),f
  2720  0E3C  0CB7               	rrf	(??_power_command^(0+128)+2),f
  2721  0E3D  0CB6               	rrf	(??_power_command^(0+128)+1),f
  2722  0E3E  0CB5               	rrf	??_power_command^(0+128),f
  2723  0E3F  0BB9               	decfsz	(??_power_command+4)^(0+128),f
  2724  0E40  2E3B               	goto	u6485
  2725  0E41  0835               	movf	??_power_command^(0+128),w
  2726  0E42  00BA               	movwf	(??_power_command+5)^(0+128)
  2727  0E43  083A               	movf	(??_power_command+5)^(0+128),w
  2728  0E44  0020               	movlb	0	; select bank0
  2729  0E45  00D5               	movwf	_remote_power_level
  2730                           
  2731                           ;Main.c: 234: return 0;
  2732  0E46  0021               	movlb	1	; select bank1
  2733  0E47  01B3               	clrf	?_power_command^(0+128)
  2734  0E48  01B4               	clrf	(?_power_command+1)^(0+128)
  2735  0E49  0008               	return
  2736  0E4A                     __end_of_power_command:	
  2737                           
  2738                           	psect	text3
  2739  0CA3                     __ptext3:	
  2740 ;; *************** function _pulse_command *****************
  2741 ;; Defined at:
  2742 ;;		line 211 in file "Main.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  param1          1   19[BANK1 ] PTR unsigned char 
  2745 ;;		 -> main@cmd_descr(12), 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  val             2   22[BANK1 ] int 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  2   19[BANK1 ] int 
  2750 ;; Registers used:
  2751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2757 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2758 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2759 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2760 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  2761 ;;Total ram usage:        5 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; Hardware stack levels required when called:    4
  2764 ;; This function calls:
  2765 ;;		_atoi
  2766 ;;		_strlen
  2767 ;; This function is called by:
  2768 ;;		_main
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           
  2773                           ;psect for function _pulse_command
  2774  0CA3                     _pulse_command:	
  2775                           
  2776                           ;Main.c: 213: int val;
  2777                           ;Main.c: 215: if (strlen(param1) == 0) return -1;
  2778                           
  2779                           ;incstack = 0
  2780                           ; Regs used in _pulse_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2781  0CA3  0021               	movlb	1	; select bank1
  2782  0CA4  0833               	movf	pulse_command@param1^(0+128),w
  2783  0CA5  0020               	movlb	0	; select bank0
  2784  0CA6  00B7               	movwf	strlen@s
  2785  0CA7  3000               	movlw	0
  2786  0CA8  00B8               	movwf	strlen@s+1
  2787  0CA9  318A  2221  318C   	fcall	_strlen
  2788  0CAC  0020               	movlb	0	; select bank0
  2789  0CAD  0838               	movf	?_strlen+1,w
  2790  0CAE  0437               	iorwf	?_strlen,w
  2791  0CAF  1D03               	skipz
  2792  0CB0  2CB7               	goto	l4190
  2793  0CB1  30FF               	movlw	255
  2794  0CB2  0021               	movlb	1	; select bank1
  2795  0CB3  00B3               	movwf	?_pulse_command^(0+128)
  2796  0CB4  30FF               	movlw	255
  2797  0CB5  00B4               	movwf	(?_pulse_command^(0+128)+1)
  2798  0CB6  0008               	return
  2799  0CB7                     l4190:	
  2800                           
  2801                           ;Main.c: 216: val = atoi(param1);
  2802  0CB7  0021               	movlb	1	; select bank1
  2803  0CB8  0833               	movf	pulse_command@param1^(0+128),w
  2804  0CB9  318E  264A  318C   	fcall	_atoi
  2805  0CBC  0020               	movlb	0	; select bank0
  2806  0CBD  083E               	movf	?_atoi+1,w
  2807  0CBE  0021               	movlb	1	; select bank1
  2808  0CBF  01B7               	clrf	(pulse_command@val+1)^(0+128)
  2809  0CC0  07B7               	addwf	(pulse_command@val+1)^(0+128),f
  2810  0CC1  0020               	movlb	0	; select bank0
  2811  0CC2  083D               	movf	?_atoi,w
  2812  0CC3  0021               	movlb	1	; select bank1
  2813  0CC4  01B6               	clrf	pulse_command@val^(0+128)
  2814  0CC5  07B6               	addwf	pulse_command@val^(0+128),f
  2815                           
  2816                           ;Main.c: 217: if (val < 0 || val > 1) return -2;
  2817  0CC6  1BB7               	btfsc	(pulse_command@val+1)^(0+128),7
  2818  0CC7  2CD3               	goto	l4196
  2819  0CC8  0837               	movf	(pulse_command@val+1)^(0+128),w
  2820  0CC9  3A80               	xorlw	128
  2821  0CCA  00B5               	movwf	??_pulse_command^(0+128)
  2822  0CCB  3080               	movlw	128
  2823  0CCC  0235               	subwf	??_pulse_command^(0+128),w
  2824  0CCD  1D03               	skipz
  2825  0CCE  2CD1               	goto	u6435
  2826  0CCF  3002               	movlw	2
  2827  0CD0  0236               	subwf	pulse_command@val^(0+128),w
  2828  0CD1                     u6435:	
  2829  0CD1  1C03               	skipc
  2830  0CD2  2CD9               	goto	l308
  2831  0CD3                     l4196:	
  2832  0CD3  30FE               	movlw	254
  2833  0CD4  0021               	movlb	1	; select bank1
  2834  0CD5  00B3               	movwf	?_pulse_command^(0+128)
  2835  0CD6  30FF               	movlw	255
  2836  0CD7  00B4               	movwf	(?_pulse_command^(0+128)+1)
  2837  0CD8  0008               	return
  2838  0CD9                     l308:	
  2839                           
  2840                           ;Main.c: 218: pulse_enabled = val;
  2841  0CD9  11FC               	bcf	_pulse_enabled/(0+8),_pulse_enabled& (0+7)
  2842  0CDA  0021               	movlb	1	; select bank1
  2843  0CDB  1836               	btfsc	pulse_command@val^(0+128),0
  2844  0CDC  15FC               	bsf	_pulse_enabled/(0+8),_pulse_enabled& (0+7)
  2845                           
  2846                           ;Main.c: 219: return 0;
  2847  0CDD  0021               	movlb	1	; select bank1
  2848  0CDE  01B3               	clrf	?_pulse_command^(0+128)
  2849  0CDF  01B4               	clrf	(?_pulse_command+1)^(0+128)
  2850  0CE0  0008               	return
  2851  0CE1                     __end_of_pulse_command:	
  2852                           
  2853                           	psect	text4
  2854  0C65                     __ptext4:	
  2855 ;; *************** function _enable2_command *****************
  2856 ;; Defined at:
  2857 ;;		line 200 in file "Main.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  param1          1   19[BANK1 ] PTR unsigned char 
  2860 ;;		 -> main@cmd_descr(12), 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  val             2   22[BANK1 ] int 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  2   19[BANK1 ] int 
  2865 ;; Registers used:
  2866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2872 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2873 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2874 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2875 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  2876 ;;Total ram usage:        5 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    4
  2879 ;; This function calls:
  2880 ;;		_atoi
  2881 ;;		_strlen
  2882 ;; This function is called by:
  2883 ;;		_main
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           
  2888                           ;psect for function _enable2_command
  2889  0C65                     _enable2_command:	
  2890                           
  2891                           ;Main.c: 202: int val;
  2892                           ;Main.c: 204: if (strlen(param1) == 0) return -1;
  2893                           
  2894                           ;incstack = 0
  2895                           ; Regs used in _enable2_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2896  0C65  0021               	movlb	1	; select bank1
  2897  0C66  0833               	movf	enable2_command@param1^(0+128),w
  2898  0C67  0020               	movlb	0	; select bank0
  2899  0C68  00B7               	movwf	strlen@s
  2900  0C69  3000               	movlw	0
  2901  0C6A  00B8               	movwf	strlen@s+1
  2902  0C6B  318A  2221  318C   	fcall	_strlen
  2903  0C6E  0020               	movlb	0	; select bank0
  2904  0C6F  0838               	movf	?_strlen+1,w
  2905  0C70  0437               	iorwf	?_strlen,w
  2906  0C71  1D03               	skipz
  2907  0C72  2C79               	goto	l4170
  2908  0C73  30FF               	movlw	255
  2909  0C74  0021               	movlb	1	; select bank1
  2910  0C75  00B3               	movwf	?_enable2_command^(0+128)
  2911  0C76  30FF               	movlw	255
  2912  0C77  00B4               	movwf	(?_enable2_command^(0+128)+1)
  2913  0C78  0008               	return
  2914  0C79                     l4170:	
  2915                           
  2916                           ;Main.c: 205: val = atoi(param1);
  2917  0C79  0021               	movlb	1	; select bank1
  2918  0C7A  0833               	movf	enable2_command@param1^(0+128),w
  2919  0C7B  318E  264A  318C   	fcall	_atoi
  2920  0C7E  0020               	movlb	0	; select bank0
  2921  0C7F  083E               	movf	?_atoi+1,w
  2922  0C80  0021               	movlb	1	; select bank1
  2923  0C81  01B7               	clrf	(enable2_command@val+1)^(0+128)
  2924  0C82  07B7               	addwf	(enable2_command@val+1)^(0+128),f
  2925  0C83  0020               	movlb	0	; select bank0
  2926  0C84  083D               	movf	?_atoi,w
  2927  0C85  0021               	movlb	1	; select bank1
  2928  0C86  01B6               	clrf	enable2_command@val^(0+128)
  2929  0C87  07B6               	addwf	enable2_command@val^(0+128),f
  2930                           
  2931                           ;Main.c: 206: if (val < 0 || val > 1) return -2;
  2932  0C88  1BB7               	btfsc	(enable2_command@val+1)^(0+128),7
  2933  0C89  2C95               	goto	l4176
  2934  0C8A  0837               	movf	(enable2_command@val+1)^(0+128),w
  2935  0C8B  3A80               	xorlw	128
  2936  0C8C  00B5               	movwf	??_enable2_command^(0+128)
  2937  0C8D  3080               	movlw	128
  2938  0C8E  0235               	subwf	??_enable2_command^(0+128),w
  2939  0C8F  1D03               	skipz
  2940  0C90  2C93               	goto	u6395
  2941  0C91  3002               	movlw	2
  2942  0C92  0236               	subwf	enable2_command@val^(0+128),w
  2943  0C93                     u6395:	
  2944  0C93  1C03               	skipc
  2945  0C94  2C9B               	goto	l301
  2946  0C95                     l4176:	
  2947  0C95  30FE               	movlw	254
  2948  0C96  0021               	movlb	1	; select bank1
  2949  0C97  00B3               	movwf	?_enable2_command^(0+128)
  2950  0C98  30FF               	movlw	255
  2951  0C99  00B4               	movwf	(?_enable2_command^(0+128)+1)
  2952  0C9A  0008               	return
  2953  0C9B                     l301:	
  2954                           
  2955                           ;Main.c: 207: channel2_enabled = val;
  2956  0C9B  10FC               	bcf	_channel2_enabled/(0+8),_channel2_enabled& (0+7)
  2957  0C9C  0021               	movlb	1	; select bank1
  2958  0C9D  1836               	btfsc	enable2_command@val^(0+128),0
  2959  0C9E  14FC               	bsf	_channel2_enabled/(0+8),_channel2_enabled& (0+7)
  2960                           
  2961                           ;Main.c: 208: return 0;
  2962  0C9F  0021               	movlb	1	; select bank1
  2963  0CA0  01B3               	clrf	?_enable2_command^(0+128)
  2964  0CA1  01B4               	clrf	(?_enable2_command+1)^(0+128)
  2965  0CA2  0008               	return
  2966  0CA3                     __end_of_enable2_command:	
  2967                           
  2968                           	psect	text5
  2969  0C27                     __ptext5:	
  2970 ;; *************** function _enable1_command *****************
  2971 ;; Defined at:
  2972 ;;		line 189 in file "Main.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  param1          1   19[BANK1 ] PTR unsigned char 
  2975 ;;		 -> main@cmd_descr(12), 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  val             2   22[BANK1 ] int 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  2   19[BANK1 ] int 
  2980 ;; Registers used:
  2981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2987 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2988 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2989 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2990 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  2991 ;;Total ram usage:        5 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    4
  2994 ;; This function calls:
  2995 ;;		_atoi
  2996 ;;		_strlen
  2997 ;; This function is called by:
  2998 ;;		_main
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           
  3003                           ;psect for function _enable1_command
  3004  0C27                     _enable1_command:	
  3005                           
  3006                           ;Main.c: 191: int val;
  3007                           ;Main.c: 193: if (strlen(param1) == 0) return -1;
  3008                           
  3009                           ;incstack = 0
  3010                           ; Regs used in _enable1_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3011  0C27  0021               	movlb	1	; select bank1
  3012  0C28  0833               	movf	enable1_command@param1^(0+128),w
  3013  0C29  0020               	movlb	0	; select bank0
  3014  0C2A  00B7               	movwf	strlen@s
  3015  0C2B  3000               	movlw	0
  3016  0C2C  00B8               	movwf	strlen@s+1
  3017  0C2D  318A  2221  318C   	fcall	_strlen
  3018  0C30  0020               	movlb	0	; select bank0
  3019  0C31  0838               	movf	?_strlen+1,w
  3020  0C32  0437               	iorwf	?_strlen,w
  3021  0C33  1D03               	skipz
  3022  0C34  2C3B               	goto	l4150
  3023  0C35  30FF               	movlw	255
  3024  0C36  0021               	movlb	1	; select bank1
  3025  0C37  00B3               	movwf	?_enable1_command^(0+128)
  3026  0C38  30FF               	movlw	255
  3027  0C39  00B4               	movwf	(?_enable1_command^(0+128)+1)
  3028  0C3A  0008               	return
  3029  0C3B                     l4150:	
  3030                           
  3031                           ;Main.c: 194: val = atoi(param1);
  3032  0C3B  0021               	movlb	1	; select bank1
  3033  0C3C  0833               	movf	enable1_command@param1^(0+128),w
  3034  0C3D  318E  264A  318C   	fcall	_atoi
  3035  0C40  0020               	movlb	0	; select bank0
  3036  0C41  083E               	movf	?_atoi+1,w
  3037  0C42  0021               	movlb	1	; select bank1
  3038  0C43  01B7               	clrf	(enable1_command@val+1)^(0+128)
  3039  0C44  07B7               	addwf	(enable1_command@val+1)^(0+128),f
  3040  0C45  0020               	movlb	0	; select bank0
  3041  0C46  083D               	movf	?_atoi,w
  3042  0C47  0021               	movlb	1	; select bank1
  3043  0C48  01B6               	clrf	enable1_command@val^(0+128)
  3044  0C49  07B6               	addwf	enable1_command@val^(0+128),f
  3045                           
  3046                           ;Main.c: 195: if (val < 0 || val > 1) return -2;
  3047  0C4A  1BB7               	btfsc	(enable1_command@val+1)^(0+128),7
  3048  0C4B  2C57               	goto	l4156
  3049  0C4C  0837               	movf	(enable1_command@val+1)^(0+128),w
  3050  0C4D  3A80               	xorlw	128
  3051  0C4E  00B5               	movwf	??_enable1_command^(0+128)
  3052  0C4F  3080               	movlw	128
  3053  0C50  0235               	subwf	??_enable1_command^(0+128),w
  3054  0C51  1D03               	skipz
  3055  0C52  2C55               	goto	u6355
  3056  0C53  3002               	movlw	2
  3057  0C54  0236               	subwf	enable1_command@val^(0+128),w
  3058  0C55                     u6355:	
  3059  0C55  1C03               	skipc
  3060  0C56  2C5D               	goto	l294
  3061  0C57                     l4156:	
  3062  0C57  30FE               	movlw	254
  3063  0C58  0021               	movlb	1	; select bank1
  3064  0C59  00B3               	movwf	?_enable1_command^(0+128)
  3065  0C5A  30FF               	movlw	255
  3066  0C5B  00B4               	movwf	(?_enable1_command^(0+128)+1)
  3067  0C5C  0008               	return
  3068  0C5D                     l294:	
  3069                           
  3070                           ;Main.c: 196: channel1_enabled = val;
  3071  0C5D  107C               	bcf	_channel1_enabled/(0+8),_channel1_enabled& (0+7)
  3072  0C5E  0021               	movlb	1	; select bank1
  3073  0C5F  1836               	btfsc	enable1_command@val^(0+128),0
  3074  0C60  147C               	bsf	_channel1_enabled/(0+8),_channel1_enabled& (0+7)
  3075                           
  3076                           ;Main.c: 197: return 0;
  3077  0C61  0021               	movlb	1	; select bank1
  3078  0C62  01B3               	clrf	?_enable1_command^(0+128)
  3079  0C63  01B4               	clrf	(?_enable1_command+1)^(0+128)
  3080  0C64  0008               	return
  3081  0C65                     __end_of_enable1_command:	
  3082                           
  3083                           	psect	text6
  3084  0CE1                     __ptext6:	
  3085 ;; *************** function _remote_command *****************
  3086 ;; Defined at:
  3087 ;;		line 178 in file "Main.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  param1          1   19[BANK1 ] PTR unsigned char 
  3090 ;;		 -> main@cmd_descr(12), 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  val             2   22[BANK1 ] int 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  2   19[BANK1 ] int 
  3095 ;; Registers used:
  3096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3102 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3103 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3104 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3105 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3106 ;;Total ram usage:        5 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    4
  3109 ;; This function calls:
  3110 ;;		_atoi
  3111 ;;		_strlen
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           
  3118                           ;psect for function _remote_command
  3119  0CE1                     _remote_command:	
  3120                           
  3121                           ;Main.c: 180: int val;
  3122                           ;Main.c: 182: if (strlen(param1) == 0) return -1;
  3123                           
  3124                           ;incstack = 0
  3125                           ; Regs used in _remote_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3126  0CE1  0021               	movlb	1	; select bank1
  3127  0CE2  0833               	movf	remote_command@param1^(0+128),w
  3128  0CE3  0020               	movlb	0	; select bank0
  3129  0CE4  00B7               	movwf	strlen@s
  3130  0CE5  3000               	movlw	0
  3131  0CE6  00B8               	movwf	strlen@s+1
  3132  0CE7  318A  2221  318C   	fcall	_strlen
  3133  0CEA  0020               	movlb	0	; select bank0
  3134  0CEB  0838               	movf	?_strlen+1,w
  3135  0CEC  0437               	iorwf	?_strlen,w
  3136  0CED  1D03               	skipz
  3137  0CEE  2CF5               	goto	l4130
  3138  0CEF  30FF               	movlw	255
  3139  0CF0  0021               	movlb	1	; select bank1
  3140  0CF1  00B3               	movwf	?_remote_command^(0+128)
  3141  0CF2  30FF               	movlw	255
  3142  0CF3  00B4               	movwf	(?_remote_command^(0+128)+1)
  3143  0CF4  0008               	return
  3144  0CF5                     l4130:	
  3145                           
  3146                           ;Main.c: 183: val = atoi(param1);
  3147  0CF5  0021               	movlb	1	; select bank1
  3148  0CF6  0833               	movf	remote_command@param1^(0+128),w
  3149  0CF7  318E  264A  318C   	fcall	_atoi
  3150  0CFA  0020               	movlb	0	; select bank0
  3151  0CFB  083E               	movf	?_atoi+1,w
  3152  0CFC  0021               	movlb	1	; select bank1
  3153  0CFD  01B7               	clrf	(remote_command@val+1)^(0+128)
  3154  0CFE  07B7               	addwf	(remote_command@val+1)^(0+128),f
  3155  0CFF  0020               	movlb	0	; select bank0
  3156  0D00  083D               	movf	?_atoi,w
  3157  0D01  0021               	movlb	1	; select bank1
  3158  0D02  01B6               	clrf	remote_command@val^(0+128)
  3159  0D03  07B6               	addwf	remote_command@val^(0+128),f
  3160                           
  3161                           ;Main.c: 184: if (val < 0 || val > 1) return -2;
  3162  0D04  1BB7               	btfsc	(remote_command@val+1)^(0+128),7
  3163  0D05  2D11               	goto	l4136
  3164  0D06  0837               	movf	(remote_command@val+1)^(0+128),w
  3165  0D07  3A80               	xorlw	128
  3166  0D08  00B5               	movwf	??_remote_command^(0+128)
  3167  0D09  3080               	movlw	128
  3168  0D0A  0235               	subwf	??_remote_command^(0+128),w
  3169  0D0B  1D03               	skipz
  3170  0D0C  2D0F               	goto	u6315
  3171  0D0D  3002               	movlw	2
  3172  0D0E  0236               	subwf	remote_command@val^(0+128),w
  3173  0D0F                     u6315:	
  3174  0D0F  1C03               	skipc
  3175  0D10  2D17               	goto	l287
  3176  0D11                     l4136:	
  3177  0D11  30FE               	movlw	254
  3178  0D12  0021               	movlb	1	; select bank1
  3179  0D13  00B3               	movwf	?_remote_command^(0+128)
  3180  0D14  30FF               	movlw	255
  3181  0D15  00B4               	movwf	(?_remote_command^(0+128)+1)
  3182  0D16  0008               	return
  3183  0D17                     l287:	
  3184                           
  3185                           ;Main.c: 185: remote_enabled = val;
  3186  0D17  0020               	movlb	0	; select bank0
  3187  0D18  1058               	bcf	_remote_enabled/(0+8),_remote_enabled& (0+7)
  3188  0D19  0021               	movlb	1	; select bank1
  3189  0D1A  1C36               	btfss	remote_command@val^(0+128),0
  3190  0D1B  2D1E               	goto	l4140
  3191  0D1C  0020               	movlb	0	; select bank0
  3192  0D1D  1458               	bsf	_remote_enabled/(0+8),_remote_enabled& (0+7)
  3193  0D1E                     l4140:	
  3194                           
  3195                           ;Main.c: 186: return 0;
  3196  0D1E  0021               	movlb	1	; select bank1
  3197  0D1F  01B3               	clrf	?_remote_command^(0+128)
  3198  0D20  01B4               	clrf	(?_remote_command+1)^(0+128)
  3199  0D21  0008               	return
  3200  0D22                     __end_of_remote_command:	
  3201                           
  3202                           	psect	text7
  3203  0BE9                     __ptext7:	
  3204 ;; *************** function _echo_command *****************
  3205 ;; Defined at:
  3206 ;;		line 167 in file "Main.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  param1          1   19[BANK1 ] PTR unsigned char 
  3209 ;;		 -> main@cmd_descr(12), 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  val             2   22[BANK1 ] int 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  2   19[BANK1 ] int 
  3214 ;; Registers used:
  3215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3221 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3222 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3223 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3224 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3225 ;;Total ram usage:        5 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    4
  3228 ;; This function calls:
  3229 ;;		_atoi
  3230 ;;		_strlen
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           
  3237                           ;psect for function _echo_command
  3238  0BE9                     _echo_command:	
  3239                           
  3240                           ;Main.c: 169: int val;
  3241                           ;Main.c: 171: if (strlen(param1) == 0) return -1;
  3242                           
  3243                           ;incstack = 0
  3244                           ; Regs used in _echo_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3245  0BE9  0021               	movlb	1	; select bank1
  3246  0BEA  0833               	movf	echo_command@param1^(0+128),w
  3247  0BEB  0020               	movlb	0	; select bank0
  3248  0BEC  00B7               	movwf	strlen@s
  3249  0BED  3000               	movlw	0
  3250  0BEE  00B8               	movwf	strlen@s+1
  3251  0BEF  318A  2221  318B   	fcall	_strlen
  3252  0BF2  0020               	movlb	0	; select bank0
  3253  0BF3  0838               	movf	?_strlen+1,w
  3254  0BF4  0437               	iorwf	?_strlen,w
  3255  0BF5  1D03               	skipz
  3256  0BF6  2BFD               	goto	l4110
  3257  0BF7  30FF               	movlw	255
  3258  0BF8  0021               	movlb	1	; select bank1
  3259  0BF9  00B3               	movwf	?_echo_command^(0+128)
  3260  0BFA  30FF               	movlw	255
  3261  0BFB  00B4               	movwf	(?_echo_command^(0+128)+1)
  3262  0BFC  0008               	return
  3263  0BFD                     l4110:	
  3264                           
  3265                           ;Main.c: 172: val = atoi(param1);
  3266  0BFD  0021               	movlb	1	; select bank1
  3267  0BFE  0833               	movf	echo_command@param1^(0+128),w
  3268  0BFF  318E  264A  318B   	fcall	_atoi
  3269  0C02  0020               	movlb	0	; select bank0
  3270  0C03  083E               	movf	?_atoi+1,w
  3271  0C04  0021               	movlb	1	; select bank1
  3272  0C05  01B7               	clrf	(echo_command@val+1)^(0+128)
  3273  0C06  07B7               	addwf	(echo_command@val+1)^(0+128),f
  3274  0C07  0020               	movlb	0	; select bank0
  3275  0C08  083D               	movf	?_atoi,w
  3276  0C09  0021               	movlb	1	; select bank1
  3277  0C0A  01B6               	clrf	echo_command@val^(0+128)
  3278  0C0B  07B6               	addwf	echo_command@val^(0+128),f
  3279                           
  3280                           ;Main.c: 173: if (val < 0 || val > 1) return -2;
  3281  0C0C  1BB7               	btfsc	(echo_command@val+1)^(0+128),7
  3282  0C0D  2C19               	goto	l4116
  3283  0C0E  0837               	movf	(echo_command@val+1)^(0+128),w
  3284  0C0F  3A80               	xorlw	128
  3285  0C10  00B5               	movwf	??_echo_command^(0+128)
  3286  0C11  3080               	movlw	128
  3287  0C12  0235               	subwf	??_echo_command^(0+128),w
  3288  0C13  1D03               	skipz
  3289  0C14  2C17               	goto	u6275
  3290  0C15  3002               	movlw	2
  3291  0C16  0236               	subwf	echo_command@val^(0+128),w
  3292  0C17                     u6275:	
  3293  0C17  1C03               	skipc
  3294  0C18  2C1F               	goto	l280
  3295  0C19                     l4116:	
  3296  0C19  30FE               	movlw	254
  3297  0C1A  0021               	movlb	1	; select bank1
  3298  0C1B  00B3               	movwf	?_echo_command^(0+128)
  3299  0C1C  30FF               	movlw	255
  3300  0C1D  00B4               	movwf	(?_echo_command^(0+128)+1)
  3301  0C1E  0008               	return
  3302  0C1F                     l280:	
  3303                           
  3304                           ;Main.c: 174: echo_enabled = val;
  3305  0C1F  117C               	bcf	_echo_enabled/(0+8),_echo_enabled& (0+7)
  3306  0C20  0021               	movlb	1	; select bank1
  3307  0C21  1836               	btfsc	echo_command@val^(0+128),0
  3308  0C22  157C               	bsf	_echo_enabled/(0+8),_echo_enabled& (0+7)
  3309                           
  3310                           ;Main.c: 175: return 0;
  3311  0C23  0021               	movlb	1	; select bank1
  3312  0C24  01B3               	clrf	?_echo_command^(0+128)
  3313  0C25  01B4               	clrf	(?_echo_command+1)^(0+128)
  3314  0C26  0008               	return
  3315  0C27                     __end_of_echo_command:	
  3316                           
  3317                           	psect	text8
  3318  02BE                     __ptext8:	
  3319 ;; *************** function _ttlout_command *****************
  3320 ;; Defined at:
  3321 ;;		line 237 in file "Main.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  param1          1   19[BANK1 ] PTR unsigned char 
  3324 ;;		 -> main@cmd_descr(12), 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  val             2   22[BANK1 ] int 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  2   19[BANK1 ] int 
  3329 ;; Registers used:
  3330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3336 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3337 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3338 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3339 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3340 ;;Total ram usage:        5 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    4
  3343 ;; This function calls:
  3344 ;;		_atoi
  3345 ;;		_strlen
  3346 ;; This function is called by:
  3347 ;;		_main
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function _ttlout_command
  3353  02BE                     _ttlout_command:	
  3354                           
  3355                           ;Main.c: 239: int val;
  3356                           ;Main.c: 241: if (strlen(param1) == 0) return -1;
  3357                           
  3358                           ;incstack = 0
  3359                           ; Regs used in _ttlout_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3360  02BE  0021               	movlb	1	; select bank1
  3361  02BF  0833               	movf	ttlout_command@param1^(0+128),w
  3362  02C0  0020               	movlb	0	; select bank0
  3363  02C1  00B7               	movwf	strlen@s
  3364  02C2  3000               	movlw	0
  3365  02C3  00B8               	movwf	strlen@s+1
  3366  02C4  318A  2221  3182   	fcall	_strlen
  3367  02C7  0020               	movlb	0	; select bank0
  3368  02C8  0838               	movf	?_strlen+1,w
  3369  02C9  0437               	iorwf	?_strlen,w
  3370  02CA  1D03               	skipz
  3371  02CB  2AD2               	goto	l4234
  3372  02CC  30FF               	movlw	255
  3373  02CD  0021               	movlb	1	; select bank1
  3374  02CE  00B3               	movwf	?_ttlout_command^(0+128)
  3375  02CF  30FF               	movlw	255
  3376  02D0  00B4               	movwf	(?_ttlout_command^(0+128)+1)
  3377  02D1  0008               	return
  3378  02D2                     l4234:	
  3379                           
  3380                           ;Main.c: 242: val = atoi(param1);
  3381  02D2  0021               	movlb	1	; select bank1
  3382  02D3  0833               	movf	ttlout_command@param1^(0+128),w
  3383  02D4  318E  264A  3182   	fcall	_atoi
  3384  02D7  0020               	movlb	0	; select bank0
  3385  02D8  083E               	movf	?_atoi+1,w
  3386  02D9  0021               	movlb	1	; select bank1
  3387  02DA  01B7               	clrf	(ttlout_command@val+1)^(0+128)
  3388  02DB  07B7               	addwf	(ttlout_command@val+1)^(0+128),f
  3389  02DC  0020               	movlb	0	; select bank0
  3390  02DD  083D               	movf	?_atoi,w
  3391  02DE  0021               	movlb	1	; select bank1
  3392  02DF  01B6               	clrf	ttlout_command@val^(0+128)
  3393  02E0  07B6               	addwf	ttlout_command@val^(0+128),f
  3394                           
  3395                           ;Main.c: 243: if (val < 0 || val > 1) return -2;
  3396  02E1  1BB7               	btfsc	(ttlout_command@val+1)^(0+128),7
  3397  02E2  2AEE               	goto	l4240
  3398  02E3  0837               	movf	(ttlout_command@val+1)^(0+128),w
  3399  02E4  3A80               	xorlw	128
  3400  02E5  00B5               	movwf	??_ttlout_command^(0+128)
  3401  02E6  3080               	movlw	128
  3402  02E7  0235               	subwf	??_ttlout_command^(0+128),w
  3403  02E8  1D03               	skipz
  3404  02E9  2AEC               	goto	u6515
  3405  02EA  3002               	movlw	2
  3406  02EB  0236               	subwf	ttlout_command@val^(0+128),w
  3407  02EC                     u6515:	
  3408  02EC  1C03               	skipc
  3409  02ED  2AF4               	goto	l322
  3410  02EE                     l4240:	
  3411  02EE  30FE               	movlw	254
  3412  02EF  0021               	movlb	1	; select bank1
  3413  02F0  00B3               	movwf	?_ttlout_command^(0+128)
  3414  02F1  30FF               	movlw	255
  3415  02F2  00B4               	movwf	(?_ttlout_command^(0+128)+1)
  3416  02F3  0008               	return
  3417  02F4                     l322:	
  3418                           
  3419                           ;Main.c: 244: RA7 = ~val;
  3420  02F4  0021               	movlb	1	; select bank1
  3421  02F5  1836               	btfsc	ttlout_command@val^(0+128),0
  3422  02F6  2AFA               	goto	u6520
  3423  02F7  0020               	movlb	0	; select bank0
  3424  02F8  178C               	bsf	12,7	;volatile
  3425  02F9  2AFC               	goto	l4244
  3426  02FA                     u6520:	
  3427  02FA  0020               	movlb	0	; select bank0
  3428  02FB  138C               	bcf	12,7	;volatile
  3429  02FC                     l4244:	
  3430                           
  3431                           ;Main.c: 245: return 0;
  3432  02FC  0021               	movlb	1	; select bank1
  3433  02FD  01B3               	clrf	?_ttlout_command^(0+128)
  3434  02FE  01B4               	clrf	(?_ttlout_command+1)^(0+128)
  3435  02FF  0008               	return
  3436  0300                     __end_of_ttlout_command:	
  3437                           
  3438                           	psect	text9
  3439  0720                     __ptext9:	
  3440 ;; *************** function _sprintf *****************
  3441 ;; Defined at:
  3442 ;;		line 492 in file "/Applications/microchip/xc8/v1.32/sources/common/doprnt.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  sp              1    wreg     PTR unsigned char 
  3445 ;;		 -> status_command@buf(10), 
  3446 ;;  f               2    2[BANK1 ] PTR const unsigned char 
  3447 ;;		 -> STR_33(7), STR_32(8), STR_31(8), STR_30(8), 
  3448 ;;		 -> STR_29(8), STR_28(8), STR_27(8), STR_26(8), 
  3449 ;;		 -> STR_25(8), 
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;  sp              1   17[BANK1 ] PTR unsigned char 
  3452 ;;		 -> status_command@buf(10), 
  3453 ;;  _val            4   13[BANK1 ] struct .
  3454 ;;  c               1   18[BANK1 ] char 
  3455 ;;  prec            1   12[BANK1 ] char 
  3456 ;;  flag            1   11[BANK1 ] unsigned char 
  3457 ;;  ap              1   10[BANK1 ] PTR void [1]
  3458 ;;		 -> ?_sprintf(2), 
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  2    2[BANK1 ] int 
  3461 ;; Registers used:
  3462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3468 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3469 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3470 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3471 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  3472 ;;Total ram usage:       17 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:    3
  3475 ;; This function calls:
  3476 ;;		___lwdiv
  3477 ;;		___lwmod
  3478 ;; This function is called by:
  3479 ;;		_status_command
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           
  3484                           ;psect for function _sprintf
  3485  0720                     _sprintf:	
  3486                           
  3487                           ;incstack = 0
  3488                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3489                           ;sprintf@sp stored from wreg
  3490  0720  0021               	movlb	1	; select bank1
  3491  0721  00B1               	movwf	sprintf@sp^(0+128)
  3492                           
  3493                           ;doprnt.c: 494: va_list ap;
  3494                           ;doprnt.c: 499: signed char c;
  3495                           ;doprnt.c: 506: signed char prec;
  3496                           ;doprnt.c: 508: unsigned char flag;
  3497                           ;doprnt.c: 527: union {
  3498                           ;doprnt.c: 528: unsigned int _val;
  3499                           ;doprnt.c: 529: struct {
  3500                           ;doprnt.c: 530: const char * _cp;
  3501                           ;doprnt.c: 531: unsigned _len;
  3502                           ;doprnt.c: 532: } _str;
  3503                           ;doprnt.c: 533: } _val;
  3504                           ;doprnt.c: 542: *ap = __va_start();
  3505  0722  30A4               	movlw	(?_sprintf+2)& (0+255)
  3506  0723  00A6               	movwf	??_sprintf^(0+128)
  3507  0724  0826               	movf	??_sprintf^(0+128),w
  3508  0725  00AA               	movwf	sprintf@ap^(0+128)
  3509  0726                     l4012:	
  3510                           ;doprnt.c: 545: while(c = *f++) {
  3511                           
  3512  0726  0823               	movf	(sprintf@f+1)^(0+128),w
  3513  0727  00A7               	movwf	(??_sprintf^(0+128)+1)
  3514  0728  0822               	movf	sprintf@f^(0+128),w
  3515  0729  00A6               	movwf	??_sprintf^(0+128)
  3516  072A  0AA2               	incf	sprintf@f^(0+128),f
  3517  072B  1903               	skipnz
  3518  072C  0AA3               	incf	(sprintf@f+1)^(0+128),f
  3519  072D  0826               	movf	??_sprintf^(0+128),w
  3520  072E  0084               	movwf	4
  3521  072F  0827               	movf	(??_sprintf+1)^(0+128),w
  3522  0730  0085               	movwf	5
  3523  0731  0800               	movf	0,w	;code access
  3524  0732  00A8               	movwf	(??_sprintf+2)^(0+128)
  3525  0733  0828               	movf	(??_sprintf+2)^(0+128),w
  3526  0734  00B2               	movwf	sprintf@c^(0+128)
  3527  0735  08B2               	movf	sprintf@c^(0+128),f
  3528  0736  1903               	btfsc	3,2
  3529  0737  2FF6               	goto	l4014
  3530                           
  3531                           ;doprnt.c: 547: if(c != '%')
  3532  0738  0832               	movf	sprintf@c^(0+128),w
  3533  0739  3A25               	xorlw	37
  3534  073A  1903               	skipnz
  3535  073B  2F48               	goto	l3968
  3536                           
  3537                           ;doprnt.c: 549: {
  3538                           ;doprnt.c: 550: ((*sp++ = (c)));
  3539  073C  0832               	movf	sprintf@c^(0+128),w
  3540  073D  00A6               	movwf	??_sprintf^(0+128)
  3541  073E  0831               	movf	sprintf@sp^(0+128),w
  3542  073F  0086               	movwf	6
  3543  0740  0187               	clrf	7
  3544  0741  0826               	movf	??_sprintf^(0+128),w
  3545  0742  0081               	movwf	1
  3546  0743  3001               	movlw	1
  3547  0744  00A6               	movwf	??_sprintf^(0+128)
  3548  0745  0826               	movf	??_sprintf^(0+128),w
  3549  0746  07B1               	addwf	sprintf@sp^(0+128),f
  3550                           
  3551                           ;doprnt.c: 551: continue;
  3552  0747  2F26               	goto	l4012
  3553  0748                     l3968:	
  3554                           
  3555                           ;doprnt.c: 552: }
  3556                           ;doprnt.c: 557: flag = 0;
  3557  0748  01AB               	clrf	sprintf@flag^(0+128)
  3558                           
  3559                           ;doprnt.c: 831: }
  3560                           
  3561                           ;doprnt.c: 822: continue;
  3562                           
  3563                           ;doprnt.c: 811: default:
  3564                           
  3565                           ;doprnt.c: 707: case 'i':
  3566                           ;doprnt.c: 708: break;
  3567                           
  3568                           ;doprnt.c: 706: case 'd':
  3569                           
  3570                           ;doprnt.c: 647: goto alldone;
  3571                           
  3572                           ;doprnt.c: 646: case 0:
  3573                           
  3574                           ;doprnt.c: 644: switch(c = *f++) {
  3575  0749  0823               	movf	(sprintf@f+1)^(0+128),w
  3576  074A  00A7               	movwf	(??_sprintf^(0+128)+1)
  3577  074B  0822               	movf	sprintf@f^(0+128),w
  3578  074C  00A6               	movwf	??_sprintf^(0+128)
  3579  074D  0AA2               	incf	sprintf@f^(0+128),f
  3580  074E  1903               	skipnz
  3581  074F  0AA3               	incf	(sprintf@f+1)^(0+128),f
  3582  0750  0826               	movf	??_sprintf^(0+128),w
  3583  0751  0084               	movwf	4
  3584  0752  0827               	movf	(??_sprintf+1)^(0+128),w
  3585  0753  0085               	movwf	5
  3586  0754  0800               	movf	0,w	;code access
  3587  0755  00B2               	movwf	sprintf@c^(0+128)
  3588                           
  3589                           ; Switch size 1, requested type "space"
  3590                           ; Number of cases is 3, Range of values is 0 to 105
  3591                           ; switch strategies available:
  3592                           ; Name         Instructions Cycles
  3593                           ; simple_byte           10     6 (average)
  3594                           ; direct_byte          218     6 (fixed)
  3595                           ; jumptable            260     6 (fixed)
  3596                           ;	Chosen strategy is simple_byte
  3597  0756  3A00               	xorlw	0	; case 0
  3598  0757  1903               	skipnz
  3599  0758  2FF6               	goto	l4014
  3600  0759  3A64               	xorlw	100	; case 100
  3601  075A  1903               	skipnz
  3602  075B  2F60               	goto	l3974
  3603  075C  3A0D               	xorlw	13	; case 105
  3604  075D  1903               	skipnz
  3605  075E  2F60               	goto	l3974
  3606  075F  2F26               	goto	l4012
  3607  0760                     l3974:	
  3608                           
  3609                           ;doprnt.c: 1262: {
  3610                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3611  0760  082A               	movf	sprintf@ap^(0+128),w
  3612  0761  0086               	movwf	6
  3613  0762  0187               	clrf	7
  3614  0763  3F40               	moviw [0]fsr1
  3615  0764  00AD               	movwf	sprintf@_val^(0+128)
  3616  0765  3F41               	moviw [1]fsr1
  3617  0766  00AE               	movwf	(sprintf@_val+1)^(0+128)
  3618  0767  3002               	movlw	2
  3619  0768  00A6               	movwf	??_sprintf^(0+128)
  3620  0769  0826               	movf	??_sprintf^(0+128),w
  3621  076A  07AA               	addwf	sprintf@ap^(0+128),f
  3622                           
  3623                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  3624  076B  1FAE               	btfss	(sprintf@_val+1)^(0+128),7
  3625  076C  2F76               	goto	l3984
  3626                           
  3627                           ;doprnt.c: 1271: flag |= 0x03;
  3628  076D  3003               	movlw	3
  3629  076E  00A6               	movwf	??_sprintf^(0+128)
  3630  076F  0826               	movf	??_sprintf^(0+128),w
  3631  0770  04AB               	iorwf	sprintf@flag^(0+128),f
  3632                           
  3633                           ;doprnt.c: 1272: _val._val = -_val._val;
  3634  0771  09AD               	comf	sprintf@_val^(0+128),f
  3635  0772  09AE               	comf	(sprintf@_val+1)^(0+128),f
  3636  0773  0AAD               	incf	sprintf@_val^(0+128),f
  3637  0774  1903               	skipnz
  3638  0775  0AAE               	incf	(sprintf@_val+1)^(0+128),f
  3639  0776                     l3984:	
  3640                           
  3641                           ;doprnt.c: 1273: }
  3642                           ;doprnt.c: 1275: }
  3643                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3644  0776  01B2               	clrf	sprintf@c^(0+128)
  3645  0777  0AB2               	incf	sprintf@c^(0+128),f
  3646  0778  0832               	movf	sprintf@c^(0+128),w
  3647  0779  3A05               	xorlw	5
  3648  077A  1903               	btfsc	3,2
  3649  077B  2F9B               	goto	l3996
  3650  077C                     l3988:	
  3651                           
  3652                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  3653  077C  0832               	movf	sprintf@c^(0+128),w
  3654  077D  00A6               	movwf	??_sprintf^(0+128)
  3655  077E  01A7               	clrf	(??_sprintf^(0+128)+1)
  3656  077F  35A6               	lslf	??_sprintf^(0+128),f
  3657  0780  0DA7               	rlf	(??_sprintf^(0+128)+1),f
  3658  0781  3050               	movlw	low (_dpowers| (0+32768))
  3659  0782  0726               	addwf	??_sprintf^(0+128),w
  3660  0783  0084               	movwf	4
  3661  0784  3083               	movlw	high (_dpowers| (0+32768))
  3662  0785  3D27               	addwfc	(??_sprintf+1)^(0+128),w
  3663  0786  0085               	movwf	5
  3664  0787  3F00               	moviw [0]fsr0
  3665  0788  00A8               	movwf	(??_sprintf+2)^(0+128)
  3666  0789  3F01               	moviw [1]fsr0
  3667  078A  00A9               	movwf	((??_sprintf+2)^(0+128)+1)
  3668  078B  0829               	movf	(??_sprintf+3)^(0+128),w
  3669  078C  022E               	subwf	(sprintf@_val+1)^(0+128),w
  3670  078D  1D03               	skipz
  3671  078E  2F91               	goto	u6075
  3672  078F  0828               	movf	(??_sprintf+2)^(0+128),w
  3673  0790  022D               	subwf	sprintf@_val^(0+128),w
  3674  0791                     u6075:	
  3675  0791  1C03               	btfss	3,0
  3676  0792  2F9B               	goto	l3996
  3677                           
  3678                           ;doprnt.c: 1316: break;
  3679  0793  3001               	movlw	1
  3680  0794  00A6               	movwf	??_sprintf^(0+128)
  3681  0795  0826               	movf	??_sprintf^(0+128),w
  3682  0796  07B2               	addwf	sprintf@c^(0+128),f
  3683  0797  0832               	movf	sprintf@c^(0+128),w
  3684  0798  3A05               	xorlw	5
  3685  0799  1D03               	skipz
  3686  079A  2F7C               	goto	l3988
  3687  079B                     l3996:	
  3688                           
  3689                           ;doprnt.c: 1431: {
  3690                           ;doprnt.c: 1447: if(flag & 0x03)
  3691  079B  082B               	movf	sprintf@flag^(0+128),w
  3692  079C  3903               	andlw	3
  3693  079D  1903               	btfsc	3,2
  3694  079E  2FAA               	goto	l4002
  3695                           
  3696                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  3697  079F  302D               	movlw	45
  3698  07A0  00A6               	movwf	??_sprintf^(0+128)
  3699  07A1  0831               	movf	sprintf@sp^(0+128),w
  3700  07A2  0086               	movwf	6
  3701  07A3  0187               	clrf	7
  3702  07A4  0826               	movf	??_sprintf^(0+128),w
  3703  07A5  0081               	movwf	1
  3704  07A6  3001               	movlw	1
  3705  07A7  00A6               	movwf	??_sprintf^(0+128)
  3706  07A8  0826               	movf	??_sprintf^(0+128),w
  3707  07A9  07B1               	addwf	sprintf@sp^(0+128),f
  3708  07AA                     l4002:	
  3709                           
  3710                           ;doprnt.c: 1478: }
  3711                           ;doprnt.c: 1481: prec = c;
  3712  07AA  0832               	movf	sprintf@c^(0+128),w
  3713  07AB  00A6               	movwf	??_sprintf^(0+128)
  3714  07AC  0826               	movf	??_sprintf^(0+128),w
  3715  07AD  00AC               	movwf	sprintf@prec^(0+128)
  3716  07AE                     l4010:	
  3717                           ;doprnt.c: 1483: while(prec--) {
  3718                           
  3719  07AE  30FF               	movlw	-1
  3720  07AF  00A6               	movwf	??_sprintf^(0+128)
  3721  07B0  0826               	movf	??_sprintf^(0+128),w
  3722  07B1  07AC               	addwf	sprintf@prec^(0+128),f
  3723  07B2  082C               	movf	sprintf@prec^(0+128),w
  3724  07B3  3AFF               	xorlw	255
  3725  07B4  1903               	btfsc	3,2
  3726  07B5  2F26               	goto	l4012
  3727                           
  3728                           ;doprnt.c: 1487: {
  3729                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  3730  07B6  300A               	movlw	10
  3731  07B7  0020               	movlb	0	; select bank0
  3732  07B8  00BF               	movwf	___lwmod@divisor
  3733  07B9  3000               	movlw	0
  3734  07BA  00C0               	movwf	___lwmod@divisor+1
  3735  07BB  0021               	movlb	1	; select bank1
  3736  07BC  082C               	movf	sprintf@prec^(0+128),w
  3737  07BD  00A6               	movwf	??_sprintf^(0+128)
  3738  07BE  01A7               	clrf	(??_sprintf^(0+128)+1)
  3739  07BF  35A6               	lslf	??_sprintf^(0+128),f
  3740  07C0  0DA7               	rlf	(??_sprintf^(0+128)+1),f
  3741  07C1  3050               	movlw	low (_dpowers| (0+32768))
  3742  07C2  0726               	addwf	??_sprintf^(0+128),w
  3743  07C3  0084               	movwf	4
  3744  07C4  3083               	movlw	high (_dpowers| (0+32768))
  3745  07C5  3D27               	addwfc	(??_sprintf+1)^(0+128),w
  3746  07C6  0085               	movwf	5
  3747  07C7  3F00               	moviw [0]fsr0
  3748  07C8  0020               	movlb	0	; select bank0
  3749  07C9  00B7               	movwf	___lwdiv@divisor
  3750  07CA  3F01               	moviw [1]fsr0
  3751  07CB  00B8               	movwf	___lwdiv@divisor+1
  3752  07CC  0021               	movlb	1	; select bank1
  3753  07CD  082E               	movf	(sprintf@_val+1)^(0+128),w
  3754  07CE  0020               	movlb	0	; select bank0
  3755  07CF  01BA               	clrf	___lwdiv@dividend+1
  3756  07D0  07BA               	addwf	___lwdiv@dividend+1,f
  3757  07D1  0021               	movlb	1	; select bank1
  3758  07D2  082D               	movf	sprintf@_val^(0+128),w
  3759  07D3  0020               	movlb	0	; select bank0
  3760  07D4  01B9               	clrf	___lwdiv@dividend
  3761  07D5  07B9               	addwf	___lwdiv@dividend,f
  3762  07D6  318B  2300  3187   	fcall	___lwdiv
  3763  07D9  0020               	movlb	0	; select bank0
  3764  07DA  0838               	movf	?___lwdiv+1,w
  3765  07DB  01C2               	clrf	___lwmod@dividend+1
  3766  07DC  07C2               	addwf	___lwmod@dividend+1,f
  3767  07DD  0837               	movf	?___lwdiv,w
  3768  07DE  01C1               	clrf	___lwmod@dividend
  3769  07DF  07C1               	addwf	___lwmod@dividend,f
  3770  07E0  318A  22CA  3187   	fcall	___lwmod
  3771  07E3  0020               	movlb	0	; select bank0
  3772  07E4  083F               	movf	?___lwmod,w
  3773  07E5  3E30               	addlw	48
  3774  07E6  0021               	movlb	1	; select bank1
  3775  07E7  00A8               	movwf	(??_sprintf+2)^(0+128)
  3776  07E8  0828               	movf	(??_sprintf+2)^(0+128),w
  3777  07E9  00B2               	movwf	sprintf@c^(0+128)
  3778                           
  3779                           ;doprnt.c: 1532: }
  3780                           ;doprnt.c: 1533: ((*sp++ = (c)));
  3781  07EA  0832               	movf	sprintf@c^(0+128),w
  3782  07EB  00A6               	movwf	??_sprintf^(0+128)
  3783  07EC  0831               	movf	sprintf@sp^(0+128),w
  3784  07ED  0086               	movwf	6
  3785  07EE  0187               	clrf	7
  3786  07EF  0826               	movf	??_sprintf^(0+128),w
  3787  07F0  0081               	movwf	1
  3788  07F1  3001               	movlw	1
  3789  07F2  00A6               	movwf	??_sprintf^(0+128)
  3790  07F3  0826               	movf	??_sprintf^(0+128),w
  3791  07F4  07B1               	addwf	sprintf@sp^(0+128),f
  3792  07F5  2FAE               	goto	l4010
  3793  07F6                     l4014:	
  3794                           ;doprnt.c: 1534: }
  3795                           ;doprnt.c: 1542: }
  3796                           ;doprnt.c: 1544: alldone:
  3797                           
  3798                           
  3799                           ;doprnt.c: 1547: *sp = 0;
  3800  07F6  0831               	movf	sprintf@sp^(0+128),w
  3801  07F7  0086               	movwf	6
  3802  07F8  0187               	clrf	7
  3803  07F9  0181               	clrf	1
  3804  07FA  0008               	return
  3805  07FB                     __end_of_sprintf:	
  3806                           ;doprnt.c: 1549: return 0;
  3807                           ;	Return value of _sprintf is never used
  3808                           
  3809                           
  3810                           	psect	text10
  3811  0ACA                     __ptext10:	
  3812 ;; *************** function ___lwmod *****************
  3813 ;; Defined at:
  3814 ;;		line 6 in file "/Applications/microchip/xc8/v1.32/sources/common/lwmod.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  divisor         2   31[BANK0 ] unsigned int 
  3817 ;;  dividend        2   33[BANK0 ] unsigned int 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  counter         1    1[BANK1 ] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  2   31[BANK0 ] unsigned int 
  3822 ;; Registers used:
  3823 ;;		wreg, status,2, status,0
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3829 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3830 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3831 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3832 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3833 ;;Total ram usage:        6 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    2
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_sprintf
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           
  3844                           ;psect for function ___lwmod
  3845  0ACA                     ___lwmod:	
  3846                           
  3847                           ;incstack = 0
  3848                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3849  0ACA  0020               	movlb	0	; select bank0
  3850  0ACB  0840               	movf	___lwmod@divisor+1,w
  3851  0ACC  043F               	iorwf	___lwmod@divisor,w
  3852  0ACD  1903               	skipnz
  3853  0ACE  2AF8               	goto	l3890
  3854  0ACF  0021               	movlb	1	; select bank1
  3855  0AD0  01A1               	clrf	___lwmod@counter^(0+128)
  3856  0AD1  0AA1               	incf	___lwmod@counter^(0+128),f
  3857  0AD2                     l3880:	
  3858  0AD2  0020               	movlb	0	; select bank0
  3859  0AD3  1BC0               	btfsc	___lwmod@divisor+1,7
  3860  0AD4  2AE1               	goto	l3882
  3861  0AD5  3001               	movlw	1
  3862  0AD6  0020               	movlb	0	; select bank0
  3863  0AD7                     u5905:	
  3864  0AD7  35BF               	lslf	___lwmod@divisor,f
  3865  0AD8  0DC0               	rlf	___lwmod@divisor+1,f
  3866  0AD9  0B89               	decfsz	9,f
  3867  0ADA  2AD7               	goto	u5905
  3868  0ADB  3001               	movlw	1
  3869  0ADC  0021               	movlb	1	; select bank1
  3870  0ADD  00A0               	movwf	??___lwmod^(0+128)
  3871  0ADE  0820               	movf	??___lwmod^(0+128),w
  3872  0ADF  07A1               	addwf	___lwmod@counter^(0+128),f
  3873  0AE0  2AD2               	goto	l3880
  3874  0AE1                     l3882:	
  3875  0AE1  0020               	movlb	0	; select bank0
  3876  0AE2  0840               	movf	___lwmod@divisor+1,w
  3877  0AE3  0242               	subwf	___lwmod@dividend+1,w
  3878  0AE4  1D03               	skipz
  3879  0AE5  2AE8               	goto	u5925
  3880  0AE6  083F               	movf	___lwmod@divisor,w
  3881  0AE7  0241               	subwf	___lwmod@dividend,w
  3882  0AE8                     u5925:	
  3883  0AE8  1C03               	skipc
  3884  0AE9  2AEE               	goto	l3886
  3885  0AEA  083F               	movf	___lwmod@divisor,w
  3886  0AEB  02C1               	subwf	___lwmod@dividend,f
  3887  0AEC  0840               	movf	___lwmod@divisor+1,w
  3888  0AED  3BC2               	subwfb	___lwmod@dividend+1,f
  3889  0AEE                     l3886:	
  3890  0AEE  3001               	movlw	1
  3891  0AEF                     u5935:	
  3892  0AEF  36C0               	lsrf	___lwmod@divisor+1,f
  3893  0AF0  0CBF               	rrf	___lwmod@divisor,f
  3894  0AF1  0B89               	decfsz	9,f
  3895  0AF2  2AEF               	goto	u5935
  3896  0AF3  3001               	movlw	1
  3897  0AF4  0021               	movlb	1	; select bank1
  3898  0AF5  02A1               	subwf	___lwmod@counter^(0+128),f
  3899  0AF6  1D03               	btfss	3,2
  3900  0AF7  2AE1               	goto	l3882
  3901  0AF8                     l3890:	
  3902  0AF8  0020               	movlb	0	; select bank0
  3903  0AF9  0842               	movf	___lwmod@dividend+1,w
  3904  0AFA  01C0               	clrf	?___lwmod+1
  3905  0AFB  07C0               	addwf	?___lwmod+1,f
  3906  0AFC  0841               	movf	___lwmod@dividend,w
  3907  0AFD  01BF               	clrf	?___lwmod
  3908  0AFE  07BF               	addwf	?___lwmod,f
  3909  0AFF  0008               	return
  3910  0B00                     __end_of___lwmod:	
  3911                           
  3912                           	psect	text11
  3913  0B00                     __ptext11:	
  3914 ;; *************** function ___lwdiv *****************
  3915 ;; Defined at:
  3916 ;;		line 6 in file "/Applications/microchip/xc8/v1.32/sources/common/lwdiv.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  divisor         2   23[BANK0 ] unsigned int 
  3919 ;;  dividend        2   25[BANK0 ] unsigned int 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  quotient        2   29[BANK0 ] unsigned int 
  3922 ;;  counter         1   28[BANK0 ] unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  2   23[BANK0 ] unsigned int 
  3925 ;; Registers used:
  3926 ;;		wreg, status,2, status,0
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3932 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3933 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3934 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3935 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3936 ;;Total ram usage:        8 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    2
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_sprintf
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           
  3947                           ;psect for function ___lwdiv
  3948  0B00                     ___lwdiv:	
  3949                           
  3950                           ;incstack = 0
  3951                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3952  0B00  0020               	movlb	0	; select bank0
  3953  0B01  01BD               	clrf	___lwdiv@quotient
  3954  0B02  01BE               	clrf	___lwdiv@quotient+1
  3955  0B03  0838               	movf	___lwdiv@divisor+1,w
  3956  0B04  0437               	iorwf	___lwdiv@divisor,w
  3957  0B05  1903               	skipnz
  3958  0B06  2B30               	goto	l3052
  3959  0B07  01BC               	clrf	___lwdiv@counter
  3960  0B08  0ABC               	incf	___lwdiv@counter,f
  3961  0B09                     l3040:	
  3962  0B09  1BB8               	btfsc	___lwdiv@divisor+1,7
  3963  0B0A  2B15               	goto	l3042
  3964  0B0B  3001               	movlw	1
  3965  0B0C                     u4065:	
  3966  0B0C  35B7               	lslf	___lwdiv@divisor,f
  3967  0B0D  0DB8               	rlf	___lwdiv@divisor+1,f
  3968  0B0E  0B89               	decfsz	9,f
  3969  0B0F  2B0C               	goto	u4065
  3970  0B10  3001               	movlw	1
  3971  0B11  00BB               	movwf	??___lwdiv
  3972  0B12  083B               	movf	??___lwdiv,w
  3973  0B13  07BC               	addwf	___lwdiv@counter,f
  3974  0B14  2B09               	goto	l3040
  3975  0B15                     l3042:	
  3976  0B15  3001               	movlw	1
  3977  0B16                     u4085:	
  3978  0B16  35BD               	lslf	___lwdiv@quotient,f
  3979  0B17  0DBE               	rlf	___lwdiv@quotient+1,f
  3980  0B18  0B89               	decfsz	9,f
  3981  0B19  2B16               	goto	u4085
  3982  0B1A  0838               	movf	___lwdiv@divisor+1,w
  3983  0B1B  023A               	subwf	___lwdiv@dividend+1,w
  3984  0B1C  1D03               	skipz
  3985  0B1D  2B20               	goto	u4095
  3986  0B1E  0837               	movf	___lwdiv@divisor,w
  3987  0B1F  0239               	subwf	___lwdiv@dividend,w
  3988  0B20                     u4095:	
  3989  0B20  1C03               	skipc
  3990  0B21  2B27               	goto	l3048
  3991  0B22  0837               	movf	___lwdiv@divisor,w
  3992  0B23  02B9               	subwf	___lwdiv@dividend,f
  3993  0B24  0838               	movf	___lwdiv@divisor+1,w
  3994  0B25  3BBA               	subwfb	___lwdiv@dividend+1,f
  3995  0B26  143D               	bsf	___lwdiv@quotient,0
  3996  0B27                     l3048:	
  3997  0B27  3001               	movlw	1
  3998  0B28                     u4105:	
  3999  0B28  36B8               	lsrf	___lwdiv@divisor+1,f
  4000  0B29  0CB7               	rrf	___lwdiv@divisor,f
  4001  0B2A  0B89               	decfsz	9,f
  4002  0B2B  2B28               	goto	u4105
  4003  0B2C  3001               	movlw	1
  4004  0B2D  02BC               	subwf	___lwdiv@counter,f
  4005  0B2E  1D03               	btfss	3,2
  4006  0B2F  2B15               	goto	l3042
  4007  0B30                     l3052:	
  4008  0B30  083E               	movf	___lwdiv@quotient+1,w
  4009  0B31  01B8               	clrf	?___lwdiv+1
  4010  0B32  07B8               	addwf	?___lwdiv+1,f
  4011  0B33  083D               	movf	___lwdiv@quotient,w
  4012  0B34  01B7               	clrf	?___lwdiv
  4013  0B35  07B7               	addwf	?___lwdiv,f
  4014  0B36  0008               	return
  4015  0B37                     __end_of___lwdiv:	
  4016                           
  4017                           	psect	text12
  4018  0ECD                     __ptext12:	
  4019 ;; *************** function _sergetline *****************
  4020 ;; Defined at:
  4021 ;;		line 103 in file "support.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  buf             1    wreg     PTR unsigned char 
  4024 ;;		 -> main@cmdbuf(10), 
  4025 ;;  bsize           2    4[BANK1 ] int 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  buf             1    6[BANK1 ] PTR unsigned char 
  4028 ;;		 -> main@cmdbuf(10), 
  4029 ;;  i               2    7[BANK1 ] int 
  4030 ;;  c               1    9[BANK1 ] unsigned char 
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  2    4[BANK1 ] int 
  4033 ;; Registers used:
  4034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4040 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4041 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4042 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4043 ;;      Totals:         0       3       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4044 ;;Total ram usage:        9 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:    4
  4047 ;; This function calls:
  4048 ;;		_sergetchar
  4049 ;;		_serputchar
  4050 ;;		_serputstr
  4051 ;;		_tolower
  4052 ;; This function is called by:
  4053 ;;		_main
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           
  4058                           ;psect for function _sergetline
  4059  0ECD                     _sergetline:	
  4060                           
  4061                           ;incstack = 0
  4062                           ; Regs used in _sergetline: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4063                           ;sergetline@buf stored from wreg
  4064  0ECD  0021               	movlb	1	; select bank1
  4065  0ECE  00A6               	movwf	sergetline@buf^(0+128)
  4066                           
  4067                           ;support.c: 105: int i;
  4068                           ;support.c: 106: unsigned char c;
  4069                           ;support.c: 108: i = 0;
  4070  0ECF  01A7               	clrf	sergetline@i^(0+128)
  4071  0ED0  01A8               	clrf	(sergetline@i+1)^(0+128)
  4072  0ED1                     l4020:	
  4073                           ;support.c: 109: while(1) {
  4074                           
  4075                           
  4076                           ;support.c: 110: c = sergetchar();
  4077  0ED1  3189  219E  318E   	fcall	_sergetchar
  4078  0ED4  0020               	movlb	0	; select bank0
  4079  0ED5  00C0               	movwf	??_sergetline
  4080  0ED6  0840               	movf	??_sergetline,w
  4081  0ED7  0021               	movlb	1	; select bank1
  4082  0ED8  00A9               	movwf	sergetline@c^(0+128)
  4083                           
  4084                           ;support.c: 111: c = tolower(c);
  4085  0ED9  0829               	movf	sergetline@c^(0+128),w
  4086  0EDA  3189  21B2  318E   	fcall	_tolower
  4087  0EDD  0020               	movlb	0	; select bank0
  4088  0EDE  00C0               	movwf	??_sergetline
  4089  0EDF  0840               	movf	??_sergetline,w
  4090  0EE0  0021               	movlb	1	; select bank1
  4091  0EE1  00A9               	movwf	sergetline@c^(0+128)
  4092                           
  4093                           ;support.c: 113: if (c == 0x08 || c == 0x7f) {
  4094  0EE2  0829               	movf	sergetline@c^(0+128),w
  4095  0EE3  3A08               	xorlw	8
  4096  0EE4  1903               	skipnz
  4097  0EE5  2EEA               	goto	l4028
  4098  0EE6  0829               	movf	sergetline@c^(0+128),w
  4099  0EE7  3A7F               	xorlw	127
  4100  0EE8  1D03               	skipz
  4101  0EE9  2F07               	goto	l4036
  4102  0EEA                     l4028:	
  4103                           
  4104                           ;support.c: 114: if (i > 0) {
  4105  0EEA  0828               	movf	(sergetline@i+1)^(0+128),w
  4106  0EEB  3A80               	xorlw	128
  4107  0EEC  0020               	movlb	0	; select bank0
  4108  0EED  00C0               	movwf	??_sergetline
  4109  0EEE  3080               	movlw	128
  4110  0EEF  0240               	subwf	??_sergetline,w
  4111  0EF0  1D03               	skipz
  4112  0EF1  2EF5               	goto	u6145
  4113  0EF2  3001               	movlw	1
  4114  0EF3  0021               	movlb	1	; select bank1
  4115  0EF4  0227               	subwf	sergetline@i^(0+128),w
  4116  0EF5                     u6145:	
  4117  0EF5  1C03               	skipc
  4118  0EF6  2ED1               	goto	l4020
  4119                           
  4120                           ;support.c: 115: if (echo_enabled) serputstr("\b \b");
  4121  0EF7  1D7C               	btfss	_echo_enabled/(0+8),_echo_enabled& (0+7)
  4122  0EF8  2F01               	goto	l4034
  4123  0EF9  3077               	movlw	low (STR_36| (0+32768))
  4124  0EFA  0020               	movlb	0	; select bank0
  4125  0EFB  00BD               	movwf	serputstr@line
  4126  0EFC  3084               	movlw	high (STR_36| (0+32768))
  4127  0EFD  00BE               	movwf	serputstr@line+1
  4128  0EFE  318B  2337  318E   	fcall	_serputstr
  4129  0F01                     l4034:	
  4130                           
  4131                           ;support.c: 116: --i;
  4132  0F01  30FF               	movlw	255
  4133  0F02  0021               	movlb	1	; select bank1
  4134  0F03  07A7               	addwf	sergetline@i^(0+128),f
  4135  0F04  30FF               	movlw	255
  4136  0F05  3DA8               	addwfc	(sergetline@i+1)^(0+128),f
  4137                           
  4138                           ;support.c: 117: }
  4139                           ;support.c: 118: continue;
  4140  0F06  2ED1               	goto	l4020
  4141  0F07                     l4036:	
  4142                           
  4143                           ;support.c: 119: }
  4144                           ;support.c: 120: if (c == 0x0A) continue;
  4145  0F07  0829               	movf	sergetline@c^(0+128),w
  4146  0F08  3A0A               	xorlw	10
  4147  0F09  1903               	btfsc	3,2
  4148  0F0A  2ED1               	goto	l4020
  4149                           
  4150                           ;support.c: 121: if (c == 0x0D) {
  4151  0F0B  0829               	movf	sergetline@c^(0+128),w
  4152  0F0C  3A0D               	xorlw	13
  4153  0F0D  1D03               	skipz
  4154  0F0E  2F1A               	goto	l4046
  4155                           
  4156                           ;support.c: 122: if (echo_enabled) serputstr("\r\n");
  4157  0F0F  1D7C               	btfss	_echo_enabled/(0+8),_echo_enabled& (0+7)
  4158  0F10  2F52               	goto	l4060
  4159  0F11  30A4               	movlw	low ((STR_1+30)| (0+32768))
  4160  0F12  0020               	movlb	0	; select bank0
  4161  0F13  00BD               	movwf	serputstr@line
  4162  0F14  3083               	movlw	high ((STR_1+30)| (0+32768))
  4163  0F15  00BE               	movwf	serputstr@line+1
  4164  0F16  318B  2337  318E   	fcall	_serputstr
  4165                           
  4166                           ;support.c: 123: break;
  4167  0F19  2F52               	goto	l4060
  4168  0F1A                     l4046:	
  4169                           
  4170                           ;support.c: 124: }
  4171                           ;support.c: 125: buf[i++] = c;
  4172  0F1A  0021               	movlb	1	; select bank1
  4173  0F1B  0829               	movf	sergetline@c^(0+128),w
  4174  0F1C  0020               	movlb	0	; select bank0
  4175  0F1D  00C0               	movwf	??_sergetline
  4176  0F1E  0021               	movlb	1	; select bank1
  4177  0F1F  0827               	movf	sergetline@i^(0+128),w
  4178  0F20  0726               	addwf	sergetline@buf^(0+128),w
  4179  0F21  0020               	movlb	0	; select bank0
  4180  0F22  00C1               	movwf	??_sergetline+1
  4181  0F23  0841               	movf	??_sergetline+1,w
  4182  0F24  0086               	movwf	6
  4183  0F25  0187               	clrf	7
  4184  0F26  0840               	movf	??_sergetline,w
  4185  0F27  0081               	movwf	1
  4186  0F28  3001               	movlw	1
  4187  0F29  0021               	movlb	1	; select bank1
  4188  0F2A  07A7               	addwf	sergetline@i^(0+128),f
  4189  0F2B  3000               	movlw	0
  4190  0F2C  3DA8               	addwfc	(sergetline@i+1)^(0+128),f
  4191                           
  4192                           ;support.c: 126: if (echo_enabled) serputchar(c);
  4193  0F2D  1D7C               	btfss	_echo_enabled/(0+8),_echo_enabled& (0+7)
  4194  0F2E  2F33               	goto	l4054
  4195  0F2F  0829               	movf	sergetline@c^(0+128),w
  4196  0F30  3189  21AA  318E   	fcall	_serputchar
  4197  0F33                     l4054:	
  4198                           
  4199                           ;support.c: 127: if (i >= (bsize - 1)) return -1;
  4200  0F33  0021               	movlb	1	; select bank1
  4201  0F34  0824               	movf	sergetline@bsize^(0+128),w
  4202  0F35  3EFF               	addlw	255
  4203  0F36  0020               	movlb	0	; select bank0
  4204  0F37  00C0               	movwf	??_sergetline
  4205  0F38  30FF               	movlw	255
  4206  0F39  0021               	movlb	1	; select bank1
  4207  0F3A  3D25               	addwfc	(sergetline@bsize+1)^(0+128),w
  4208  0F3B  0020               	movlb	0	; select bank0
  4209  0F3C  00C1               	movwf	??_sergetline+1
  4210  0F3D  0021               	movlb	1	; select bank1
  4211  0F3E  0828               	movf	(sergetline@i+1)^(0+128),w
  4212  0F3F  3A80               	xorlw	128
  4213  0F40  0020               	movlb	0	; select bank0
  4214  0F41  00C2               	movwf	??_sergetline+2
  4215  0F42  0841               	movf	??_sergetline+1,w
  4216  0F43  3A80               	xorlw	128
  4217  0F44  0242               	subwf	??_sergetline+2,w
  4218  0F45  1D03               	skipz
  4219  0F46  2F4A               	goto	u6205
  4220  0F47  0840               	movf	??_sergetline,w
  4221  0F48  0021               	movlb	1	; select bank1
  4222  0F49  0227               	subwf	sergetline@i^(0+128),w
  4223  0F4A                     u6205:	
  4224  0F4A  1C03               	skipc
  4225  0F4B  2ED1               	goto	l4020
  4226  0F4C  30FF               	movlw	255
  4227  0F4D  0021               	movlb	1	; select bank1
  4228  0F4E  00A4               	movwf	?_sergetline^(0+128)
  4229  0F4F  30FF               	movlw	255
  4230  0F50  00A5               	movwf	(?_sergetline^(0+128)+1)
  4231  0F51  0008               	return
  4232  0F52                     l4060:	
  4233                           
  4234                           ;support.c: 128: }
  4235                           ;support.c: 129: buf[i] = 0;
  4236  0F52  0021               	movlb	1	; select bank1
  4237  0F53  0827               	movf	sergetline@i^(0+128),w
  4238  0F54  0726               	addwf	sergetline@buf^(0+128),w
  4239  0F55  0020               	movlb	0	; select bank0
  4240  0F56  00C0               	movwf	??_sergetline
  4241  0F57  0840               	movf	??_sergetline,w
  4242  0F58  0086               	movwf	6
  4243  0F59  0187               	clrf	7
  4244  0F5A  0181               	clrf	1
  4245                           
  4246                           ;support.c: 130: return 0;
  4247  0F5B  0021               	movlb	1	; select bank1
  4248  0F5C  01A4               	clrf	?_sergetline^(0+128)
  4249  0F5D  01A5               	clrf	(?_sergetline+1)^(0+128)
  4250  0F5E  0008               	return
  4251  0F5F                     __end_of_sergetline:	
  4252                           
  4253                           	psect	text13
  4254  09B2                     __ptext13:	
  4255 ;; *************** function _tolower *****************
  4256 ;; Defined at:
  4257 ;;		line 5 in file "/Applications/microchip/xc8/v1.32/sources/common/tolower.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  c               1    wreg     unsigned char 
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  c               1   23[BANK0 ] unsigned char 
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  1    wreg      unsigned char 
  4264 ;; Registers used:
  4265 ;;		wreg
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4274 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4275 ;;Total ram usage:        1 bytes
  4276 ;; Hardware stack levels used:    1
  4277 ;; Hardware stack levels required when called:    2
  4278 ;; This function calls:
  4279 ;;		Nothing
  4280 ;; This function is called by:
  4281 ;;		_sergetline
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           
  4286                           ;psect for function _tolower
  4287  09B2                     _tolower:	
  4288                           
  4289                           ;incstack = 0
  4290                           ; Regs used in _tolower: [wreg]
  4291                           ;tolower@c stored from wreg
  4292  09B2  0020               	movlb	0	; select bank0
  4293  09B3  00B7               	movwf	tolower@c
  4294  09B4  305B               	movlw	91
  4295  09B5  0237               	subwf	tolower@c,w
  4296  09B6  1803               	skipnc
  4297  09B7  29BD               	goto	l3248
  4298  09B8  3041               	movlw	65
  4299  09B9  0237               	subwf	tolower@c,w
  4300  09BA  1C03               	skipc
  4301  09BB  29BD               	goto	l3248
  4302  09BC  16B7               	bsf	tolower@c,5
  4303  09BD                     l3248:	
  4304  09BD  0837               	movf	tolower@c,w
  4305  09BE  0008               	return
  4306  09BF                     __end_of_tolower:	
  4307                           
  4308                           	psect	text14
  4309  0B37                     __ptext14:	
  4310 ;; *************** function _serputstr *****************
  4311 ;; Defined at:
  4312 ;;		line 93 in file "support.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;  line            2   29[BANK0 ] PTR const unsigned char 
  4315 ;;		 -> STR_37(3), STR_36(4), STR_35(2), STR_34(2), 
  4316 ;;		 -> status_command@buf(10), STR_24(4), STR_13(2), STR_12(4), 
  4317 ;;		 -> STR_11(27), STR_10(6), STR_9(25), STR_8(6), 
  4318 ;;		 -> STR_7(24), STR_6(6), STR_5(2), STR_4(4), 
  4319 ;;		 -> STR_3(36), STR_2(6), STR_1(33), 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  i               2    2[BANK1 ] int 
  4322 ;;  len             2    0[BANK1 ] int 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;		None               void
  4325 ;; Registers used:
  4326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4332 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4333 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4334 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4335 ;;      Totals:         0       3       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4336 ;;Total ram usage:        7 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; Hardware stack levels required when called:    3
  4339 ;; This function calls:
  4340 ;;		_serputchar
  4341 ;;		_strlen
  4342 ;; This function is called by:
  4343 ;;		_main
  4344 ;;		_status_command
  4345 ;;		_sergetline
  4346 ;; This function uses a non-reentrant model
  4347 ;;
  4348                           
  4349                           
  4350                           ;psect for function _serputstr
  4351  0B37                     _serputstr:	
  4352                           
  4353                           ;support.c: 95: int len, i;
  4354                           ;support.c: 97: len = strlen(line);
  4355                           
  4356                           ;incstack = 0
  4357                           ; Regs used in _serputstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4358  0B37  0020               	movlb	0	; select bank0
  4359  0B38  083E               	movf	serputstr@line+1,w
  4360  0B39  01B8               	clrf	strlen@s+1
  4361  0B3A  07B8               	addwf	strlen@s+1,f
  4362  0B3B  083D               	movf	serputstr@line,w
  4363  0B3C  01B7               	clrf	strlen@s
  4364  0B3D  07B7               	addwf	strlen@s,f
  4365  0B3E  318A  2221  318B   	fcall	_strlen
  4366  0B41  0020               	movlb	0	; select bank0
  4367  0B42  0838               	movf	?_strlen+1,w
  4368  0B43  0021               	movlb	1	; select bank1
  4369  0B44  01A1               	clrf	(serputstr@len+1)^(0+128)
  4370  0B45  07A1               	addwf	(serputstr@len+1)^(0+128),f
  4371  0B46  0020               	movlb	0	; select bank0
  4372  0B47  0837               	movf	?_strlen,w
  4373  0B48  0021               	movlb	1	; select bank1
  4374  0B49  01A0               	clrf	serputstr@len^(0+128)
  4375  0B4A  07A0               	addwf	serputstr@len^(0+128),f
  4376                           
  4377                           ;support.c: 98: for (i = 0; i < len; ++i) {
  4378  0B4B  01A2               	clrf	serputstr@i^(0+128)
  4379  0B4C  01A3               	clrf	(serputstr@i+1)^(0+128)
  4380  0B4D                     l3926:	
  4381  0B4D  0823               	movf	(serputstr@i+1)^(0+128),w
  4382  0B4E  3A80               	xorlw	128
  4383  0B4F  0020               	movlb	0	; select bank0
  4384  0B50  00BF               	movwf	??_serputstr
  4385  0B51  0021               	movlb	1	; select bank1
  4386  0B52  0821               	movf	(serputstr@len+1)^(0+128),w
  4387  0B53  3A80               	xorlw	128
  4388  0B54  0020               	movlb	0	; select bank0
  4389  0B55  023F               	subwf	??_serputstr,w
  4390  0B56  1D03               	skipz
  4391  0B57  2B5B               	goto	u5995
  4392  0B58  0021               	movlb	1	; select bank1
  4393  0B59  0820               	movf	serputstr@len^(0+128),w
  4394  0B5A  0222               	subwf	serputstr@i^(0+128),w
  4395  0B5B                     u5995:	
  4396  0B5B  1803               	btfsc	3,0
  4397  0B5C  0008               	return
  4398                           
  4399                           ;support.c: 99: serputchar(line[i]);
  4400  0B5D  0020               	movlb	0	; select bank0
  4401  0B5E  083D               	movf	serputstr@line,w
  4402  0B5F  0021               	movlb	1	; select bank1
  4403  0B60  0722               	addwf	serputstr@i^(0+128),w
  4404  0B61  0084               	movwf	4
  4405  0B62  0020               	movlb	0	; select bank0
  4406  0B63  083E               	movf	serputstr@line+1,w
  4407  0B64  0021               	movlb	1	; select bank1
  4408  0B65  3D23               	addwfc	(serputstr@i+1)^(0+128),w
  4409  0B66  0085               	movwf	5
  4410  0B67  0800               	movf	0,w	;code access
  4411  0B68  3189  21AA  318B   	fcall	_serputchar
  4412  0B6B  3001               	movlw	1
  4413  0B6C  0021               	movlb	1	; select bank1
  4414  0B6D  07A2               	addwf	serputstr@i^(0+128),f
  4415  0B6E  3000               	movlw	0
  4416  0B6F  3DA3               	addwfc	(serputstr@i+1)^(0+128),f
  4417  0B70  2B4D               	goto	l3926
  4418  0B71                     __end_of_serputstr:	
  4419                           
  4420                           	psect	text15
  4421  09AA                     __ptext15:	
  4422 ;; *************** function _serputchar *****************
  4423 ;; Defined at:
  4424 ;;		line 81 in file "support.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  c               1    wreg     const unsigned char 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  c               1   23[BANK0 ] const unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;		None               void
  4431 ;; Registers used:
  4432 ;;		wreg
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4439 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4441 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4442 ;;Total ram usage:        1 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; Hardware stack levels required when called:    2
  4445 ;; This function calls:
  4446 ;;		Nothing
  4447 ;; This function is called by:
  4448 ;;		_serputstr
  4449 ;;		_sergetline
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           
  4454                           ;psect for function _serputchar
  4455  09AA                     _serputchar:	
  4456                           
  4457                           ;incstack = 0
  4458                           ; Regs used in _serputchar: [wreg]
  4459                           ;serputchar@c stored from wreg
  4460  09AA  0020               	movlb	0	; select bank0
  4461  09AB  00B7               	movwf	serputchar@c
  4462  09AC                     l434:	
  4463                           ;support.c: 83: while(TXIF == 0);
  4464                           
  4465  09AC  1E11               	btfss	17,4	;volatile
  4466  09AD  29AC               	goto	l434
  4467                           
  4468                           ;support.c: 84: TXREG = c;
  4469  09AE  0837               	movf	serputchar@c,w
  4470  09AF  0023               	movlb	3	; select bank3
  4471  09B0  009A               	movwf	26	;volatile
  4472  09B1  0008               	return
  4473  09B2                     __end_of_serputchar:	
  4474                           
  4475                           	psect	text16
  4476  099E                     __ptext16:	
  4477 ;; *************** function _sergetchar *****************
  4478 ;; Defined at:
  4479 ;;		line 87 in file "support.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;		None
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;		None
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      unsigned char 
  4486 ;; Registers used:
  4487 ;;		wreg
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4497 ;;Total ram usage:        0 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    2
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		_sergetline
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           
  4508                           ;psect for function _sergetchar
  4509  099E                     _sergetchar:	
  4510  099E                     l440:	
  4511                           ;support.c: 89: while(RCIF == 0);
  4512                           
  4513                           ;incstack = 0
  4514                           ; Regs used in _sergetchar: [wreg]
  4515                           
  4516  099E  0020               	movlb	0	; select bank0
  4517  099F  1E91               	btfss	17,5	;volatile
  4518  09A0  299E               	goto	l440
  4519                           
  4520                           ;support.c: 90: return RCREG;
  4521  09A1  0023               	movlb	3	; select bank3
  4522  09A2  0819               	movf	25,w	;volatile
  4523  09A3  0008               	return
  4524  09A4                     __end_of_sergetchar:	
  4525                           
  4526                           	psect	text17
  4527  0A9A                     __ptext17:	
  4528 ;; *************** function ___lmul *****************
  4529 ;; Defined at:
  4530 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul32.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;  multiplier      4   23[BANK0 ] unsigned long 
  4533 ;;  multiplicand    4   27[BANK0 ] unsigned long 
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;  product         4   31[BANK0 ] unsigned long 
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  4   23[BANK0 ] unsigned long 
  4538 ;; Registers used:
  4539 ;;		wreg, status,2, status,0
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4545 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;Total ram usage:       12 bytes
  4550 ;; Hardware stack levels used:    1
  4551 ;; Hardware stack levels required when called:    2
  4552 ;; This function calls:
  4553 ;;		Nothing
  4554 ;; This function is called by:
  4555 ;;		_main
  4556 ;;		_power_command
  4557 ;;		_status_command
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function ___lmul
  4563  0A9A                     ___lmul:	
  4564                           
  4565                           ;incstack = 0
  4566                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4567  0A9A  3000               	movlw	0
  4568  0A9B  0020               	movlb	0	; select bank0
  4569  0A9C  00C2               	movwf	___lmul@product+3
  4570  0A9D  3000               	movlw	0
  4571  0A9E  00C1               	movwf	___lmul@product+2
  4572  0A9F  3000               	movlw	0
  4573  0AA0  00C0               	movwf	___lmul@product+1
  4574  0AA1  3000               	movlw	0
  4575  0AA2  00BF               	movwf	___lmul@product
  4576  0AA3                     l3254:	
  4577  0AA3  1C37               	btfss	___lmul@multiplier,0
  4578  0AA4  2AAD               	goto	l3258
  4579  0AA5  083B               	movf	___lmul@multiplicand,w
  4580  0AA6  07BF               	addwf	___lmul@product,f
  4581  0AA7  083C               	movf	___lmul@multiplicand+1,w
  4582  0AA8  3DC0               	addwfc	___lmul@product+1,f
  4583  0AA9  083D               	movf	___lmul@multiplicand+2,w
  4584  0AAA  3DC1               	addwfc	___lmul@product+2,f
  4585  0AAB  083E               	movf	___lmul@multiplicand+3,w
  4586  0AAC  3DC2               	addwfc	___lmul@product+3,f
  4587  0AAD                     l3258:	
  4588  0AAD  3001               	movlw	1
  4589  0AAE                     u4455:	
  4590  0AAE  35BB               	lslf	___lmul@multiplicand,f
  4591  0AAF  0DBC               	rlf	___lmul@multiplicand+1,f
  4592  0AB0  0DBD               	rlf	___lmul@multiplicand+2,f
  4593  0AB1  0DBE               	rlf	___lmul@multiplicand+3,f
  4594  0AB2  0B89               	decfsz	9,f
  4595  0AB3  2AAE               	goto	u4455
  4596  0AB4  3001               	movlw	1
  4597  0AB5                     u4465:	
  4598  0AB5  36BA               	lsrf	___lmul@multiplier+3,f
  4599  0AB6  0CB9               	rrf	___lmul@multiplier+2,f
  4600  0AB7  0CB8               	rrf	___lmul@multiplier+1,f
  4601  0AB8  0CB7               	rrf	___lmul@multiplier,f
  4602  0AB9  0B89               	decfsz	9,f
  4603  0ABA  2AB5               	goto	u4465
  4604  0ABB  083A               	movf	___lmul@multiplier+3,w
  4605  0ABC  0439               	iorwf	___lmul@multiplier+2,w
  4606  0ABD  0438               	iorwf	___lmul@multiplier+1,w
  4607  0ABE  0437               	iorwf	___lmul@multiplier,w
  4608  0ABF  1D03               	skipz
  4609  0AC0  2AA3               	goto	l3254
  4610  0AC1  0842               	movf	___lmul@product+3,w
  4611  0AC2  00BA               	movwf	?___lmul+3
  4612  0AC3  0841               	movf	___lmul@product+2,w
  4613  0AC4  00B9               	movwf	?___lmul+2
  4614  0AC5  0840               	movf	___lmul@product+1,w
  4615  0AC6  00B8               	movwf	?___lmul+1
  4616  0AC7  083F               	movf	___lmul@product,w
  4617  0AC8  00B7               	movwf	?___lmul
  4618  0AC9  0008               	return
  4619  0ACA                     __end_of___lmul:	
  4620                           
  4621                           	psect	text18
  4622  0D22                     __ptext18:	
  4623 ;; *************** function _pic_setup *****************
  4624 ;; Defined at:
  4625 ;;		line 8 in file "support.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;		None
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;		None
  4630 ;; Return value:  Size  Location     Type
  4631 ;;		None               void
  4632 ;; Registers used:
  4633 ;;		wreg, status,2
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4643 ;;Total ram usage:        0 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; Hardware stack levels required when called:    2
  4646 ;; This function calls:
  4647 ;;		Nothing
  4648 ;; This function is called by:
  4649 ;;		_main
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           
  4654                           ;psect for function _pic_setup
  4655  0D22                     _pic_setup:	
  4656                           
  4657                           ;support.c: 11: OSCCON = 0xF0;
  4658                           
  4659                           ;incstack = 0
  4660                           ; Regs used in _pic_setup: [wreg+status,2]
  4661  0D22  30F0               	movlw	240
  4662  0D23  0021               	movlb	1	; select bank1
  4663  0D24  0099               	movwf	25	;volatile
  4664                           
  4665                           ;support.c: 14: TRISA = ~0x84;
  4666  0D25  307B               	movlw	123
  4667  0D26  008C               	movwf	12	;volatile
  4668                           
  4669                           ;support.c: 17: TRISB = ~0x3F;
  4670  0D27  30C0               	movlw	192
  4671  0D28  008D               	movwf	13	;volatile
  4672                           
  4673                           ;support.c: 20: TRISC = ~0x0F;
  4674  0D29  30F0               	movlw	240
  4675  0D2A  008E               	movwf	14	;volatile
  4676                           
  4677                           ;support.c: 23: ANSELA = 0x03;
  4678  0D2B  3003               	movlw	3
  4679  0D2C  0023               	movlb	3	; select bank3
  4680  0D2D  008C               	movwf	12	;volatile
  4681                           
  4682                           ;support.c: 26: ANSELB = 0x00;
  4683  0D2E  018D               	clrf	13	;volatile
  4684                           
  4685                           ;support.c: 29: RC2 = 0;
  4686  0D2F  0020               	movlb	0	; select bank0
  4687  0D30  110E               	bcf	14,2	;volatile
  4688                           
  4689                           ;support.c: 30: RC0 = 0;
  4690  0D31  100E               	bcf	14,0	;volatile
  4691                           
  4692                           ;support.c: 31: RC3 = 0;
  4693  0D32  118E               	bcf	14,3	;volatile
  4694                           
  4695                           ;support.c: 32: RC1 = 0;
  4696  0D33  108E               	bcf	14,1	;volatile
  4697                           
  4698                           ;support.c: 33: RB0 = 1;
  4699  0D34  140D               	bsf	13,0	;volatile
  4700                           
  4701                           ;support.c: 34: RB1 = 1;
  4702  0D35  148D               	bsf	13,1	;volatile
  4703                           
  4704                           ;support.c: 35: RB2 = 1;
  4705  0D36  150D               	bsf	13,2	;volatile
  4706                           
  4707                           ;support.c: 36: RB3 = 1;
  4708  0D37  158D               	bsf	13,3	;volatile
  4709                           
  4710                           ;support.c: 37: RB4 = 1;
  4711  0D38  160D               	bsf	13,4	;volatile
  4712                           
  4713                           ;support.c: 38: RB5 = 1;
  4714  0D39  168D               	bsf	13,5	;volatile
  4715                           
  4716                           ;support.c: 39: RA7 = 1;
  4717  0D3A  178C               	bsf	12,7	;volatile
  4718                           
  4719                           ;support.c: 42: ADCON1 = 0x60;
  4720  0D3B  3060               	movlw	96
  4721  0D3C  0021               	movlb	1	; select bank1
  4722  0D3D  009E               	movwf	30	;volatile
  4723                           
  4724                           ;support.c: 45: ADCON0 = 0x01;
  4725  0D3E  3001               	movlw	1
  4726  0D3F  009D               	movwf	29	;volatile
  4727                           
  4728                           ;support.c: 49: OPTION_REG = 0x04;
  4729  0D40  3004               	movlw	4
  4730  0D41  0095               	movwf	21	;volatile
  4731                           
  4732                           ;support.c: 52: CCP2CON = 0x0C;
  4733  0D42  300C               	movlw	12
  4734  0D43  0025               	movlb	5	; select bank5
  4735  0D44  009A               	movwf	26	;volatile
  4736                           
  4737                           ;support.c: 53: CCPTMRS0 = 0x00;
  4738  0D45  019E               	clrf	30	;volatile
  4739                           
  4740                           ;support.c: 54: PR2 = 0x3F;
  4741  0D46  303F               	movlw	63
  4742  0D47  0020               	movlb	0	; select bank0
  4743  0D48  009B               	movwf	27	;volatile
  4744                           
  4745                           ;support.c: 55: T2CON = 0x04;
  4746  0D49  3004               	movlw	4
  4747  0D4A  009C               	movwf	28	;volatile
  4748                           
  4749                           ;support.c: 56: CCPR2L = 0x00;
  4750  0D4B  0025               	movlb	5	; select bank5
  4751  0D4C  0198               	clrf	24	;volatile
  4752                           
  4753                           ;support.c: 59: BRG16 = 1;
  4754  0D4D  0023               	movlb	3	; select bank3
  4755  0D4E  159F               	bsf	31,3	;volatile
  4756                           
  4757                           ;support.c: 60: BRGH = 1;
  4758  0D4F  151E               	bsf	30,2	;volatile
  4759                           
  4760                           ;support.c: 61: SPBRGL = 0x40;
  4761  0D50  3040               	movlw	64
  4762  0D51  009B               	movwf	27	;volatile
  4763                           
  4764                           ;support.c: 62: SPBRGH = 0x03;
  4765  0D52  3003               	movlw	3
  4766  0D53  009C               	movwf	28	;volatile
  4767                           
  4768                           ;support.c: 63: SYNC = 0;
  4769  0D54  121E               	bcf	30,4	;volatile
  4770                           
  4771                           ;support.c: 64: SPEN = 1;
  4772  0D55  179D               	bsf	29,7	;volatile
  4773                           
  4774                           ;support.c: 65: CREN = 1;
  4775  0D56  161D               	bsf	29,4	;volatile
  4776                           
  4777                           ;support.c: 66: TXEN = 1;
  4778  0D57  169E               	bsf	30,5	;volatile
  4779                           
  4780                           ;support.c: 70: enc_A_2 = enc_A_1 = RC4;
  4781  0D58  107D               	bcf	_enc_A_1/(0+8),_enc_A_1& (0+7)
  4782  0D59  0020               	movlb	0	; select bank0
  4783  0D5A  1A0E               	btfsc	14,4	;volatile
  4784  0D5B  147D               	bsf	_enc_A_1/(0+8),_enc_A_1& (0+7)
  4785  0D5C  10FD               	bcf	_enc_A_2/(0+8),_enc_A_2& (0+7)
  4786  0D5D  187D               	btfsc	_enc_A_1/(0+8),_enc_A_1& (0+7)
  4787  0D5E  14FD               	bsf	_enc_A_2/(0+8),_enc_A_2& (0+7)
  4788                           
  4789                           ;support.c: 71: enc_B_2 = enc_B_1 = RC5;
  4790  0D5F  117D               	bcf	_enc_B_1/(0+8),_enc_B_1& (0+7)
  4791  0D60  0020               	movlb	0	; select bank0
  4792  0D61  1A8E               	btfsc	14,5	;volatile
  4793  0D62  157D               	bsf	_enc_B_1/(0+8),_enc_B_1& (0+7)
  4794  0D63  11FD               	bcf	_enc_B_2/(0+8),_enc_B_2& (0+7)
  4795  0D64  197D               	btfsc	_enc_B_1/(0+8),_enc_B_1& (0+7)
  4796  0D65  15FD               	bsf	_enc_B_2/(0+8),_enc_B_2& (0+7)
  4797                           
  4798                           ;support.c: 72: enc_position = 0;
  4799  0D66  0020               	movlb	0	; select bank0
  4800  0D67  01CB               	clrf	_enc_position
  4801  0D68  01CC               	clrf	_enc_position+1
  4802                           
  4803                           ;support.c: 73: power_light_counter = 0;
  4804  0D69  01CD               	clrf	_power_light_counter
  4805  0D6A  01CE               	clrf	_power_light_counter+1
  4806                           
  4807                           ;support.c: 76: TMR0IE = 1;
  4808  0D6B  168B               	bsf	11,5	;volatile
  4809                           
  4810                           ;support.c: 77: GIE = 1;
  4811  0D6C  178B               	bsf	11,7	;volatile
  4812  0D6D  0008               	return
  4813  0D6E                     __end_of_pic_setup:	
  4814                           
  4815                           	psect	text19
  4816  0F5F                     __ptext19:	
  4817 ;; *************** function _parse_setup_cmd *****************
  4818 ;; Defined at:
  4819 ;;		line 130 in file "Main.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;  buf             1    wreg     PTR unsigned char 
  4822 ;;		 -> main@cmdbuf(10), 
  4823 ;;  cmd_descr       1    8[BANK1 ] PTR struct command
  4824 ;;		 -> main@cmd_descr(12), 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  buf             1   28[BANK1 ] PTR unsigned char 
  4827 ;;		 -> main@cmdbuf(10), 
  4828 ;;  cbuf           10   16[BANK1 ] unsigned char [10]
  4829 ;;  i               2   29[BANK1 ] int 
  4830 ;;  num_cmds        2   26[BANK1 ] int 
  4831 ;;  tokptr          1   31[BANK1 ] PTR unsigned char 
  4832 ;;		 -> NULL(0), main@cmdbuf(10), 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  2    8[BANK1 ] int 
  4835 ;; Registers used:
  4836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4842 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4843 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  4844 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4845 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  4846 ;;Total ram usage:       24 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    5
  4849 ;; This function calls:
  4850 ;;		_strcmp
  4851 ;;		_strcpy
  4852 ;;		_strtok
  4853 ;; This function is called by:
  4854 ;;		_main
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857                           
  4858                           
  4859                           ;psect for function _parse_setup_cmd
  4860  0F5F                     _parse_setup_cmd:	
  4861                           
  4862                           ;incstack = 0
  4863                           ; Regs used in _parse_setup_cmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4864                           ;parse_setup_cmd@buf stored from wreg
  4865  0F5F  0021               	movlb	1	; select bank1
  4866  0F60  00BC               	movwf	parse_setup_cmd@buf^(0+128)
  4867                           
  4868                           ;Main.c: 132: char cbuf[10];
  4869                           ;Main.c: 133: char *tokptr;
  4870                           ;Main.c: 134: int num_cmds, i;
  4871                           ;Main.c: 137: cmd_descr->arg1[0] = 0;
  4872  0F61  0828               	movf	parse_setup_cmd@cmd_descr^(0+128),w
  4873  0F62  0086               	movwf	6
  4874  0F63  0187               	clrf	7
  4875  0F64  0181               	clrf	1
  4876                           
  4877                           ;Main.c: 140: tokptr = strtok(buf, " ");
  4878  0F65  3081               	movlw	low ((STR_24+2)| (0+32768))
  4879  0F66  00A3               	movwf	strtok@s2^(0+128)
  4880  0F67  3084               	movlw	high ((STR_24+2)| (0+32768))
  4881  0F68  00A4               	movwf	(strtok@s2^(0+128)+1)
  4882  0F69  083C               	movf	parse_setup_cmd@buf^(0+128),w
  4883  0F6A  318D  256E  318F   	fcall	_strtok
  4884  0F6D  0021               	movlb	1	; select bank1
  4885  0F6E  00AA               	movwf	??_parse_setup_cmd^(0+128)
  4886  0F6F  082A               	movf	??_parse_setup_cmd^(0+128),w
  4887  0F70  00BF               	movwf	parse_setup_cmd@tokptr^(0+128)
  4888                           
  4889                           ;Main.c: 141: if (tokptr == (0)) {
  4890  0F71  08BF               	movf	parse_setup_cmd@tokptr^(0+128),f
  4891  0F72  1D03               	skipz
  4892  0F73  2F79               	goto	l4078
  4893                           
  4894                           ;Main.c: 142: return -1;
  4895  0F74  30FF               	movlw	255
  4896  0F75  00A8               	movwf	?_parse_setup_cmd^(0+128)
  4897  0F76  30FF               	movlw	255
  4898  0F77  00A9               	movwf	(?_parse_setup_cmd^(0+128)+1)
  4899  0F78  0008               	return
  4900  0F79                     l4078:	
  4901                           ;Main.c: 143: } else {
  4902                           
  4903                           
  4904                           ;Main.c: 144: strcpy(cbuf, tokptr);
  4905  0F79  083F               	movf	parse_setup_cmd@tokptr^(0+128),w
  4906  0F7A  00AA               	movwf	??_parse_setup_cmd^(0+128)
  4907  0F7B  082A               	movf	??_parse_setup_cmd^(0+128),w
  4908  0F7C  0020               	movlb	0	; select bank0
  4909  0F7D  00B7               	movwf	strcpy@from
  4910  0F7E  30B0               	movlw	parse_setup_cmd@cbuf& (0+255)
  4911  0F7F  3189  21CE  318F   	fcall	_strcpy
  4912                           
  4913                           ;Main.c: 145: }
  4914                           ;Main.c: 148: tokptr = strtok((0), "~");
  4915  0F82  308B               	movlw	low (STR_23| (0+32768))
  4916  0F83  0021               	movlb	1	; select bank1
  4917  0F84  00A3               	movwf	strtok@s2^(0+128)
  4918  0F85  3084               	movlw	high (STR_23| (0+32768))
  4919  0F86  00A4               	movwf	(strtok@s2^(0+128)+1)
  4920  0F87  3000               	movlw	0
  4921  0F88  318D  256E  318F   	fcall	_strtok
  4922  0F8B  0021               	movlb	1	; select bank1
  4923  0F8C  00AA               	movwf	??_parse_setup_cmd^(0+128)
  4924  0F8D  082A               	movf	??_parse_setup_cmd^(0+128),w
  4925  0F8E  00BF               	movwf	parse_setup_cmd@tokptr^(0+128)
  4926                           
  4927                           ;Main.c: 149: if (tokptr != (0)) {
  4928  0F8F  083F               	movf	parse_setup_cmd@tokptr^(0+128),w
  4929  0F90  1903               	btfsc	3,2
  4930  0F91  2F9D               	goto	l4084
  4931                           
  4932                           ;Main.c: 150: strcpy(cmd_descr->arg1, tokptr);
  4933  0F92  083F               	movf	parse_setup_cmd@tokptr^(0+128),w
  4934  0F93  00AA               	movwf	??_parse_setup_cmd^(0+128)
  4935  0F94  082A               	movf	??_parse_setup_cmd^(0+128),w
  4936  0F95  0020               	movlb	0	; select bank0
  4937  0F96  00B7               	movwf	strcpy@from
  4938  0F97  0021               	movlb	1	; select bank1
  4939  0F98  0828               	movf	parse_setup_cmd@cmd_descr^(0+128),w
  4940  0F99  3189  21CE  318F   	fcall	_strcpy
  4941                           
  4942                           ;Main.c: 151: } else {
  4943  0F9C  2FA2               	goto	l4086
  4944  0F9D                     l4084:	
  4945                           
  4946                           ;Main.c: 152: cmd_descr->arg1[0] = 0;
  4947  0F9D  0021               	movlb	1	; select bank1
  4948  0F9E  0828               	movf	parse_setup_cmd@cmd_descr^(0+128),w
  4949  0F9F  0086               	movwf	6
  4950  0FA0  0187               	clrf	7
  4951  0FA1  0181               	clrf	1
  4952  0FA2                     l4086:	
  4953                           
  4954                           ;Main.c: 153: }
  4955                           ;Main.c: 156: num_cmds = sizeof(commands) / sizeof(CMD_LIST_ITEM);
  4956  0FA2  3008               	movlw	8
  4957  0FA3  0021               	movlb	1	; select bank1
  4958  0FA4  00BA               	movwf	parse_setup_cmd@num_cmds^(0+128)
  4959  0FA5  3000               	movlw	0
  4960  0FA6  00BB               	movwf	(parse_setup_cmd@num_cmds^(0+128)+1)
  4961                           
  4962                           ;Main.c: 157: for (i = 0; i < num_cmds; ++i) {
  4963  0FA7  01BD               	clrf	parse_setup_cmd@i^(0+128)
  4964  0FA8  01BE               	clrf	(parse_setup_cmd@i+1)^(0+128)
  4965  0FA9                     l272:	
  4966  0FA9  083E               	movf	(parse_setup_cmd@i+1)^(0+128),w
  4967  0FAA  3A80               	xorlw	128
  4968  0FAB  00AA               	movwf	??_parse_setup_cmd^(0+128)
  4969  0FAC  083B               	movf	(parse_setup_cmd@num_cmds+1)^(0+128),w
  4970  0FAD  3A80               	xorlw	128
  4971  0FAE  022A               	subwf	??_parse_setup_cmd^(0+128),w
  4972  0FAF  1D03               	skipz
  4973  0FB0  2FB3               	goto	u6245
  4974  0FB1  083A               	movf	parse_setup_cmd@num_cmds^(0+128),w
  4975  0FB2  023D               	subwf	parse_setup_cmd@i^(0+128),w
  4976  0FB3                     u6245:	
  4977  0FB3  1803               	btfsc	3,0
  4978  0FB4  2FFA               	goto	l4100
  4979                           
  4980                           ;Main.c: 158: if (strcmp(cbuf, commands[i].cmdname) == 0) {
  4981  0FB5  0021               	movlb	1	; select bank1
  4982  0FB6  083E               	movf	(parse_setup_cmd@i+1)^(0+128),w
  4983  0FB7  0085               	movwf	5
  4984  0FB8  083D               	movf	parse_setup_cmd@i^(0+128),w
  4985  0FB9  0084               	movwf	4
  4986  0FBA  3584               	lslf	4,f
  4987  0FBB  0D85               	rlf	5,f
  4988  0FBC  3584               	lslf	4,f
  4989  0FBD  0D85               	rlf	5,f
  4990  0FBE  3020               	movlw	low (_commands| (0+32768))
  4991  0FBF  0784               	addwf	4,f
  4992  0FC0  3083               	movlw	high (_commands| (0+32768))
  4993  0FC1  3D85               	addwfc	5,f
  4994  0FC2  3F00               	moviw [0]fsr0
  4995  0FC3  0020               	movlb	0	; select bank0
  4996  0FC4  00B7               	movwf	strcmp@s2
  4997  0FC5  3F01               	moviw [1]fsr0
  4998  0FC6  00B8               	movwf	strcmp@s2+1
  4999  0FC7  30B0               	movlw	parse_setup_cmd@cbuf& (0+255)
  5000  0FC8  318A  2243  318F   	fcall	_strcmp
  5001  0FCB  0020               	movlb	0	; select bank0
  5002  0FCC  0838               	movf	?_strcmp+1,w
  5003  0FCD  0437               	iorwf	?_strcmp,w
  5004  0FCE  1D03               	skipz
  5005  0FCF  2FF4               	goto	l4098
  5006                           
  5007                           ;Main.c: 159: cmd_descr->cmdptr = commands[i].cmdptr;
  5008  0FD0  0021               	movlb	1	; select bank1
  5009  0FD1  083E               	movf	(parse_setup_cmd@i+1)^(0+128),w
  5010  0FD2  00AB               	movwf	(??_parse_setup_cmd^(0+128)+1)
  5011  0FD3  083D               	movf	parse_setup_cmd@i^(0+128),w
  5012  0FD4  00AA               	movwf	??_parse_setup_cmd^(0+128)
  5013  0FD5  35AA               	lslf	??_parse_setup_cmd^(0+128),f
  5014  0FD6  0DAB               	rlf	(??_parse_setup_cmd^(0+128)+1),f
  5015  0FD7  35AA               	lslf	??_parse_setup_cmd^(0+128),f
  5016  0FD8  0DAB               	rlf	(??_parse_setup_cmd^(0+128)+1),f
  5017  0FD9  082A               	movf	??_parse_setup_cmd^(0+128),w
  5018  0FDA  3E02               	addlw	2
  5019  0FDB  00AC               	movwf	(??_parse_setup_cmd+2)^(0+128)
  5020  0FDC  3000               	movlw	0
  5021  0FDD  3D2B               	addwfc	(??_parse_setup_cmd+1)^(0+128),w
  5022  0FDE  00AD               	movwf	(??_parse_setup_cmd+3)^(0+128)
  5023  0FDF  3020               	movlw	low (_commands| (0+32768))
  5024  0FE0  00AE               	movwf	(??_parse_setup_cmd+4)^(0+128)
  5025  0FE1  3083               	movlw	high (_commands| (0+32768))
  5026  0FE2  00AF               	movwf	((??_parse_setup_cmd+4)^(0+128)+1)
  5027  0FE3  082C               	movf	(??_parse_setup_cmd+2)^(0+128),w
  5028  0FE4  072E               	addwf	(??_parse_setup_cmd+4)^(0+128),w
  5029  0FE5  0086               	movwf	6
  5030  0FE6  082D               	movf	(??_parse_setup_cmd+3)^(0+128),w
  5031  0FE7  3D2F               	addwfc	(??_parse_setup_cmd+5)^(0+128),w
  5032  0FE8  0087               	movwf	7
  5033  0FE9  0828               	movf	parse_setup_cmd@cmd_descr^(0+128),w
  5034  0FEA  3E0A               	addlw	10
  5035  0FEB  0084               	movwf	4
  5036  0FEC  0185               	clrf	5
  5037  0FED  3F40               	moviw [0]fsr1
  5038  0FEE  3F80               	movwi [0]fsr0
  5039  0FEF  3F41               	moviw [1]fsr1
  5040  0FF0  3F81               	movwi [1]fsr0
  5041                           
  5042                           ;Main.c: 160: return 0;
  5043  0FF1  01A8               	clrf	?_parse_setup_cmd^(0+128)
  5044  0FF2  01A9               	clrf	(?_parse_setup_cmd+1)^(0+128)
  5045  0FF3  0008               	return
  5046  0FF4                     l4098:	
  5047  0FF4  3001               	movlw	1
  5048  0FF5  0021               	movlb	1	; select bank1
  5049  0FF6  07BD               	addwf	parse_setup_cmd@i^(0+128),f
  5050  0FF7  3000               	movlw	0
  5051  0FF8  3DBE               	addwfc	(parse_setup_cmd@i+1)^(0+128),f
  5052  0FF9  2FA9               	goto	l272
  5053  0FFA                     l4100:	
  5054                           
  5055                           ;Main.c: 161: }
  5056                           ;Main.c: 162: }
  5057                           ;Main.c: 164: return -2;
  5058  0FFA  30FE               	movlw	254
  5059  0FFB  0021               	movlb	1	; select bank1
  5060  0FFC  00A8               	movwf	?_parse_setup_cmd^(0+128)
  5061  0FFD  30FF               	movlw	255
  5062  0FFE  00A9               	movwf	(?_parse_setup_cmd^(0+128)+1)
  5063  0FFF  0008               	return
  5064  1000                     __end_of_parse_setup_cmd:	
  5065                           
  5066                           	psect	text20
  5067  0D6E                     __ptext20:	
  5068 ;; *************** function _strtok *****************
  5069 ;; Defined at:
  5070 ;;		line 8 in file "/Applications/microchip/xc8/v1.32/sources/common/strtok.c"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;  s1              1    wreg     PTR unsigned char 
  5073 ;;		 -> NULL(0), main@cmdbuf(10), 
  5074 ;;  s2              2    3[BANK1 ] PTR const unsigned char 
  5075 ;;		 -> STR_23(2), STR_22(2), 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  s1              1   33[BANK0 ] PTR unsigned char 
  5078 ;;		 -> NULL(0), main@cmdbuf(10), 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      PTR unsigned char 
  5081 ;; Registers used:
  5082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5088 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5089 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5090 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5091 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5092 ;;Total ram usage:        6 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    4
  5095 ;; This function calls:
  5096 ;;		_strcspn
  5097 ;;		_strspn
  5098 ;; This function is called by:
  5099 ;;		_parse_setup_cmd
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           
  5104                           ;psect for function _strtok
  5105  0D6E                     _strtok:	
  5106                           
  5107                           ;incstack = 0
  5108                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5109                           ;strtok@s1 stored from wreg
  5110  0D6E  0020               	movlb	0	; select bank0
  5111  0D6F  00C1               	movwf	strtok@s1
  5112  0D70  08C1               	movf	strtok@s1,f
  5113  0D71  1D03               	skipz
  5114  0D72  2D79               	goto	l3932
  5115  0D73  0856               	movf	strtok@sp,w
  5116  0D74  0021               	movlb	1	; select bank1
  5117  0D75  00A5               	movwf	??_strtok^(0+128)
  5118  0D76  0825               	movf	??_strtok^(0+128),w
  5119  0D77  0020               	movlb	0	; select bank0
  5120  0D78  00C1               	movwf	strtok@s1
  5121  0D79                     l3932:	
  5122  0D79  08C1               	movf	strtok@s1,f
  5123  0D7A  1D03               	skipz
  5124  0D7B  2D7E               	goto	l3938
  5125  0D7C  3000               	movlw	0
  5126  0D7D  0008               	return
  5127  0D7E                     l3938:	
  5128  0D7E  0021               	movlb	1	; select bank1
  5129  0D7F  0824               	movf	(strtok@s2+1)^(0+128),w
  5130  0D80  0020               	movlb	0	; select bank0
  5131  0D81  01BE               	clrf	strspn@s2+1
  5132  0D82  07BE               	addwf	strspn@s2+1,f
  5133  0D83  0021               	movlb	1	; select bank1
  5134  0D84  0823               	movf	strtok@s2^(0+128),w
  5135  0D85  0020               	movlb	0	; select bank0
  5136  0D86  01BD               	clrf	strspn@s2
  5137  0D87  07BD               	addwf	strspn@s2,f
  5138  0D88  0841               	movf	strtok@s1,w
  5139  0D89  318B  23AD  318D   	fcall	_strspn
  5140  0D8C  0020               	movlb	0	; select bank0
  5141  0D8D  083D               	movf	?_strspn,w
  5142  0D8E  0021               	movlb	1	; select bank1
  5143  0D8F  00A5               	movwf	??_strtok^(0+128)
  5144  0D90  0825               	movf	??_strtok^(0+128),w
  5145  0D91  0020               	movlb	0	; select bank0
  5146  0D92  07C1               	addwf	strtok@s1,f
  5147  0D93  0841               	movf	strtok@s1,w
  5148  0D94  0086               	movwf	6
  5149  0D95  0187               	clrf	7
  5150  0D96  0881               	movf	1,f
  5151  0D97  1D03               	skipz
  5152  0D98  2D9C               	goto	l3946
  5153  0D99  3000               	movlw	0
  5154  0D9A  00D6               	movwf	strtok@sp
  5155  0D9B  0008               	return
  5156  0D9C                     l3946:	
  5157  0D9C  0021               	movlb	1	; select bank1
  5158  0D9D  0824               	movf	(strtok@s2+1)^(0+128),w
  5159  0D9E  0020               	movlb	0	; select bank0
  5160  0D9F  01BE               	clrf	strcspn@s2+1
  5161  0DA0  07BE               	addwf	strcspn@s2+1,f
  5162  0DA1  0021               	movlb	1	; select bank1
  5163  0DA2  0823               	movf	strtok@s2^(0+128),w
  5164  0DA3  0020               	movlb	0	; select bank0
  5165  0DA4  01BD               	clrf	strcspn@s2
  5166  0DA5  07BD               	addwf	strcspn@s2,f
  5167  0DA6  0841               	movf	strtok@s1,w
  5168  0DA7  318B  2371  318D   	fcall	_strcspn
  5169  0DAA  0020               	movlb	0	; select bank0
  5170  0DAB  083D               	movf	?_strcspn,w
  5171  0DAC  0021               	movlb	1	; select bank1
  5172  0DAD  00A5               	movwf	??_strtok^(0+128)
  5173  0DAE  0020               	movlb	0	; select bank0
  5174  0DAF  083E               	movf	?_strcspn+1,w
  5175  0DB0  0021               	movlb	1	; select bank1
  5176  0DB1  00A6               	movwf	(??_strtok^(0+128)+1)
  5177  0DB2  0020               	movlb	0	; select bank0
  5178  0DB3  0841               	movf	strtok@s1,w
  5179  0DB4  0021               	movlb	1	; select bank1
  5180  0DB5  0725               	addwf	??_strtok^(0+128),w
  5181  0DB6  00A7               	movwf	(??_strtok+2)^(0+128)
  5182  0DB7  0827               	movf	(??_strtok+2)^(0+128),w
  5183  0DB8  0020               	movlb	0	; select bank0
  5184  0DB9  00D6               	movwf	strtok@sp
  5185  0DBA  0856               	movf	strtok@sp,w
  5186  0DBB  0086               	movwf	6
  5187  0DBC  0187               	clrf	7
  5188  0DBD  0801               	movf	1,w
  5189  0DBE  3A00               	xorlw	0
  5190  0DBF  1903               	skipnz
  5191  0DC0  2DCC               	goto	l3954
  5192  0DC1  0856               	movf	strtok@sp,w
  5193  0DC2  0086               	movwf	6
  5194  0DC3  0187               	clrf	7
  5195  0DC4  0181               	clrf	1
  5196  0DC5  3001               	movlw	1
  5197  0DC6  0021               	movlb	1	; select bank1
  5198  0DC7  00A5               	movwf	??_strtok^(0+128)
  5199  0DC8  0825               	movf	??_strtok^(0+128),w
  5200  0DC9  0020               	movlb	0	; select bank0
  5201  0DCA  07D6               	addwf	strtok@sp,f
  5202  0DCB  2DCD               	goto	l3956
  5203  0DCC                     l3954:	
  5204  0DCC  01D6               	clrf	strtok@sp
  5205  0DCD                     l3956:	
  5206  0DCD  0841               	movf	strtok@s1,w
  5207  0DCE  0008               	return
  5208  0DCF                     __end_of_strtok:	
  5209                           
  5210                           	psect	text21
  5211  0BAD                     __ptext21:	
  5212 ;; *************** function _strspn *****************
  5213 ;; Defined at:
  5214 ;;		line 4 in file "/Applications/microchip/xc8/v1.32/sources/common/strspn.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  s1              1    wreg     PTR const unsigned char 
  5217 ;;		 -> NULL(0), main@cmdbuf(10), 
  5218 ;;  s2              2   29[BANK0 ] PTR const unsigned char 
  5219 ;;		 -> STR_23(2), STR_22(2), 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;  s1              1    2[BANK1 ] PTR const unsigned char 
  5222 ;;		 -> NULL(0), main@cmdbuf(10), 
  5223 ;;  i               2    0[BANK1 ] unsigned int 
  5224 ;; Return value:  Size  Location     Type
  5225 ;;                  2   29[BANK0 ] unsigned int 
  5226 ;; Registers used:
  5227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5228 ;; Tracked objects:
  5229 ;;		On entry : 0/0
  5230 ;;		On exit  : 0/0
  5231 ;;		Unchanged: 0/0
  5232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5233 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5234 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5235 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5236 ;;      Totals:         0       4       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5237 ;;Total ram usage:        7 bytes
  5238 ;; Hardware stack levels used:    1
  5239 ;; Hardware stack levels required when called:    3
  5240 ;; This function calls:
  5241 ;;		_strchr
  5242 ;; This function is called by:
  5243 ;;		_strtok
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           
  5248                           ;psect for function _strspn
  5249  0BAD                     _strspn:	
  5250                           
  5251                           ;incstack = 0
  5252                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5253                           ;strspn@s1 stored from wreg
  5254  0BAD  0021               	movlb	1	; select bank1
  5255  0BAE  00A2               	movwf	strspn@s1^(0+128)
  5256  0BAF  01A0               	clrf	strspn@i^(0+128)
  5257  0BB0  01A1               	clrf	(strspn@i+1)^(0+128)
  5258  0BB1  2BBC               	goto	l3898
  5259  0BB2                     l3896:	
  5260  0BB2  3001               	movlw	1
  5261  0BB3  0020               	movlb	0	; select bank0
  5262  0BB4  00BF               	movwf	??_strspn
  5263  0BB5  083F               	movf	??_strspn,w
  5264  0BB6  0021               	movlb	1	; select bank1
  5265  0BB7  07A2               	addwf	strspn@s1^(0+128),f
  5266  0BB8  3001               	movlw	1
  5267  0BB9  07A0               	addwf	strspn@i^(0+128),f
  5268  0BBA  3000               	movlw	0
  5269  0BBB  3DA1               	addwfc	(strspn@i+1)^(0+128),f
  5270  0BBC                     l3898:	
  5271  0BBC  0822               	movf	strspn@s1^(0+128),w
  5272  0BBD  0086               	movwf	6
  5273  0BBE  0187               	clrf	7
  5274  0BBF  0801               	movf	1,w
  5275  0BC0  3A00               	xorlw	0
  5276  0BC1  1903               	skipnz
  5277  0BC2  2BDE               	goto	l3902
  5278  0BC3  0020               	movlb	0	; select bank0
  5279  0BC4  083E               	movf	strspn@s2+1,w
  5280  0BC5  01B8               	clrf	strchr@ptr+1
  5281  0BC6  07B8               	addwf	strchr@ptr+1,f
  5282  0BC7  083D               	movf	strspn@s2,w
  5283  0BC8  01B7               	clrf	strchr@ptr
  5284  0BC9  07B7               	addwf	strchr@ptr,f
  5285  0BCA  0021               	movlb	1	; select bank1
  5286  0BCB  0822               	movf	strspn@s1^(0+128),w
  5287  0BCC  0086               	movwf	6
  5288  0BCD  0187               	clrf	7
  5289  0BCE  0801               	movf	1,w
  5290  0BCF  0020               	movlb	0	; select bank0
  5291  0BD0  00BF               	movwf	??_strspn
  5292  0BD1  01C0               	clrf	??_strspn+1
  5293  0BD2  083F               	movf	??_strspn,w
  5294  0BD3  00B9               	movwf	strchr@chr
  5295  0BD4  0840               	movf	??_strspn+1,w
  5296  0BD5  00BA               	movwf	strchr@chr+1
  5297  0BD6  3189  21E8  318B   	fcall	_strchr
  5298  0BD9  0020               	movlb	0	; select bank0
  5299  0BDA  0838               	movf	?_strchr+1,w
  5300  0BDB  0437               	iorwf	?_strchr,w
  5301  0BDC  1D03               	skipz
  5302  0BDD  2BB2               	goto	l3896
  5303  0BDE                     l3902:	
  5304  0BDE  0021               	movlb	1	; select bank1
  5305  0BDF  0821               	movf	(strspn@i+1)^(0+128),w
  5306  0BE0  0020               	movlb	0	; select bank0
  5307  0BE1  01BE               	clrf	?_strspn+1
  5308  0BE2  07BE               	addwf	?_strspn+1,f
  5309  0BE3  0021               	movlb	1	; select bank1
  5310  0BE4  0820               	movf	strspn@i^(0+128),w
  5311  0BE5  0020               	movlb	0	; select bank0
  5312  0BE6  01BD               	clrf	?_strspn
  5313  0BE7  07BD               	addwf	?_strspn,f
  5314  0BE8  0008               	return
  5315  0BE9                     __end_of_strspn:	
  5316                           
  5317                           	psect	text22
  5318  0B71                     __ptext22:	
  5319 ;; *************** function _strcspn *****************
  5320 ;; Defined at:
  5321 ;;		line 4 in file "/Applications/microchip/xc8/v1.32/sources/common/strcspn.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;  s1              1    wreg     PTR const unsigned char 
  5324 ;;		 -> NULL(0), main@cmdbuf(10), 
  5325 ;;  s2              2   29[BANK0 ] PTR const unsigned char 
  5326 ;;		 -> STR_23(2), STR_22(2), 
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;  s1              1    2[BANK1 ] PTR const unsigned char 
  5329 ;;		 -> NULL(0), main@cmdbuf(10), 
  5330 ;;  i               2    0[BANK1 ] unsigned int 
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  2   29[BANK0 ] unsigned int 
  5333 ;; Registers used:
  5334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5340 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5341 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5342 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5343 ;;      Totals:         0       4       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5344 ;;Total ram usage:        7 bytes
  5345 ;; Hardware stack levels used:    1
  5346 ;; Hardware stack levels required when called:    3
  5347 ;; This function calls:
  5348 ;;		_strchr
  5349 ;; This function is called by:
  5350 ;;		_strtok
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           
  5355                           ;psect for function _strcspn
  5356  0B71                     _strcspn:	
  5357                           
  5358                           ;incstack = 0
  5359                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5360                           ;strcspn@s1 stored from wreg
  5361  0B71  0021               	movlb	1	; select bank1
  5362  0B72  00A2               	movwf	strcspn@s1^(0+128)
  5363  0B73  01A0               	clrf	strcspn@i^(0+128)
  5364  0B74  01A1               	clrf	(strcspn@i+1)^(0+128)
  5365  0B75  2B80               	goto	l3910
  5366  0B76                     l3908:	
  5367  0B76  3001               	movlw	1
  5368  0B77  0020               	movlb	0	; select bank0
  5369  0B78  00BF               	movwf	??_strcspn
  5370  0B79  083F               	movf	??_strcspn,w
  5371  0B7A  0021               	movlb	1	; select bank1
  5372  0B7B  07A2               	addwf	strcspn@s1^(0+128),f
  5373  0B7C  3001               	movlw	1
  5374  0B7D  07A0               	addwf	strcspn@i^(0+128),f
  5375  0B7E  3000               	movlw	0
  5376  0B7F  3DA1               	addwfc	(strcspn@i+1)^(0+128),f
  5377  0B80                     l3910:	
  5378  0B80  0822               	movf	strcspn@s1^(0+128),w
  5379  0B81  0086               	movwf	6
  5380  0B82  0187               	clrf	7
  5381  0B83  0801               	movf	1,w
  5382  0B84  3A00               	xorlw	0
  5383  0B85  1903               	skipnz
  5384  0B86  2BA2               	goto	l3914
  5385  0B87  0020               	movlb	0	; select bank0
  5386  0B88  083E               	movf	strcspn@s2+1,w
  5387  0B89  01B8               	clrf	strchr@ptr+1
  5388  0B8A  07B8               	addwf	strchr@ptr+1,f
  5389  0B8B  083D               	movf	strcspn@s2,w
  5390  0B8C  01B7               	clrf	strchr@ptr
  5391  0B8D  07B7               	addwf	strchr@ptr,f
  5392  0B8E  0021               	movlb	1	; select bank1
  5393  0B8F  0822               	movf	strcspn@s1^(0+128),w
  5394  0B90  0086               	movwf	6
  5395  0B91  0187               	clrf	7
  5396  0B92  0801               	movf	1,w
  5397  0B93  0020               	movlb	0	; select bank0
  5398  0B94  00BF               	movwf	??_strcspn
  5399  0B95  01C0               	clrf	??_strcspn+1
  5400  0B96  083F               	movf	??_strcspn,w
  5401  0B97  00B9               	movwf	strchr@chr
  5402  0B98  0840               	movf	??_strcspn+1,w
  5403  0B99  00BA               	movwf	strchr@chr+1
  5404  0B9A  3189  21E8  318B   	fcall	_strchr
  5405  0B9D  0020               	movlb	0	; select bank0
  5406  0B9E  0838               	movf	?_strchr+1,w
  5407  0B9F  0437               	iorwf	?_strchr,w
  5408  0BA0  1903               	skipnz
  5409  0BA1  2B76               	goto	l3908
  5410  0BA2                     l3914:	
  5411  0BA2  0021               	movlb	1	; select bank1
  5412  0BA3  0821               	movf	(strcspn@i+1)^(0+128),w
  5413  0BA4  0020               	movlb	0	; select bank0
  5414  0BA5  01BE               	clrf	?_strcspn+1
  5415  0BA6  07BE               	addwf	?_strcspn+1,f
  5416  0BA7  0021               	movlb	1	; select bank1
  5417  0BA8  0820               	movf	strcspn@i^(0+128),w
  5418  0BA9  0020               	movlb	0	; select bank0
  5419  0BAA  01BD               	clrf	?_strcspn
  5420  0BAB  07BD               	addwf	?_strcspn,f
  5421  0BAC  0008               	return
  5422  0BAD                     __end_of_strcspn:	
  5423                           
  5424                           	psect	text23
  5425  09E8                     __ptext23:	
  5426 ;; *************** function _strchr *****************
  5427 ;; Defined at:
  5428 ;;		line 4 in file "/Applications/microchip/xc8/v1.32/sources/common/strchr.c"
  5429 ;; Parameters:    Size  Location     Type
  5430 ;;  ptr             2   23[BANK0 ] PTR const unsigned char 
  5431 ;;		 -> STR_23(2), STR_22(2), 
  5432 ;;  chr             2   25[BANK0 ] int 
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;		None
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  2   23[BANK0 ] PTR unsigned char 
  5437 ;; Registers used:
  5438 ;;		wreg, fsr0l, fsr0h, status,2, pclath
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5444 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5446 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5447 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5448 ;;Total ram usage:        6 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    2
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_strcspn
  5455 ;;		_strspn
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           
  5460                           ;psect for function _strchr
  5461  09E8                     _strchr:	
  5462  09E8                     l1009:	
  5463                           ;incstack = 0
  5464                           ; Regs used in _strchr: [wreg-fsr0h+status,2+pclath]
  5465                           
  5466  09E8  0020               	movlb	0	; select bank0
  5467  09E9  0837               	movf	strchr@ptr,w
  5468  09EA  0084               	movwf	4
  5469  09EB  0838               	movf	strchr@ptr+1,w
  5470  09EC  0085               	movwf	5
  5471  09ED  0800               	movf	0,w	;code access
  5472  09EE  0639               	xorwf	strchr@chr,w
  5473  09EF  1903               	btfsc	3,2
  5474  09F0  0008               	return
  5475  09F1  0838               	movf	strchr@ptr+1,w
  5476  09F2  00BC               	movwf	??_strchr+1
  5477  09F3  0837               	movf	strchr@ptr,w
  5478  09F4  00BB               	movwf	??_strchr
  5479  09F5  0AB7               	incf	strchr@ptr,f
  5480  09F6  1903               	skipnz
  5481  09F7  0AB8               	incf	strchr@ptr+1,f
  5482  09F8  083B               	movf	??_strchr,w
  5483  09F9  0084               	movwf	4
  5484  09FA  083C               	movf	??_strchr+1,w
  5485  09FB  0085               	movwf	5
  5486  09FC  0800               	movf	0,w	;code access
  5487  09FD  3800               	iorlw	0
  5488  09FE  1D03               	skipz
  5489  09FF  29E8               	goto	l1009
  5490  0A00  01B7               	clrf	?_strchr
  5491  0A01  01B8               	clrf	?_strchr+1
  5492  0A02  0008               	return
  5493  0A03                     __end_of_strchr:	
  5494                           
  5495                           	psect	text24
  5496  09CE                     __ptext24:	
  5497 ;; *************** function _strcpy *****************
  5498 ;; Defined at:
  5499 ;;		line 8 in file "/Applications/microchip/xc8/v1.32/sources/common/strcpy.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;  to              1    wreg     PTR unsigned char 
  5502 ;;		 -> parse_setup_cmd@cbuf(10), main@cmd_descr(12), 
  5503 ;;  from            1   23[BANK0 ] PTR const unsigned char 
  5504 ;;		 -> NULL(0), main@cmdbuf(10), 
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;  to              1   26[BANK0 ] PTR unsigned char 
  5507 ;;		 -> parse_setup_cmd@cbuf(10), main@cmd_descr(12), 
  5508 ;;  cp              1   25[BANK0 ] PTR unsigned char 
  5509 ;;		 -> parse_setup_cmd@cbuf(10), main@cmd_descr(12), 
  5510 ;; Return value:  Size  Location     Type
  5511 ;;                  1    wreg      PTR unsigned char 
  5512 ;; Registers used:
  5513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5519 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5520 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5521 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5522 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5523 ;;Total ram usage:        4 bytes
  5524 ;; Hardware stack levels used:    1
  5525 ;; Hardware stack levels required when called:    2
  5526 ;; This function calls:
  5527 ;;		Nothing
  5528 ;; This function is called by:
  5529 ;;		_parse_setup_cmd
  5530 ;; This function uses a non-reentrant model
  5531 ;;
  5532                           
  5533                           
  5534                           ;psect for function _strcpy
  5535  09CE                     _strcpy:	
  5536                           
  5537                           ;incstack = 0
  5538                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
  5539                           ;strcpy@to stored from wreg
  5540  09CE  0020               	movlb	0	; select bank0
  5541  09CF  00BA               	movwf	strcpy@to
  5542  09D0  083A               	movf	strcpy@to,w
  5543  09D1  00B8               	movwf	??_strcpy
  5544  09D2  0838               	movf	??_strcpy,w
  5545  09D3  00B9               	movwf	strcpy@cp
  5546  09D4                     l2194:	
  5547  09D4  0839               	movf	strcpy@cp,w
  5548  09D5  0086               	movwf	6
  5549  09D6  0187               	clrf	7
  5550  09D7  0837               	movf	strcpy@from,w
  5551  09D8  0084               	movwf	4
  5552  09D9  0185               	clrf	5
  5553  09DA  0800               	movf	0,w
  5554  09DB  3FC0               	movwi [0]fsr1
  5555  09DC  0889               	movf	9,f
  5556  09DD  1903               	btfsc	3,2
  5557  09DE  0008               	return
  5558  09DF  3001               	movlw	1
  5559  09E0  00B8               	movwf	??_strcpy
  5560  09E1  0838               	movf	??_strcpy,w
  5561  09E2  07B9               	addwf	strcpy@cp,f
  5562  09E3  3001               	movlw	1
  5563  09E4  00B8               	movwf	??_strcpy
  5564  09E5  0838               	movf	??_strcpy,w
  5565  09E6  07B7               	addwf	strcpy@from,f
  5566  09E7  29D4               	goto	l2194
  5567  09E8                     __end_of_strcpy:	
  5568                           ;	Return value of _strcpy is never used
  5569                           
  5570                           
  5571                           	psect	text25
  5572  0A43                     __ptext25:	
  5573 ;; *************** function _strcmp *****************
  5574 ;; Defined at:
  5575 ;;		line 33 in file "/Applications/microchip/xc8/v1.32/sources/common/strcmp.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;  s1              1    wreg     PTR const unsigned char 
  5578 ;;		 -> parse_setup_cmd@cbuf(10), 
  5579 ;;  s2              2   23[BANK0 ] PTR const unsigned char 
  5580 ;;		 -> STR_21(7), STR_20(7), STR_19(4), STR_18(6), 
  5581 ;;		 -> STR_17(6), STR_16(6), STR_15(4), STR_14(5), 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;  s1              1   27[BANK0 ] PTR const unsigned char 
  5584 ;;		 -> parse_setup_cmd@cbuf(10), 
  5585 ;;  r               1   26[BANK0 ] char 
  5586 ;; Return value:  Size  Location     Type
  5587 ;;                  2   23[BANK0 ] int 
  5588 ;; Registers used:
  5589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5595 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5597 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5598 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5599 ;;Total ram usage:        5 bytes
  5600 ;; Hardware stack levels used:    1
  5601 ;; Hardware stack levels required when called:    2
  5602 ;; This function calls:
  5603 ;;		Nothing
  5604 ;; This function is called by:
  5605 ;;		_parse_setup_cmd
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           
  5610                           ;psect for function _strcmp
  5611  0A43                     _strcmp:	
  5612                           
  5613                           ;incstack = 0
  5614                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  5615                           ;strcmp@s1 stored from wreg
  5616  0A43  0020               	movlb	0	; select bank0
  5617  0A44  00BB               	movwf	strcmp@s1
  5618  0A45  2A4E               	goto	l2200
  5619  0A46                     l2198:	
  5620  0A46  3001               	movlw	1
  5621  0A47  00B9               	movwf	??_strcmp
  5622  0A48  0839               	movf	??_strcmp,w
  5623  0A49  07BB               	addwf	strcmp@s1,f
  5624  0A4A  3001               	movlw	1
  5625  0A4B  07B7               	addwf	strcmp@s2,f
  5626  0A4C  3000               	movlw	0
  5627  0A4D  3DB8               	addwfc	strcmp@s2+1,f
  5628  0A4E                     l2200:	
  5629  0A4E  083B               	movf	strcmp@s1,w
  5630  0A4F  0086               	movwf	6
  5631  0A50  0187               	clrf	7
  5632  0A51  0837               	movf	strcmp@s2,w
  5633  0A52  0084               	movwf	4
  5634  0A53  0838               	movf	strcmp@s2+1,w
  5635  0A54  0085               	movwf	5
  5636  0A55  0800               	movf	0,w	;code access
  5637  0A56  3AFF               	xorlw	255
  5638  0A57  3E01               	addlw	1
  5639  0A58  0701               	addwf	1,w
  5640  0A59  00B9               	movwf	??_strcmp
  5641  0A5A  0839               	movf	??_strcmp,w
  5642  0A5B  00BA               	movwf	strcmp@r
  5643  0A5C  08BA               	movf	strcmp@r,f
  5644  0A5D  1D03               	skipz
  5645  0A5E  2A65               	goto	l2204
  5646  0A5F  083B               	movf	strcmp@s1,w
  5647  0A60  0086               	movwf	6
  5648  0A61  0187               	clrf	7
  5649  0A62  0881               	movf	1,f
  5650  0A63  1D03               	skipz
  5651  0A64  2A46               	goto	l2198
  5652  0A65                     l2204:	
  5653  0A65  083A               	movf	strcmp@r,w
  5654  0A66  00B7               	movwf	?_strcmp
  5655  0A67  01B8               	clrf	?_strcmp+1
  5656  0A68  1BB7               	btfsc	?_strcmp,7
  5657  0A69  03B8               	decf	?_strcmp+1,f
  5658  0A6A  0008               	return
  5659  0A6B                     __end_of_strcmp:	
  5660                           
  5661                           	psect	text26
  5662  0A21                     __ptext26:	
  5663 ;; *************** function _strlen *****************
  5664 ;; Defined at:
  5665 ;;		line 4 in file "/Applications/microchip/xc8/v1.32/sources/common/strlen.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;  s               2   23[BANK0 ] PTR const unsigned char 
  5668 ;;		 -> STR_37(3), STR_36(4), STR_35(2), STR_34(2), 
  5669 ;;		 -> status_command@buf(10), STR_24(4), STR_13(2), STR_12(4), 
  5670 ;;		 -> STR_11(27), STR_10(6), STR_9(25), STR_8(6), 
  5671 ;;		 -> STR_7(24), STR_6(6), main@cmd_descr(12), STR_5(2), 
  5672 ;;		 -> STR_4(4), STR_3(36), STR_2(6), main@cmdbuf(10), 
  5673 ;;		 -> STR_1(33), 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  cp              2   27[BANK0 ] PTR const unsigned char 
  5676 ;;		 -> STR_37(3), STR_36(4), STR_35(2), STR_34(2), 
  5677 ;;		 -> status_command@buf(10), STR_24(4), STR_13(2), STR_12(4), 
  5678 ;;		 -> STR_11(27), STR_10(6), STR_9(25), STR_8(6), 
  5679 ;;		 -> STR_7(24), STR_6(6), main@cmd_descr(12), STR_5(2), 
  5680 ;;		 -> STR_4(4), STR_3(36), STR_2(6), main@cmdbuf(10), 
  5681 ;;		 -> STR_1(33), 
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  2   23[BANK0 ] unsigned int 
  5684 ;; Registers used:
  5685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5691 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5692 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5693 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5694 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5695 ;;Total ram usage:        6 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:    2
  5698 ;; This function calls:
  5699 ;;		Nothing
  5700 ;; This function is called by:
  5701 ;;		_main
  5702 ;;		_echo_command
  5703 ;;		_remote_command
  5704 ;;		_enable1_command
  5705 ;;		_enable2_command
  5706 ;;		_pulse_command
  5707 ;;		_power_command
  5708 ;;		_ttlout_command
  5709 ;;		_serputstr
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713                           
  5714                           ;psect for function _strlen
  5715  0A21                     _strlen:	
  5716                           
  5717                           ;incstack = 0
  5718                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  5719  0A21  0020               	movlb	0	; select bank0
  5720  0A22  0838               	movf	strlen@s+1,w
  5721  0A23  01BC               	clrf	strlen@cp+1
  5722  0A24  07BC               	addwf	strlen@cp+1,f
  5723  0A25  0837               	movf	strlen@s,w
  5724  0A26  01BB               	clrf	strlen@cp
  5725  0A27  07BB               	addwf	strlen@cp,f
  5726  0A28                     l3862:	
  5727  0A28  083B               	movf	strlen@cp,w
  5728  0A29  0084               	movwf	4
  5729  0A2A  083C               	movf	strlen@cp+1,w
  5730  0A2B  0085               	movwf	5
  5731  0A2C  0800               	movf	0,w	;code access
  5732  0A2D  3800               	iorlw	0
  5733  0A2E  1903               	btfsc	3,2
  5734  0A2F  2A35               	goto	l3864
  5735  0A30  3001               	movlw	1
  5736  0A31  07BB               	addwf	strlen@cp,f
  5737  0A32  3000               	movlw	0
  5738  0A33  3DBC               	addwfc	strlen@cp+1,f
  5739  0A34  2A28               	goto	l3862
  5740  0A35                     l3864:	
  5741  0A35  0937               	comf	strlen@s,w
  5742  0A36  00B9               	movwf	??_strlen
  5743  0A37  0938               	comf	strlen@s+1,w
  5744  0A38  00BA               	movwf	??_strlen+1
  5745  0A39  0AB9               	incf	??_strlen,f
  5746  0A3A  1903               	skipnz
  5747  0A3B  0ABA               	incf	??_strlen+1,f
  5748  0A3C  083B               	movf	strlen@cp,w
  5749  0A3D  0739               	addwf	??_strlen,w
  5750  0A3E  00B7               	movwf	?_strlen
  5751  0A3F  083C               	movf	strlen@cp+1,w
  5752  0A40  3D3A               	addwfc	??_strlen+1,w
  5753  0A41  00B8               	movwf	?_strlen+1
  5754  0A42  0008               	return
  5755  0A43                     __end_of_strlen:	
  5756                           
  5757                           	psect	text27
  5758  0E4A                     __ptext27:	
  5759 ;; *************** function _atoi *****************
  5760 ;; Defined at:
  5761 ;;		line 5 in file "/Applications/microchip/xc8/v1.32/sources/common/atoi.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  s               1    wreg     PTR const unsigned char 
  5764 ;;		 -> main@cmd_descr(12), 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  s               1    3[BANK1 ] PTR const unsigned char 
  5767 ;;		 -> main@cmd_descr(12), 
  5768 ;;  a               2    1[BANK1 ] int 
  5769 ;;  sign            1    0[BANK1 ] unsigned char 
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  2   29[BANK0 ] int 
  5772 ;; Registers used:
  5773 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5779 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5780 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5781 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5782 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5783 ;;Total ram usage:        8 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; Hardware stack levels required when called:    3
  5786 ;; This function calls:
  5787 ;;		___wmul
  5788 ;;		_isdigit
  5789 ;; This function is called by:
  5790 ;;		_echo_command
  5791 ;;		_remote_command
  5792 ;;		_enable1_command
  5793 ;;		_enable2_command
  5794 ;;		_pulse_command
  5795 ;;		_power_command
  5796 ;;		_ttlout_command
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           
  5801                           ;psect for function _atoi
  5802  0E4A                     _atoi:	
  5803                           
  5804                           ;incstack = 0
  5805                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5806                           ;atoi@s stored from wreg
  5807  0E4A  0021               	movlb	1	; select bank1
  5808  0E4B  00A3               	movwf	atoi@s^(0+128)
  5809  0E4C                     l3148:	
  5810  0E4C  0823               	movf	atoi@s^(0+128),w
  5811  0E4D  0086               	movwf	6
  5812  0E4E  0187               	clrf	7
  5813  0E4F  0801               	movf	1,w
  5814  0E50  3A20               	xorlw	32
  5815  0E51  1D03               	btfss	3,2
  5816  0E52  2E5A               	goto	l3150
  5817  0E53                     l3146:	
  5818  0E53  3001               	movlw	1
  5819  0E54  0020               	movlb	0	; select bank0
  5820  0E55  00BF               	movwf	??_atoi
  5821  0E56  083F               	movf	??_atoi,w
  5822  0E57  0021               	movlb	1	; select bank1
  5823  0E58  07A3               	addwf	atoi@s^(0+128),f
  5824  0E59  2E4C               	goto	l3148
  5825  0E5A                     l3150:	
  5826  0E5A  0823               	movf	atoi@s^(0+128),w
  5827  0E5B  0086               	movwf	6
  5828  0E5C  0187               	clrf	7
  5829  0E5D  0801               	movf	1,w
  5830  0E5E  3A09               	xorlw	9
  5831  0E5F  1903               	skipnz
  5832  0E60  2E53               	goto	l3146
  5833  0E61  01A1               	clrf	atoi@a^(0+128)
  5834  0E62  01A2               	clrf	(atoi@a+1)^(0+128)
  5835  0E63  01A0               	clrf	atoi@sign^(0+128)
  5836  0E64  0823               	movf	atoi@s^(0+128),w
  5837  0E65  0086               	movwf	6
  5838  0E66  0187               	clrf	7
  5839  0E67  0801               	movf	1,w
  5840  0E68  3A2D               	xorlw	45
  5841  0E69  1D03               	skipz
  5842  0E6A  2E72               	goto	l3158
  5843  0E6B  3001               	movlw	1
  5844  0E6C  0020               	movlb	0	; select bank0
  5845  0E6D  00BF               	movwf	??_atoi
  5846  0E6E  083F               	movf	??_atoi,w
  5847  0E6F  0021               	movlb	1	; select bank1
  5848  0E70  07A0               	addwf	atoi@sign^(0+128),f
  5849  0E71  2E79               	goto	l3164
  5850  0E72                     l3158:	
  5851  0E72  0823               	movf	atoi@s^(0+128),w
  5852  0E73  0086               	movwf	6
  5853  0E74  0187               	clrf	7
  5854  0E75  0801               	movf	1,w
  5855  0E76  3A2B               	xorlw	43
  5856  0E77  1D03               	skipz
  5857  0E78  2E7F               	goto	l3166
  5858  0E79                     l3164:	
  5859  0E79  3001               	movlw	1
  5860  0E7A  0020               	movlb	0	; select bank0
  5861  0E7B  00BF               	movwf	??_atoi
  5862  0E7C  083F               	movf	??_atoi,w
  5863  0E7D  0021               	movlb	1	; select bank1
  5864  0E7E  07A3               	addwf	atoi@s^(0+128),f
  5865  0E7F                     l3166:	
  5866  0E7F  0823               	movf	atoi@s^(0+128),w
  5867  0E80  0086               	movwf	6
  5868  0E81  0187               	clrf	7
  5869  0E82  0801               	movf	1,w
  5870  0E83  3189  21BF  318E   	fcall	_isdigit
  5871  0E86  1C03               	btfss	3,0
  5872  0E87  2EAF               	goto	l3168
  5873  0E88  0021               	movlb	1	; select bank1
  5874  0E89  0822               	movf	(atoi@a+1)^(0+128),w
  5875  0E8A  0020               	movlb	0	; select bank0
  5876  0E8B  01B8               	clrf	___wmul@multiplier+1
  5877  0E8C  07B8               	addwf	___wmul@multiplier+1,f
  5878  0E8D  0021               	movlb	1	; select bank1
  5879  0E8E  0821               	movf	atoi@a^(0+128),w
  5880  0E8F  0020               	movlb	0	; select bank0
  5881  0E90  01B7               	clrf	___wmul@multiplier
  5882  0E91  07B7               	addwf	___wmul@multiplier,f
  5883  0E92  300A               	movlw	10
  5884  0E93  00B9               	movwf	___wmul@multiplicand
  5885  0E94  3000               	movlw	0
  5886  0E95  00BA               	movwf	___wmul@multiplicand+1
  5887  0E96  318A  2203  318E   	fcall	___wmul
  5888  0E99  0021               	movlb	1	; select bank1
  5889  0E9A  0823               	movf	atoi@s^(0+128),w
  5890  0E9B  0086               	movwf	6
  5891  0E9C  0187               	clrf	7
  5892  0E9D  0801               	movf	1,w
  5893  0E9E  0020               	movlb	0	; select bank0
  5894  0E9F  0737               	addwf	?___wmul,w
  5895  0EA0  00BF               	movwf	??_atoi
  5896  0EA1  0838               	movf	?___wmul+1,w
  5897  0EA2  1803               	skipnc
  5898  0EA3  0A38               	incf	?___wmul+1,w
  5899  0EA4  00C0               	movwf	??_atoi+1
  5900  0EA5  083F               	movf	??_atoi,w
  5901  0EA6  3ED0               	addlw	208
  5902  0EA7  0021               	movlb	1	; select bank1
  5903  0EA8  00A1               	movwf	atoi@a^(0+128)
  5904  0EA9  30FF               	movlw	255
  5905  0EAA  0020               	movlb	0	; select bank0
  5906  0EAB  3D40               	addwfc	??_atoi+1,w
  5907  0EAC  0021               	movlb	1	; select bank1
  5908  0EAD  00A2               	movwf	(atoi@a+1)^(0+128)
  5909  0EAE  2E79               	goto	l3164
  5910  0EAF                     l3168:	
  5911  0EAF  0021               	movlb	1	; select bank1
  5912  0EB0  0820               	movf	atoi@sign^(0+128),w
  5913  0EB1  1903               	btfsc	3,2
  5914  0EB2  2EC2               	goto	l3174
  5915  0EB3  0921               	comf	atoi@a^(0+128),w
  5916  0EB4  0020               	movlb	0	; select bank0
  5917  0EB5  00BF               	movwf	??_atoi
  5918  0EB6  0021               	movlb	1	; select bank1
  5919  0EB7  0922               	comf	(atoi@a+1)^(0+128),w
  5920  0EB8  0020               	movlb	0	; select bank0
  5921  0EB9  00C0               	movwf	??_atoi+1
  5922  0EBA  0ABF               	incf	??_atoi,f
  5923  0EBB  1903               	skipnz
  5924  0EBC  0AC0               	incf	??_atoi+1,f
  5925  0EBD  083F               	movf	??_atoi,w
  5926  0EBE  00BD               	movwf	?_atoi
  5927  0EBF  0840               	movf	??_atoi+1,w
  5928  0EC0  00BE               	movwf	?_atoi+1
  5929  0EC1  0008               	return
  5930  0EC2                     l3174:	
  5931  0EC2  0021               	movlb	1	; select bank1
  5932  0EC3  0822               	movf	(atoi@a+1)^(0+128),w
  5933  0EC4  0020               	movlb	0	; select bank0
  5934  0EC5  01BE               	clrf	?_atoi+1
  5935  0EC6  07BE               	addwf	?_atoi+1,f
  5936  0EC7  0021               	movlb	1	; select bank1
  5937  0EC8  0821               	movf	atoi@a^(0+128),w
  5938  0EC9  0020               	movlb	0	; select bank0
  5939  0ECA  01BD               	clrf	?_atoi
  5940  0ECB  07BD               	addwf	?_atoi,f
  5941  0ECC  0008               	return
  5942  0ECD                     __end_of_atoi:	
  5943                           
  5944                           	psect	text28
  5945  09BF                     __ptext28:	
  5946 ;; *************** function _isdigit *****************
  5947 ;; Defined at:
  5948 ;;		line 8 in file "/Applications/microchip/xc8/v1.32/sources/common/isdigit.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;  c               1    wreg     unsigned char 
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;  c               1   24[BANK0 ] unsigned char 
  5953 ;; Return value:  Size  Location     Type
  5954 ;;		None               void
  5955 ;; Registers used:
  5956 ;;		wreg, status,2, status,0
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5963 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5965 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5966 ;;Total ram usage:        2 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; Hardware stack levels required when called:    2
  5969 ;; This function calls:
  5970 ;;		Nothing
  5971 ;; This function is called by:
  5972 ;;		_atoi
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           
  5977                           ;psect for function _isdigit
  5978  09BF                     _isdigit:	
  5979                           
  5980                           ;incstack = 0
  5981                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5982                           ;isdigit@c stored from wreg
  5983  09BF  0020               	movlb	0	; select bank0
  5984  09C0  00B8               	movwf	isdigit@c
  5985  09C1  01B7               	clrf	_isdigit$582
  5986  09C2  303A               	movlw	58
  5987  09C3  0238               	subwf	isdigit@c,w
  5988  09C4  1803               	skipnc
  5989  09C5  29CC               	goto	l3026
  5990  09C6  3030               	movlw	48
  5991  09C7  0238               	subwf	isdigit@c,w
  5992  09C8  1C03               	skipc
  5993  09C9  29CC               	goto	l3026
  5994  09CA  01B7               	clrf	_isdigit$582
  5995  09CB  0AB7               	incf	_isdigit$582,f
  5996  09CC                     l3026:	
  5997  09CC  0C37               	rrf	_isdigit$582,w
  5998  09CD  0008               	return
  5999  09CE                     __end_of_isdigit:	
  6000                           
  6001                           	psect	text29
  6002  0A03                     __ptext29:	
  6003 ;; *************** function ___wmul *****************
  6004 ;; Defined at:
  6005 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul16.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;  multiplier      2   23[BANK0 ] unsigned int 
  6008 ;;  multiplicand    2   25[BANK0 ] unsigned int 
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;  product         2   27[BANK0 ] unsigned int 
  6011 ;; Return value:  Size  Location     Type
  6012 ;;                  2   23[BANK0 ] unsigned int 
  6013 ;; Registers used:
  6014 ;;		wreg, status,2, status,0
  6015 ;; Tracked objects:
  6016 ;;		On entry : 0/0
  6017 ;;		On exit  : 0/0
  6018 ;;		Unchanged: 0/0
  6019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6020 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6021 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6023 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;Total ram usage:        6 bytes
  6025 ;; Hardware stack levels used:    1
  6026 ;; Hardware stack levels required when called:    2
  6027 ;; This function calls:
  6028 ;;		Nothing
  6029 ;; This function is called by:
  6030 ;;		_atoi
  6031 ;; This function uses a non-reentrant model
  6032 ;;
  6033                           
  6034                           
  6035                           ;psect for function ___wmul
  6036  0A03                     ___wmul:	
  6037                           
  6038                           ;incstack = 0
  6039                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6040  0A03  0020               	movlb	0	; select bank0
  6041  0A04  01BB               	clrf	___wmul@product
  6042  0A05  01BC               	clrf	___wmul@product+1
  6043  0A06                     l3008:	
  6044  0A06  1C37               	btfss	___wmul@multiplier,0
  6045  0A07  2A0C               	goto	l577
  6046  0A08  0839               	movf	___wmul@multiplicand,w
  6047  0A09  07BB               	addwf	___wmul@product,f
  6048  0A0A  083A               	movf	___wmul@multiplicand+1,w
  6049  0A0B  3DBC               	addwfc	___wmul@product+1,f
  6050  0A0C                     l577:	
  6051  0A0C  3001               	movlw	1
  6052  0A0D                     u4005:	
  6053  0A0D  35B9               	lslf	___wmul@multiplicand,f
  6054  0A0E  0DBA               	rlf	___wmul@multiplicand+1,f
  6055  0A0F  0B89               	decfsz	9,f
  6056  0A10  2A0D               	goto	u4005
  6057  0A11  3001               	movlw	1
  6058  0A12                     u4015:	
  6059  0A12  36B8               	lsrf	___wmul@multiplier+1,f
  6060  0A13  0CB7               	rrf	___wmul@multiplier,f
  6061  0A14  0B89               	decfsz	9,f
  6062  0A15  2A12               	goto	u4015
  6063  0A16  0838               	movf	___wmul@multiplier+1,w
  6064  0A17  0437               	iorwf	___wmul@multiplier,w
  6065  0A18  1D03               	skipz
  6066  0A19  2A06               	goto	l3008
  6067  0A1A  083C               	movf	___wmul@product+1,w
  6068  0A1B  01B8               	clrf	?___wmul+1
  6069  0A1C  07B8               	addwf	?___wmul+1,f
  6070  0A1D  083B               	movf	___wmul@product,w
  6071  0A1E  01B7               	clrf	?___wmul
  6072  0A1F  07B7               	addwf	?___wmul,f
  6073  0A20  0008               	return
  6074  0A21                     __end_of___wmul:	
  6075                           
  6076                           	psect	intentry
  6077  0004                     __pintentry:	
  6078 ;; *************** function _tc_int *****************
  6079 ;; Defined at:
  6080 ;;		line 26 in file "interrupt.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;		None
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;  period          2   21[BANK0 ] unsigned short 
  6085 ;;  slewed_perio    2   18[BANK0 ] unsigned short 
  6086 ;;  AD_val          2   16[BANK0 ] unsigned short 
  6087 ;;  pwm             2   14[BANK0 ] unsigned short 
  6088 ;;  i               1   20[BANK0 ] unsigned char 
  6089 ;; Return value:  Size  Location     Type
  6090 ;;		None               void
  6091 ;; Registers used:
  6092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6099 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6100 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6101 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6102 ;;Total ram usage:       23 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:    1
  6105 ;; This function calls:
  6106 ;;		i1___lmul
  6107 ;; This function is called by:
  6108 ;;		Interrupt level 1
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112  0004                     _tc_int:	
  6113                           
  6114                           ;incstack = 0
  6115                           ; Regs used in _tc_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6116  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6117  0005  3180               	pagesel	$
  6118  0006  0020               	movlb	0	; select bank0
  6119  0007  087F               	movf	127,w
  6120  0008  00A7               	movwf	??_tc_int+7
  6121                           
  6122                           ;interrupt.c: 28: static bit overtemp_1 = 0, overtemp_2 = 0;
  6123                           ;interrupt.c: 29: static unsigned char fet_temp_timer=0;
  6124                           ;interrupt.c: 30: static unsigned short int fault_timer_1=0, fault_timer_2=0, pulse_time
      +                          r=0;
  6125                           ;interrupt.c: 31: static unsigned long int fet_temp_1=0, fet_temp_2=0;
  6126                           ;interrupt.c: 32: unsigned short int AD_val, period, slewed_period, pwm;
  6127                           ;interrupt.c: 33: unsigned char i;
  6128                           ;interrupt.c: 36: if (TMR0IF) {
  6129  0009  1D0B               	btfss	11,2	;volatile
  6130  000A  2AAB               	goto	i1l165
  6131                           
  6132                           ;interrupt.c: 37: TMR0IF = 0;
  6133  000B  110B               	bcf	11,2	;volatile
  6134                           
  6135                           ;interrupt.c: 39: if (!remote_enabled) {
  6136  000C  1858               	btfsc	_remote_enabled/(0+8),_remote_enabled& (0+7)
  6137  000D  28B5               	goto	i1l3618
  6138                           
  6139                           ;interrupt.c: 40: enc_A_2 = enc_A_1;
  6140  000E  10FD               	bcf	_enc_A_2/(0+8),_enc_A_2& (0+7)
  6141  000F  1C7D               	btfss	_enc_A_1/(0+8),_enc_A_1& (0+7)
  6142  0010  2813               	goto	L5
  6143  0011  14FD               	bsf	_enc_A_2/(0+8),_enc_A_2& (0+7)
  6144                           
  6145                           ;interrupt.c: 41: enc_A_1 = RC4;
  6146  0012  107D               	bcf	_enc_A_1/(0+8),_enc_A_1& (0+7)
  6147  0013                     L5:	
  6148  0013  0020               	movlb	0	; select bank0
  6149  0014  1A0E               	btfsc	14,4	;volatile
  6150  0015  147D               	bsf	_enc_A_1/(0+8),_enc_A_1& (0+7)
  6151                           
  6152                           ;interrupt.c: 42: enc_B_2 = enc_B_1;
  6153  0016  11FD               	bcf	_enc_B_2/(0+8),_enc_B_2& (0+7)
  6154  0017  197D               	btfsc	_enc_B_1/(0+8),_enc_B_1& (0+7)
  6155  0018  15FD               	bsf	_enc_B_2/(0+8),_enc_B_2& (0+7)
  6156                           
  6157                           ;interrupt.c: 43: enc_B_1 = RC5;
  6158  0019  117D               	bcf	_enc_B_1/(0+8),_enc_B_1& (0+7)
  6159  001A  0020               	movlb	0	; select bank0
  6160  001B  1A8E               	btfsc	14,5	;volatile
  6161  001C  157D               	bsf	_enc_B_1/(0+8),_enc_B_1& (0+7)
  6162                           
  6163                           ;interrupt.c: 45: if (enc_A_1 && !enc_A_2) {
  6164  001D  187D               	btfsc	_enc_A_1/(0+8),_enc_A_1& (0+7)
  6165  001E  18FD               	btfsc	_enc_A_2/(0+8),_enc_A_2& (0+7)
  6166  001F  2823               	goto	i1l93
  6167                           
  6168                           ;interrupt.c: 46: if (!enc_B_1) {
  6169  0020  1D7D               	btfss	_enc_B_1/(0+8),_enc_B_1& (0+7)
  6170  0021  2834               	goto	L15
  6171                           
  6172                           ;interrupt.c: 48: } else {
  6173                           
  6174                           ;interrupt.c: 47: ++enc_position;
  6175  0022  2839               	goto	i1l3594
  6176  0023                     i1l93:	
  6177                           ;interrupt.c: 50: }
  6178                           ;interrupt.c: 51: } else if (!enc_A_1 && enc_A_2) {
  6179                           
  6180                           ;interrupt.c: 49: --enc_position;
  6181                           
  6182  0023  1C7D               	btfss	_enc_A_1/(0+8),_enc_A_1& (0+7)
  6183  0024  1CFD               	btfss	_enc_A_2/(0+8),_enc_A_2& (0+7)
  6184  0025  2829               	goto	i1l97
  6185                           
  6186                           ;interrupt.c: 52: if (!enc_B_1) {
  6187  0026  197D               	btfsc	_enc_B_1/(0+8),_enc_B_1& (0+7)
  6188  0027  2834               	goto	L15
  6189  0028  2839               	goto	i1l3594
  6190  0029                     i1l97:	
  6191                           ;interrupt.c: 56: }
  6192                           ;interrupt.c: 57: } else if (enc_B_1 && !enc_B_2) {
  6193                           
  6194                           ;interrupt.c: 55: ++enc_position;
  6195                           
  6196                           ;interrupt.c: 54: } else {
  6197                           
  6198                           ;interrupt.c: 53: --enc_position;
  6199                           
  6200  0029  197D               	btfsc	_enc_B_1/(0+8),_enc_B_1& (0+7)
  6201  002A  19FD               	btfsc	_enc_B_2/(0+8),_enc_B_2& (0+7)
  6202  002B  282F               	goto	i1l101
  6203                           
  6204                           ;interrupt.c: 58: if (!enc_A_1) {
  6205  002C  1C7D               	btfss	_enc_A_1/(0+8),_enc_A_1& (0+7)
  6206  002D  2839               	goto	i1l3594
  6207                           
  6208                           ;interrupt.c: 60: } else {
  6209                           
  6210                           ;interrupt.c: 59: --enc_position;
  6211  002E  2834               	goto	L15
  6212  002F                     i1l101:	
  6213                           ;interrupt.c: 62: }
  6214                           ;interrupt.c: 63: } else if (!enc_B_1 && enc_B_2) {
  6215                           
  6216                           ;interrupt.c: 61: ++enc_position;
  6217                           
  6218  002F  1D7D               	btfss	_enc_B_1/(0+8),_enc_B_1& (0+7)
  6219  0030  1DFD               	btfss	_enc_B_2/(0+8),_enc_B_2& (0+7)
  6220  0031  283E               	goto	i1l3596
  6221                           
  6222                           ;interrupt.c: 64: if (!enc_A_1) {
  6223  0032  187D               	btfsc	_enc_A_1/(0+8),_enc_A_1& (0+7)
  6224  0033  2839               	goto	i1l3594
  6225  0034                     L15:	
  6226                           
  6227                           ;interrupt.c: 65: ++enc_position;
  6228  0034  3001               	movlw	1
  6229  0035  0020               	movlb	0	; select bank0
  6230  0036  07CB               	addwf	_enc_position,f
  6231  0037  3000               	movlw	0
  6232  0038  283D               	goto	L12
  6233  0039                     i1l3594:	
  6234                           ;interrupt.c: 66: } else {
  6235                           
  6236                           
  6237                           ;interrupt.c: 67: --enc_position;
  6238  0039  30FF               	movlw	255
  6239  003A  0020               	movlb	0	; select bank0
  6240  003B  07CB               	addwf	_enc_position,f
  6241  003C  30FF               	movlw	255
  6242  003D                     L12:	
  6243  003D  3DCC               	addwfc	_enc_position+1,f
  6244  003E                     i1l3596:	
  6245                           
  6246                           ;interrupt.c: 68: }
  6247                           ;interrupt.c: 69: }
  6248                           ;interrupt.c: 71: if (enc_position < 0) enc_position = 0;
  6249  003E  0020               	movlb	0	; select bank0
  6250  003F  1FCC               	btfss	_enc_position+1,7
  6251  0040  2843               	goto	i1l3600
  6252  0041  01CB               	clrf	_enc_position
  6253  0042  01CC               	clrf	_enc_position+1
  6254  0043                     i1l3600:	
  6255                           
  6256                           ;interrupt.c: 72: if (enc_position > 127) enc_position = 127;
  6257  0043  084C               	movf	_enc_position+1,w
  6258  0044  3A80               	xorlw	128
  6259  0045  00A0               	movwf	??_tc_int
  6260  0046  3080               	movlw	128
  6261  0047  0220               	subwf	??_tc_int,w
  6262  0048  1D03               	skipz
  6263  0049  284C               	goto	u515_25
  6264  004A  3080               	movlw	128
  6265  004B  024B               	subwf	_enc_position,w
  6266  004C                     u515_25:	
  6267  004C  1C03               	skipc
  6268  004D  2853               	goto	i1l3604
  6269  004E  307F               	movlw	127
  6270  004F  0020               	movlb	0	; select bank0
  6271  0050  00CB               	movwf	_enc_position
  6272  0051  3000               	movlw	0
  6273  0052  00CC               	movwf	_enc_position+1
  6274  0053                     i1l3604:	
  6275                           
  6276                           ;interrupt.c: 78: for (i=0; i<8; ++i) {
  6277  0053  0020               	movlb	0	; select bank0
  6278  0054  01B4               	clrf	tc_int@i
  6279  0055                     L14:	
  6280  0055  3008               	movlw	8
  6281  0056  0234               	subwf	tc_int@i,w
  6282  0057  1803               	btfsc	3,0
  6283  0058  28BC               	goto	i1l113
  6284                           
  6285                           ;interrupt.c: 79: if (enc_position <= AD_x[i]) {
  6286  0059  0834               	movf	tc_int@i,w
  6287  005A  00A0               	movwf	??_tc_int
  6288  005B  01A1               	clrf	??_tc_int+1
  6289  005C  35A0               	lslf	??_tc_int,f
  6290  005D  0DA1               	rlf	??_tc_int+1,f
  6291  005E  3040               	movlw	low (_AD_x| (0+32768))
  6292  005F  0720               	addwf	??_tc_int,w
  6293  0060  0084               	movwf	4
  6294  0061  3083               	movlw	high (_AD_x| (0+32768))
  6295  0062  3D21               	addwfc	??_tc_int+1,w
  6296  0063  0085               	movwf	5
  6297  0064  3F00               	moviw [0]fsr0
  6298  0065  00A2               	movwf	??_tc_int+2
  6299  0066  3F01               	moviw [1]fsr0
  6300  0067  00A3               	movwf	??_tc_int+3
  6301  0068  084C               	movf	_enc_position+1,w
  6302  0069  0223               	subwf	??_tc_int+3,w
  6303  006A  1D03               	skipz
  6304  006B  286E               	goto	u517_25
  6305  006C  084B               	movf	_enc_position,w
  6306  006D  0222               	subwf	??_tc_int+2,w
  6307  006E                     u517_25:	
  6308  006E  1C03               	skipc
  6309  006F  28B0               	goto	i1l3614
  6310                           
  6311                           ;interrupt.c: 80: period = (unsigned char)((enc_position * AD_a[i]) >> 16) + AD_b[i];
  6312  0070  0834               	movf	tc_int@i,w
  6313  0071  3E5A               	addlw	low (_AD_b| (0+32768))
  6314  0072  0084               	movwf	4
  6315  0073  3083               	movlw	high (_AD_b| (0+32768))
  6316  0074  1803               	skipnc
  6317  0075  3E01               	addlw	1
  6318  0076  0085               	movwf	5
  6319  0077  0800               	movf	0,w	;code access
  6320  0078  00A0               	movwf	??_tc_int
  6321  0079  084B               	movf	_enc_position,w
  6322  007A  00F0               	movwf	i1___lmul@multiplier
  6323  007B  084C               	movf	_enc_position+1,w
  6324  007C  00F1               	movwf	i1___lmul@multiplier+1
  6325  007D  0D89               	rlf	9,f
  6326  007E  3B89               	subwfb	9,f
  6327  007F  0989               	comf	9,f
  6328  0080  00F2               	movwf	i1___lmul@multiplier+2
  6329  0081  00F3               	movwf	i1___lmul@multiplier+3
  6330  0082  0834               	movf	tc_int@i,w
  6331  0083  00A1               	movwf	??_tc_int+1
  6332  0084  01A2               	clrf	??_tc_int+2
  6333  0085  35A1               	lslf	??_tc_int+1,f
  6334  0086  0DA2               	rlf	??_tc_int+2,f
  6335  0087  35A1               	lslf	??_tc_int+1,f
  6336  0088  0DA2               	rlf	??_tc_int+2,f
  6337  0089  3000               	movlw	low (_AD_a| (0+32768))
  6338  008A  0721               	addwf	??_tc_int+1,w
  6339  008B  0084               	movwf	4
  6340  008C  3083               	movlw	high (_AD_a| (0+32768))
  6341  008D  3D22               	addwfc	??_tc_int+2,w
  6342  008E  0085               	movwf	5
  6343  008F  3F00               	moviw [0]fsr0
  6344  0090  00F4               	movwf	i1___lmul@multiplicand
  6345  0091  3F01               	moviw [1]fsr0
  6346  0092  00F5               	movwf	i1___lmul@multiplicand+1
  6347  0093  3F02               	moviw [2]fsr0
  6348  0094  00F6               	movwf	i1___lmul@multiplicand+2
  6349  0095  3F03               	moviw [3]fsr0
  6350  0096  00F7               	movwf	i1___lmul@multiplicand+3
  6351  0097  318A  226B  3180   	fcall	i1___lmul
  6352  009A  0870               	movf	?i1___lmul,w
  6353  009B  0020               	movlb	0	; select bank0
  6354  009C  00A3               	movwf	??_tc_int+3
  6355  009D  0871               	movf	?i1___lmul+1,w
  6356  009E  00A4               	movwf	??_tc_int+4
  6357  009F  0872               	movf	?i1___lmul+2,w
  6358  00A0  00A5               	movwf	??_tc_int+5
  6359  00A1  0873               	movf	?i1___lmul+3,w
  6360  00A2  00A6               	movwf	??_tc_int+6
  6361  00A3  3010               	movlw	16
  6362  00A4                     u518_25:	
  6363  00A4  36A6               	lsrf	??_tc_int+6,f
  6364  00A5  0CA5               	rrf	??_tc_int+5,f
  6365  00A6  0CA4               	rrf	??_tc_int+4,f
  6366  00A7  0CA3               	rrf	??_tc_int+3,f
  6367  00A8  0B89               	decfsz	9,f
  6368  00A9  28A4               	goto	u518_25
  6369  00AA  0823               	movf	??_tc_int+3,w
  6370  00AB  0720               	addwf	??_tc_int,w
  6371  00AC  00B5               	movwf	tc_int@period
  6372  00AD  01B6               	clrf	tc_int@period+1
  6373  00AE  0DB6               	rlf	tc_int@period+1,f
  6374                           
  6375                           ;interrupt.c: 81: break;
  6376  00AF  28BC               	goto	i1l113
  6377  00B0                     i1l3614:	
  6378  00B0  3001               	movlw	1
  6379  00B1  00A0               	movwf	??_tc_int
  6380  00B2  0820               	movf	??_tc_int,w
  6381  00B3  07B4               	addwf	tc_int@i,f
  6382  00B4  2855               	goto	L14
  6383  00B5                     i1l3618:	
  6384                           ;interrupt.c: 82: }
  6385                           ;interrupt.c: 83: }
  6386                           ;interrupt.c: 84: } else {
  6387                           
  6388                           
  6389                           ;interrupt.c: 85: period = remote_power_level;
  6390  00B5  0855               	movf	_remote_power_level,w
  6391  00B6  00A0               	movwf	??_tc_int
  6392  00B7  01A1               	clrf	??_tc_int+1
  6393  00B8  0820               	movf	??_tc_int,w
  6394  00B9  00B5               	movwf	tc_int@period
  6395  00BA  0821               	movf	??_tc_int+1,w
  6396  00BB  00B6               	movwf	tc_int@period+1
  6397  00BC                     i1l113:	
  6398                           
  6399                           ;interrupt.c: 86: }
  6400                           ;interrupt.c: 88: if (period > 256) period = 256;
  6401  00BC  3001               	movlw	1
  6402  00BD  0236               	subwf	tc_int@period+1,w
  6403  00BE  3001               	movlw	1
  6404  00BF  1903               	skipnz
  6405  00C0  0235               	subwf	tc_int@period,w
  6406  00C1  1C03               	skipc
  6407  00C2  28C7               	goto	i1l114
  6408  00C3  3000               	movlw	0
  6409  00C4  00B5               	movwf	tc_int@period
  6410  00C5  3001               	movlw	1
  6411  00C6  00B6               	movwf	tc_int@period+1
  6412  00C7                     i1l114:	
  6413                           
  6414                           ;interrupt.c: 92: ++power_light_counter;
  6415  00C7  3001               	movlw	1
  6416  00C8  07CD               	addwf	_power_light_counter,f
  6417  00C9  3000               	movlw	0
  6418  00CA  3DCE               	addwfc	_power_light_counter+1,f
  6419                           
  6420                           ;interrupt.c: 93: if (power_light_counter > 512) power_light_counter = 0;
  6421  00CB  084E               	movf	_power_light_counter+1,w
  6422  00CC  3A80               	xorlw	128
  6423  00CD  00A0               	movwf	??_tc_int
  6424  00CE  3082               	movlw	130
  6425  00CF  0220               	subwf	??_tc_int,w
  6426  00D0  1D03               	skipz
  6427  00D1  28D4               	goto	u521_25
  6428  00D2  3001               	movlw	1
  6429  00D3  024D               	subwf	_power_light_counter,w
  6430  00D4                     u521_25:	
  6431  00D4  1C03               	skipc
  6432  00D5  28D9               	goto	i1l3624
  6433  00D6  0020               	movlb	0	; select bank0
  6434  00D7  01CD               	clrf	_power_light_counter
  6435  00D8  01CE               	clrf	_power_light_counter+1
  6436  00D9                     i1l3624:	
  6437                           
  6438                           ;interrupt.c: 95: if (power_light_counter < (period << 1)) {
  6439  00D9  0020               	movlb	0	; select bank0
  6440  00DA  0836               	movf	tc_int@period+1,w
  6441  00DB  00A1               	movwf	??_tc_int+1
  6442  00DC  0835               	movf	tc_int@period,w
  6443  00DD  00A0               	movwf	??_tc_int
  6444  00DE  35A0               	lslf	??_tc_int,f
  6445  00DF  0DA1               	rlf	??_tc_int+1,f
  6446  00E0  0821               	movf	??_tc_int+1,w
  6447  00E1  024E               	subwf	_power_light_counter+1,w
  6448  00E2  1D03               	skipz
  6449  00E3  28E6               	goto	u522_25
  6450  00E4  0820               	movf	??_tc_int,w
  6451  00E5  024D               	subwf	_power_light_counter,w
  6452  00E6                     u522_25:	
  6453  00E6  1803               	skipnc
  6454  00E7  28EA               	goto	i1l116
  6455                           
  6456                           ;interrupt.c: 96: RB4 = 0;
  6457  00E8  120D               	bcf	13,4	;volatile
  6458                           
  6459                           ;interrupt.c: 97: } else {
  6460  00E9  28EB               	goto	i1l3628
  6461  00EA                     i1l116:	
  6462                           
  6463                           ;interrupt.c: 98: RB4 = 1;
  6464  00EA  160D               	bsf	13,4	;volatile
  6465  00EB                     i1l3628:	
  6466                           
  6467                           ;interrupt.c: 99: }
  6468                           ;interrupt.c: 105: if ((fault_timer_1 > 0) || (fault_timer_2 > 0)) {
  6469  00EB  0850               	movf	tc_int@fault_timer_1+1,w
  6470  00EC  044F               	iorwf	tc_int@fault_timer_1,w
  6471  00ED  1D03               	skipz
  6472  00EE  28F3               	goto	i1l3632
  6473  00EF  0852               	movf	tc_int@fault_timer_2+1,w
  6474  00F0  0451               	iorwf	tc_int@fault_timer_2,w
  6475  00F1  1903               	skipnz
  6476  00F2  28F5               	goto	i1l3634
  6477  00F3                     i1l3632:	
  6478                           
  6479                           ;interrupt.c: 106: period = 0;
  6480  00F3  01B5               	clrf	tc_int@period
  6481  00F4  01B6               	clrf	tc_int@period+1
  6482  00F5                     i1l3634:	
  6483                           
  6484                           ;interrupt.c: 107: }
  6485                           ;interrupt.c: 111: if (period < slewed_period) {
  6486  00F5  0833               	movf	tc_int@slewed_period+1,w
  6487  00F6  0236               	subwf	tc_int@period+1,w
  6488  00F7  1D03               	skipz
  6489  00F8  28FB               	goto	u525_25
  6490  00F9  0832               	movf	tc_int@slewed_period,w
  6491  00FA  0235               	subwf	tc_int@period,w
  6492  00FB                     u525_25:	
  6493  00FB  1C03               	btfss	3,0
  6494  00FC  291E               	goto	i1l3644
  6495                           
  6496                           ;interrupt.c: 113: } else if (period >= (slewed_period + 20)) {
  6497                           
  6498                           ;interrupt.c: 112: slewed_period = period;
  6499  00FD  0832               	movf	tc_int@slewed_period,w
  6500  00FE  3E14               	addlw	20
  6501  00FF  00A0               	movwf	??_tc_int
  6502  0100  3000               	movlw	0
  6503  0101  3D33               	addwfc	tc_int@slewed_period+1,w
  6504  0102  00A1               	movwf	??_tc_int+1
  6505  0103  0821               	movf	??_tc_int+1,w
  6506  0104  0236               	subwf	tc_int@period+1,w
  6507  0105  1D03               	skipz
  6508  0106  2909               	goto	u526_25
  6509  0107  0820               	movf	??_tc_int,w
  6510  0108  0235               	subwf	tc_int@period,w
  6511  0109                     u526_25:	
  6512  0109  1C03               	skipc
  6513  010A  2910               	goto	i1l3642
  6514                           
  6515                           ;interrupt.c: 114: slewed_period += 20;
  6516  010B  3014               	movlw	20
  6517  010C  07B2               	addwf	tc_int@slewed_period,f
  6518  010D  3000               	movlw	0
  6519  010E  3DB3               	addwfc	tc_int@slewed_period+1,f
  6520                           
  6521                           ;interrupt.c: 115: } else if (period < (slewed_period + 20)) {
  6522  010F  2924               	goto	i1l122
  6523  0110                     i1l3642:	
  6524  0110  0832               	movf	tc_int@slewed_period,w
  6525  0111  3E14               	addlw	20
  6526  0112  00A0               	movwf	??_tc_int
  6527  0113  3000               	movlw	0
  6528  0114  3D33               	addwfc	tc_int@slewed_period+1,w
  6529  0115  00A1               	movwf	??_tc_int+1
  6530  0116  0821               	movf	??_tc_int+1,w
  6531  0117  0236               	subwf	tc_int@period+1,w
  6532  0118  1D03               	skipz
  6533  0119  291C               	goto	u527_25
  6534  011A  0820               	movf	??_tc_int,w
  6535  011B  0235               	subwf	tc_int@period,w
  6536  011C                     u527_25:	
  6537  011C  1803               	skipnc
  6538  011D  2924               	goto	i1l122
  6539  011E                     i1l3644:	
  6540                           
  6541                           ;interrupt.c: 116: slewed_period = period;
  6542  011E  0836               	movf	tc_int@period+1,w
  6543  011F  01B3               	clrf	tc_int@slewed_period+1
  6544  0120  07B3               	addwf	tc_int@slewed_period+1,f
  6545  0121  0835               	movf	tc_int@period,w
  6546  0122  01B2               	clrf	tc_int@slewed_period
  6547  0123  07B2               	addwf	tc_int@slewed_period,f
  6548  0124                     i1l122:	
  6549                           
  6550                           ;interrupt.c: 117: }
  6551                           ;interrupt.c: 119: pwm = (unsigned short)(0x100 - slewed_period);
  6552  0124  0932               	comf	tc_int@slewed_period,w
  6553  0125  00A0               	movwf	??_tc_int
  6554  0126  0933               	comf	tc_int@slewed_period+1,w
  6555  0127  00A1               	movwf	??_tc_int+1
  6556  0128  0AA0               	incf	??_tc_int,f
  6557  0129  1903               	skipnz
  6558  012A  0AA1               	incf	??_tc_int+1,f
  6559  012B  0820               	movf	??_tc_int,w
  6560  012C  3E00               	addlw	0
  6561  012D  00AE               	movwf	tc_int@pwm
  6562  012E  3001               	movlw	1
  6563  012F  3D21               	addwfc	??_tc_int+1,w
  6564  0130  00AF               	movwf	tc_int@pwm+1
  6565                           
  6566                           ;interrupt.c: 120: CCPR2L = (unsigned char)(pwm >> 2);
  6567  0131  082F               	movf	tc_int@pwm+1,w
  6568  0132  00A1               	movwf	??_tc_int+1
  6569  0133  082E               	movf	tc_int@pwm,w
  6570  0134  00A0               	movwf	??_tc_int
  6571  0135  36A1               	lsrf	??_tc_int+1,f
  6572  0136  0CA0               	rrf	??_tc_int,f
  6573  0137  36A1               	lsrf	??_tc_int+1,f
  6574  0138  0CA0               	rrf	??_tc_int,f
  6575  0139  0820               	movf	??_tc_int,w
  6576  013A  0025               	movlb	5	; select bank5
  6577  013B  0098               	movwf	24	;volatile
  6578                           
  6579                           ;interrupt.c: 121: CCP2CON = (unsigned char)((CCP2CON & 0xCF) | ((pwm & 0x03) << 4));
  6580  013C  0020               	movlb	0	; select bank0
  6581  013D  082E               	movf	tc_int@pwm,w
  6582  013E  3903               	andlw	3
  6583  013F  00A0               	movwf	??_tc_int
  6584  0140  3004               	movlw	4
  6585  0141                     u528_25:	
  6586  0141  35A0               	lslf	??_tc_int,f
  6587  0142  0B89               	decfsz	9,f
  6588  0143  2941               	goto	u528_25
  6589  0144  0025               	movlb	5	; select bank5
  6590  0145  081A               	movf	26,w	;volatile
  6591  0146  39CF               	andlw	207
  6592  0147  0020               	movlb	0	; select bank0
  6593  0148  0420               	iorwf	??_tc_int,w
  6594  0149  0025               	movlb	5	; select bank5
  6595  014A  009A               	movwf	26	;volatile
  6596                           
  6597                           ;interrupt.c: 124: ADCON0 = 0x03;
  6598  014B  3003               	movlw	3
  6599  014C  0021               	movlb	1	; select bank1
  6600  014D  009D               	movwf	29	;volatile
  6601  014E                     i1l126:	
  6602                           ;interrupt.c: 125: while(nDONE);
  6603                           
  6604  014E  189D               	btfsc	29,1	;volatile
  6605  014F  294E               	goto	i1l126
  6606                           
  6607                           ;interrupt.c: 126: ADCON0 = 0x03;
  6608  0150  3003               	movlw	3
  6609  0151  009D               	movwf	29	;volatile
  6610  0152                     i1l129:	
  6611                           ;interrupt.c: 127: while(nDONE);
  6612                           
  6613  0152  189D               	btfsc	29,1	;volatile
  6614  0153  2952               	goto	i1l129
  6615                           
  6616                           ;interrupt.c: 128: AD_val = ((unsigned short)ADRESH << 2) + ((unsigned short)ADRESL >> 6
      +                          );
  6617  0154  081B               	movf	27,w	;volatile
  6618  0155  0020               	movlb	0	; select bank0
  6619  0156  00A0               	movwf	??_tc_int
  6620  0157  3006               	movlw	6
  6621  0158                     u531_25:	
  6622  0158  36A0               	lsrf	??_tc_int,f
  6623  0159  0B89               	decfsz	9,f
  6624  015A  2958               	goto	u531_25
  6625  015B  0820               	movf	??_tc_int,w
  6626  015C  00A1               	movwf	??_tc_int+1
  6627  015D  01A2               	clrf	??_tc_int+2
  6628  015E  0021               	movlb	1	; select bank1
  6629  015F  081C               	movf	28,w	;volatile
  6630  0160  0020               	movlb	0	; select bank0
  6631  0161  00A3               	movwf	??_tc_int+3
  6632  0162  01A4               	clrf	??_tc_int+4
  6633  0163  35A3               	lslf	??_tc_int+3,f
  6634  0164  0DA4               	rlf	??_tc_int+4,f
  6635  0165  35A3               	lslf	??_tc_int+3,f
  6636  0166  0DA4               	rlf	??_tc_int+4,f
  6637  0167  0821               	movf	??_tc_int+1,w
  6638  0168  0723               	addwf	??_tc_int+3,w
  6639  0169  00A5               	movwf	??_tc_int+5
  6640  016A  0822               	movf	??_tc_int+2,w
  6641  016B  3D24               	addwfc	??_tc_int+4,w
  6642  016C  00A6               	movwf	??_tc_int+6
  6643  016D  0825               	movf	??_tc_int+5,w
  6644  016E  00B0               	movwf	tc_int@AD_val
  6645  016F  0826               	movf	??_tc_int+6,w
  6646  0170  00B1               	movwf	tc_int@AD_val+1
  6647                           
  6648                           ;interrupt.c: 129: fet_temp_1 += AD_val;
  6649  0171  0830               	movf	tc_int@AD_val,w
  6650  0172  07C3               	addwf	tc_int@fet_temp_1,f
  6651  0173  0831               	movf	tc_int@AD_val+1,w
  6652  0174  3DC4               	addwfc	tc_int@fet_temp_1+1,f
  6653  0175  3000               	movlw	0
  6654  0176  3DC5               	addwfc	tc_int@fet_temp_1+2,f
  6655  0177  3DC6               	addwfc	tc_int@fet_temp_1+3,f
  6656                           
  6657                           ;interrupt.c: 132: ADCON0 = 0x07;
  6658  0178  3007               	movlw	7
  6659  0179  0021               	movlb	1	; select bank1
  6660  017A  009D               	movwf	29	;volatile
  6661  017B                     i1l132:	
  6662                           ;interrupt.c: 133: while(nDONE);
  6663                           
  6664  017B  189D               	btfsc	29,1	;volatile
  6665  017C  297B               	goto	i1l132
  6666                           
  6667                           ;interrupt.c: 134: ADCON0 = 0x07;
  6668  017D  3007               	movlw	7
  6669  017E  009D               	movwf	29	;volatile
  6670  017F                     i1l135:	
  6671                           ;interrupt.c: 135: while(nDONE);
  6672                           
  6673  017F  189D               	btfsc	29,1	;volatile
  6674  0180  297F               	goto	i1l135
  6675                           
  6676                           ;interrupt.c: 136: AD_val = ((unsigned short)ADRESH << 2) + ((unsigned short)ADRESL >> 6
      +                          );
  6677  0181  081B               	movf	27,w	;volatile
  6678  0182  0020               	movlb	0	; select bank0
  6679  0183  00A0               	movwf	??_tc_int
  6680  0184  3006               	movlw	6
  6681  0185                     u534_25:	
  6682  0185  36A0               	lsrf	??_tc_int,f
  6683  0186  0B89               	decfsz	9,f
  6684  0187  2985               	goto	u534_25
  6685  0188  0820               	movf	??_tc_int,w
  6686  0189  00A1               	movwf	??_tc_int+1
  6687  018A  01A2               	clrf	??_tc_int+2
  6688  018B  0021               	movlb	1	; select bank1
  6689  018C  081C               	movf	28,w	;volatile
  6690  018D  0020               	movlb	0	; select bank0
  6691  018E  00A3               	movwf	??_tc_int+3
  6692  018F  01A4               	clrf	??_tc_int+4
  6693  0190  35A3               	lslf	??_tc_int+3,f
  6694  0191  0DA4               	rlf	??_tc_int+4,f
  6695  0192  35A3               	lslf	??_tc_int+3,f
  6696  0193  0DA4               	rlf	??_tc_int+4,f
  6697  0194  0821               	movf	??_tc_int+1,w
  6698  0195  0723               	addwf	??_tc_int+3,w
  6699  0196  00A5               	movwf	??_tc_int+5
  6700  0197  0822               	movf	??_tc_int+2,w
  6701  0198  3D24               	addwfc	??_tc_int+4,w
  6702  0199  00A6               	movwf	??_tc_int+6
  6703  019A  0825               	movf	??_tc_int+5,w
  6704  019B  00B0               	movwf	tc_int@AD_val
  6705  019C  0826               	movf	??_tc_int+6,w
  6706  019D  00B1               	movwf	tc_int@AD_val+1
  6707                           
  6708                           ;interrupt.c: 137: fet_temp_2 += AD_val;
  6709  019E  0830               	movf	tc_int@AD_val,w
  6710  019F  07C7               	addwf	tc_int@fet_temp_2,f
  6711  01A0  0831               	movf	tc_int@AD_val+1,w
  6712  01A1  3DC8               	addwfc	tc_int@fet_temp_2+1,f
  6713  01A2  3000               	movlw	0
  6714  01A3  3DC9               	addwfc	tc_int@fet_temp_2+2,f
  6715  01A4  3DCA               	addwfc	tc_int@fet_temp_2+3,f
  6716                           
  6717                           ;interrupt.c: 139: ++fet_temp_timer;
  6718  01A5  3001               	movlw	1
  6719  01A6  00A0               	movwf	??_tc_int
  6720  01A7  0820               	movf	??_tc_int,w
  6721  01A8  07D7               	addwf	tc_int@fet_temp_timer,f
  6722                           
  6723                           ;interrupt.c: 140: if (!fet_temp_timer) {
  6724  01A9  08D7               	movf	tc_int@fet_temp_timer,f
  6725  01AA  1D03               	skipz
  6726  01AB  2A00               	goto	i1l3676
  6727                           
  6728                           ;interrupt.c: 141: if ((fet_temp_1 >> 8) < 431) {
  6729  01AC  0843               	movf	tc_int@fet_temp_1,w
  6730  01AD  00A0               	movwf	??_tc_int
  6731  01AE  0844               	movf	tc_int@fet_temp_1+1,w
  6732  01AF  00A1               	movwf	??_tc_int+1
  6733  01B0  0845               	movf	tc_int@fet_temp_1+2,w
  6734  01B1  00A2               	movwf	??_tc_int+2
  6735  01B2  0846               	movf	tc_int@fet_temp_1+3,w
  6736  01B3  00A3               	movwf	??_tc_int+3
  6737  01B4  3008               	movlw	8
  6738  01B5                     u536_25:	
  6739  01B5  36A3               	lsrf	??_tc_int+3,f
  6740  01B6  0CA2               	rrf	??_tc_int+2,f
  6741  01B7  0CA1               	rrf	??_tc_int+1,f
  6742  01B8  0CA0               	rrf	??_tc_int,f
  6743  01B9  0B89               	decfsz	9,f
  6744  01BA  29B5               	goto	u536_25
  6745  01BB  3000               	movlw	0
  6746  01BC  0223               	subwf	??_tc_int+3,w
  6747  01BD  1D03               	skipz
  6748  01BE  29C9               	goto	u537_25
  6749  01BF  3000               	movlw	0
  6750  01C0  0222               	subwf	??_tc_int+2,w
  6751  01C1  1D03               	skipz
  6752  01C2  29C9               	goto	u537_25
  6753  01C3  3001               	movlw	1
  6754  01C4  0221               	subwf	??_tc_int+1,w
  6755  01C5  1D03               	skipz
  6756  01C6  29C9               	goto	u537_25
  6757  01C7  30AF               	movlw	175
  6758  01C8  0220               	subwf	??_tc_int,w
  6759  01C9                     u537_25:	
  6760  01C9  1803               	skipnc
  6761  01CA  29CD               	goto	i1l139
  6762                           
  6763                           ;interrupt.c: 142: overtemp_1 = 1;
  6764  01CB  167C               	bsf	tc_int@overtemp_1/(0+8),tc_int@overtemp_1& (0+7)
  6765                           
  6766                           ;interrupt.c: 143: } else {
  6767  01CC  29CE               	goto	i1l3670
  6768  01CD                     i1l139:	
  6769                           
  6770                           ;interrupt.c: 144: overtemp_1 = 0;
  6771  01CD  127C               	bcf	tc_int@overtemp_1/(0+8),tc_int@overtemp_1& (0+7)
  6772  01CE                     i1l3670:	
  6773                           
  6774                           ;interrupt.c: 145: }
  6775                           ;interrupt.c: 147: if ((fet_temp_2 >> 8) < 431) {
  6776  01CE  0847               	movf	tc_int@fet_temp_2,w
  6777  01CF  00A0               	movwf	??_tc_int
  6778  01D0  0848               	movf	tc_int@fet_temp_2+1,w
  6779  01D1  00A1               	movwf	??_tc_int+1
  6780  01D2  0849               	movf	tc_int@fet_temp_2+2,w
  6781  01D3  00A2               	movwf	??_tc_int+2
  6782  01D4  084A               	movf	tc_int@fet_temp_2+3,w
  6783  01D5  00A3               	movwf	??_tc_int+3
  6784  01D6  3008               	movlw	8
  6785  01D7                     u538_25:	
  6786  01D7  36A3               	lsrf	??_tc_int+3,f
  6787  01D8  0CA2               	rrf	??_tc_int+2,f
  6788  01D9  0CA1               	rrf	??_tc_int+1,f
  6789  01DA  0CA0               	rrf	??_tc_int,f
  6790  01DB  0B89               	decfsz	9,f
  6791  01DC  29D7               	goto	u538_25
  6792  01DD  3000               	movlw	0
  6793  01DE  0223               	subwf	??_tc_int+3,w
  6794  01DF  1D03               	skipz
  6795  01E0  29EB               	goto	u539_25
  6796  01E1  3000               	movlw	0
  6797  01E2  0222               	subwf	??_tc_int+2,w
  6798  01E3  1D03               	skipz
  6799  01E4  29EB               	goto	u539_25
  6800  01E5  3001               	movlw	1
  6801  01E6  0221               	subwf	??_tc_int+1,w
  6802  01E7  1D03               	skipz
  6803  01E8  29EB               	goto	u539_25
  6804  01E9  30AF               	movlw	175
  6805  01EA  0220               	subwf	??_tc_int,w
  6806  01EB                     u539_25:	
  6807  01EB  1803               	skipnc
  6808  01EC  29EF               	goto	i1l141
  6809                           
  6810                           ;interrupt.c: 148: overtemp_2 = 1;
  6811  01ED  16FC               	bsf	tc_int@overtemp_2/(0+8),tc_int@overtemp_2& (0+7)
  6812                           
  6813                           ;interrupt.c: 149: } else {
  6814  01EE  29F0               	goto	i1l3674
  6815  01EF                     i1l141:	
  6816                           
  6817                           ;interrupt.c: 150: overtemp_2 = 0;
  6818  01EF  12FC               	bcf	tc_int@overtemp_2/(0+8),tc_int@overtemp_2& (0+7)
  6819  01F0                     i1l3674:	
  6820                           
  6821                           ;interrupt.c: 151: }
  6822                           ;interrupt.c: 152: fet_temp_1 = fet_temp_2 = 0;
  6823  01F0  3000               	movlw	0
  6824  01F1  00CA               	movwf	tc_int@fet_temp_2+3
  6825  01F2  3000               	movlw	0
  6826  01F3  00C9               	movwf	tc_int@fet_temp_2+2
  6827  01F4  3000               	movlw	0
  6828  01F5  00C8               	movwf	tc_int@fet_temp_2+1
  6829  01F6  3000               	movlw	0
  6830  01F7  00C7               	movwf	tc_int@fet_temp_2
  6831  01F8  084A               	movf	tc_int@fet_temp_2+3,w
  6832  01F9  00C6               	movwf	tc_int@fet_temp_1+3
  6833  01FA  0849               	movf	tc_int@fet_temp_2+2,w
  6834  01FB  00C5               	movwf	tc_int@fet_temp_1+2
  6835  01FC  0848               	movf	tc_int@fet_temp_2+1,w
  6836  01FD  00C4               	movwf	tc_int@fet_temp_1+1
  6837  01FE  0847               	movf	tc_int@fet_temp_2,w
  6838  01FF  00C3               	movwf	tc_int@fet_temp_1
  6839  0200                     i1l3676:	
  6840                           
  6841                           ;interrupt.c: 153: }
  6842                           ;interrupt.c: 157: if (RA3) {
  6843  0200  1D8C               	btfss	12,3	;volatile
  6844  0201  2A07               	goto	i1l3680
  6845                           
  6846                           ;interrupt.c: 158: fault_timer_1 = 512;
  6847  0202  3000               	movlw	0
  6848  0203  00CF               	movwf	tc_int@fault_timer_1
  6849  0204  3002               	movlw	2
  6850  0205  00D0               	movwf	tc_int@fault_timer_1+1
  6851                           
  6852                           ;interrupt.c: 159: } else {
  6853  0206  2A0F               	goto	i1l3684
  6854  0207                     i1l3680:	
  6855                           
  6856                           ;interrupt.c: 160: if (fault_timer_1) --fault_timer_1;
  6857  0207  0850               	movf	tc_int@fault_timer_1+1,w
  6858  0208  044F               	iorwf	tc_int@fault_timer_1,w
  6859  0209  1903               	skipnz
  6860  020A  2A0F               	goto	i1l3684
  6861  020B  3001               	movlw	1
  6862  020C  02CF               	subwf	tc_int@fault_timer_1,f
  6863  020D  3000               	movlw	0
  6864  020E  3BD0               	subwfb	tc_int@fault_timer_1+1,f
  6865  020F                     i1l3684:	
  6866                           
  6867                           ;interrupt.c: 161: }
  6868                           ;interrupt.c: 163: if (RA4) {
  6869  020F  1E0C               	btfss	12,4	;volatile
  6870  0210  2A16               	goto	i1l3688
  6871                           
  6872                           ;interrupt.c: 164: fault_timer_2 = 512;
  6873  0211  3000               	movlw	0
  6874  0212  00D1               	movwf	tc_int@fault_timer_2
  6875  0213  3002               	movlw	2
  6876  0214  00D2               	movwf	tc_int@fault_timer_2+1
  6877                           
  6878                           ;interrupt.c: 165: } else {
  6879  0215  2A1E               	goto	i1l147
  6880  0216                     i1l3688:	
  6881                           
  6882                           ;interrupt.c: 166: if (fault_timer_2) --fault_timer_2;
  6883  0216  0852               	movf	tc_int@fault_timer_2+1,w
  6884  0217  0451               	iorwf	tc_int@fault_timer_2,w
  6885  0218  1903               	skipnz
  6886  0219  2A1E               	goto	i1l147
  6887  021A  3001               	movlw	1
  6888  021B  02D1               	subwf	tc_int@fault_timer_2,f
  6889  021C  3000               	movlw	0
  6890  021D  3BD2               	subwfb	tc_int@fault_timer_2+1,f
  6891  021E                     i1l147:	
  6892                           
  6893                           ;interrupt.c: 167: }
  6894                           ;interrupt.c: 170: if (pulse_timer < 100) {
  6895  021E  3000               	movlw	0
  6896  021F  0254               	subwf	tc_int@pulse_timer+1,w
  6897  0220  3064               	movlw	100
  6898  0221  1903               	skipnz
  6899  0222  0253               	subwf	tc_int@pulse_timer,w
  6900  0223  1803               	skipnc
  6901  0224  2A2A               	goto	i1l3694
  6902                           
  6903                           ;interrupt.c: 171: ++pulse_timer;
  6904  0225  3001               	movlw	1
  6905  0226  07D3               	addwf	tc_int@pulse_timer,f
  6906  0227  3000               	movlw	0
  6907  0228  3DD4               	addwfc	tc_int@pulse_timer+1,f
  6908                           
  6909                           ;interrupt.c: 172: } else {
  6910  0229  2A2C               	goto	i1l3696
  6911  022A                     i1l3694:	
  6912                           
  6913                           ;interrupt.c: 173: pulse_timer = 0;
  6914  022A  01D3               	clrf	tc_int@pulse_timer
  6915  022B  01D4               	clrf	tc_int@pulse_timer+1
  6916  022C                     i1l3696:	
  6917                           
  6918                           ;interrupt.c: 174: }
  6919                           ;interrupt.c: 177: RB1 = !overtemp_1;
  6920  022C  1A7C               	btfsc	tc_int@overtemp_1/(0+8),tc_int@overtemp_1& (0+7)
  6921  022D  2A31               	goto	u545_20
  6922  022E  0020               	movlb	0	; select bank0
  6923  022F  148D               	bsf	13,1	;volatile
  6924  0230  2A33               	goto	i1l3698
  6925  0231                     u545_20:	
  6926  0231  0020               	movlb	0	; select bank0
  6927  0232  108D               	bcf	13,1	;volatile
  6928  0233                     i1l3698:	
  6929                           
  6930                           ;interrupt.c: 178: RB3 = !overtemp_2;
  6931  0233  1AFC               	btfsc	tc_int@overtemp_2/(0+8),tc_int@overtemp_2& (0+7)
  6932  0234  2A38               	goto	u547_20
  6933  0235  0020               	movlb	0	; select bank0
  6934  0236  158D               	bsf	13,3	;volatile
  6935  0237  2A3A               	goto	i1l3700
  6936  0238                     u547_20:	
  6937  0238  0020               	movlb	0	; select bank0
  6938  0239  118D               	bcf	13,3	;volatile
  6939  023A                     i1l3700:	
  6940                           
  6941                           ;interrupt.c: 179: RB0 = !(fault_timer_1 > 0);
  6942  023A  0850               	movf	tc_int@fault_timer_1+1,w
  6943  023B  044F               	iorwf	tc_int@fault_timer_1,w
  6944  023C  1D03               	btfss	3,2
  6945  023D  2A41               	goto	u549_20
  6946  023E  0020               	movlb	0	; select bank0
  6947  023F  140D               	bsf	13,0	;volatile
  6948  0240  2A43               	goto	i1l3702
  6949  0241                     u549_20:	
  6950  0241  0020               	movlb	0	; select bank0
  6951  0242  100D               	bcf	13,0	;volatile
  6952  0243                     i1l3702:	
  6953                           
  6954                           ;interrupt.c: 180: RB2 = !(fault_timer_2 > 0);
  6955  0243  0852               	movf	tc_int@fault_timer_2+1,w
  6956  0244  0451               	iorwf	tc_int@fault_timer_2,w
  6957  0245  1D03               	btfss	3,2
  6958  0246  2A4A               	goto	u551_20
  6959  0247  0020               	movlb	0	; select bank0
  6960  0248  150D               	bsf	13,2	;volatile
  6961  0249  2A4C               	goto	i1l3704
  6962  024A                     u551_20:	
  6963  024A  0020               	movlb	0	; select bank0
  6964  024B  110D               	bcf	13,2	;volatile
  6965  024C                     i1l3704:	
  6966                           
  6967                           ;interrupt.c: 182: if (remote_enabled == 1) {
  6968  024C  1C58               	btfss	_remote_enabled/(0+8),_remote_enabled& (0+7)
  6969  024D  2A7C               	goto	i1l151
  6970                           
  6971                           ;interrupt.c: 183: RB5 = 0;
  6972  024E  128D               	bcf	13,5	;volatile
  6973                           
  6974                           ;interrupt.c: 186: RC2 = !pulse_enabled || (pulse_enabled && (pulse_timer < 20));
  6975  024F  01A8               	clrf	_tc_int$70
  6976  0250  0AA8               	incf	_tc_int$70,f
  6977  0251  1DFC               	btfss	_pulse_enabled/(0+8),_pulse_enabled& (0+7)
  6978  0252  2A5C               	goto	i1l3714
  6979  0253  1DFC               	btfss	_pulse_enabled/(0+8),_pulse_enabled& (0+7)
  6980  0254  2A5B               	goto	i1l3712
  6981  0255  3000               	movlw	0
  6982  0256  0254               	subwf	tc_int@pulse_timer+1,w
  6983  0257  3014               	movlw	20
  6984  0258  1903               	skipnz
  6985  0259  0253               	subwf	tc_int@pulse_timer,w
  6986  025A  1803               	btfsc	3,0
  6987  025B                     i1l3712:	
  6988  025B  01A8               	clrf	_tc_int$70
  6989  025C                     i1l3714:	
  6990  025C  0828               	movf	_tc_int$70,w
  6991  025D  1D03               	skipz
  6992  025E  150E               	bsf	14,2	;volatile
  6993  025F  1903               	skipnz
  6994  0260  110E               	bcf	14,2	;volatile
  6995                           
  6996                           ;interrupt.c: 189: RC0 = !(fault_timer_1 > 0) && !overtemp_1 & channel1_enabled;
  6997  0261  01A9               	clrf	_tc_int$71
  6998  0262  0850               	movf	tc_int@fault_timer_1+1,w
  6999  0263  044F               	iorwf	tc_int@fault_timer_1,w
  7000  0264  1903               	btfsc	3,2
  7001  0265  1A7C               	btfsc	tc_int@overtemp_1/(0+8),tc_int@overtemp_1& (0+7)
  7002  0266  2A6B               	goto	i1l3726
  7003  0267  1C7C               	btfss	_channel1_enabled/(0+8),_channel1_enabled& (0+7)
  7004  0268  2A6B               	goto	i1l3726
  7005  0269  01A9               	clrf	_tc_int$71
  7006  026A  0AA9               	incf	_tc_int$71,f
  7007  026B                     i1l3726:	
  7008  026B  0829               	movf	_tc_int$71,w
  7009  026C  1D03               	skipz
  7010  026D  140E               	bsf	14,0	;volatile
  7011  026E  1903               	skipnz
  7012  026F  100E               	bcf	14,0	;volatile
  7013                           
  7014                           ;interrupt.c: 190: RC3 = !(fault_timer_2 > 0) && !overtemp_2 && channel2_enabled;
  7015  0270  01AA               	clrf	_tc_int$72
  7016  0271  0852               	movf	tc_int@fault_timer_2+1,w
  7017  0272  0451               	iorwf	tc_int@fault_timer_2,w
  7018  0273  1903               	btfsc	3,2
  7019  0274  1AFC               	btfsc	tc_int@overtemp_2/(0+8),tc_int@overtemp_2& (0+7)
  7020  0275  2A7A               	goto	i1l3738
  7021  0276  1CFC               	btfss	_channel2_enabled/(0+8),_channel2_enabled& (0+7)
  7022  0277  2A7A               	goto	i1l3738
  7023  0278  01AA               	clrf	_tc_int$72
  7024  0279  0AAA               	incf	_tc_int$72,f
  7025  027A                     i1l3738:	
  7026  027A  082A               	movf	_tc_int$72,w
  7027  027B  2AA7               	goto	L13
  7028  027C                     i1l151:	
  7029                           ;interrupt.c: 192: } else {
  7030                           
  7031                           
  7032                           ;interrupt.c: 193: RB5 = 1;
  7033  027C  168D               	bsf	13,5	;volatile
  7034                           
  7035                           ;interrupt.c: 196: RC2 = RA6 || (!RA6 && (pulse_timer < 20));
  7036  027D  01AB               	clrf	_tc_int$73
  7037  027E  0AAB               	incf	_tc_int$73,f
  7038  027F  1B0C               	btfsc	12,6	;volatile
  7039  0280  2A8A               	goto	i1l3746
  7040  0281  1B0C               	btfsc	12,6	;volatile
  7041  0282  2A89               	goto	i1l3744
  7042  0283  3000               	movlw	0
  7043  0284  0254               	subwf	tc_int@pulse_timer+1,w
  7044  0285  3014               	movlw	20
  7045  0286  1903               	skipnz
  7046  0287  0253               	subwf	tc_int@pulse_timer,w
  7047  0288  1803               	btfsc	3,0
  7048  0289                     i1l3744:	
  7049  0289  01AB               	clrf	_tc_int$73
  7050  028A                     i1l3746:	
  7051  028A  082B               	movf	_tc_int$73,w
  7052  028B  1D03               	skipz
  7053  028C  150E               	bsf	14,2	;volatile
  7054  028D  1903               	skipnz
  7055  028E  110E               	bcf	14,2	;volatile
  7056                           
  7057                           ;interrupt.c: 199: RC0 = !(fault_timer_1 > 0) && !overtemp_1;
  7058  028F  01AC               	clrf	_tc_int$74
  7059  0290  0850               	movf	tc_int@fault_timer_1+1,w
  7060  0291  044F               	iorwf	tc_int@fault_timer_1,w
  7061  0292  1903               	btfsc	3,2
  7062  0293  1A7C               	btfsc	tc_int@overtemp_1/(0+8),tc_int@overtemp_1& (0+7)
  7063  0294  2A97               	goto	i1l3756
  7064  0295  01AC               	clrf	_tc_int$74
  7065  0296  0AAC               	incf	_tc_int$74,f
  7066  0297                     i1l3756:	
  7067  0297  082C               	movf	_tc_int$74,w
  7068  0298  1D03               	skipz
  7069  0299  140E               	bsf	14,0	;volatile
  7070  029A  1903               	skipnz
  7071  029B  100E               	bcf	14,0	;volatile
  7072                           
  7073                           ;interrupt.c: 200: RC3 = !(fault_timer_2 > 0) && !overtemp_2 && !RA5;
  7074  029C  01AD               	clrf	_tc_int$75
  7075  029D  0852               	movf	tc_int@fault_timer_2+1,w
  7076  029E  0451               	iorwf	tc_int@fault_timer_2,w
  7077  029F  1903               	btfsc	3,2
  7078  02A0  1AFC               	btfsc	tc_int@overtemp_2/(0+8),tc_int@overtemp_2& (0+7)
  7079  02A1  2AA6               	goto	i1l3768
  7080  02A2  1A8C               	btfsc	12,5	;volatile
  7081  02A3  2AA6               	goto	i1l3768
  7082  02A4  01AD               	clrf	_tc_int$75
  7083  02A5  0AAD               	incf	_tc_int$75,f
  7084  02A6                     i1l3768:	
  7085  02A6  082D               	movf	_tc_int$75,w
  7086  02A7                     L13:	
  7087  02A7  1D03               	skipz
  7088  02A8  158E               	bsf	14,3	;volatile
  7089  02A9  1903               	skipnz
  7090  02AA  118E               	bcf	14,3	;volatile
  7091  02AB                     i1l165:	
  7092  02AB  0827               	movf	??_tc_int+7,w
  7093  02AC  00FF               	movwf	127
  7094  02AD  107E               	bcf	126,0	;clear compiler interrupt flag
  7095  02AE  0009               	retfie
  7096  02AF                     __end_of_tc_int:	
  7097                           
  7098                           	psect	text31
  7099  0A6B                     __ptext31:	
  7100 ;; *************** function i1___lmul *****************
  7101 ;; Defined at:
  7102 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul32.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  multiplier      4    0[COMMON] unsigned long 
  7105 ;;  multiplicand    4    4[COMMON] unsigned long 
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;  __lmul          4    8[COMMON] unsigned long 
  7108 ;; Return value:  Size  Location     Type
  7109 ;;                  4    0[COMMON] unsigned long 
  7110 ;; Registers used:
  7111 ;;		wreg, status,2, status,0
  7112 ;; Tracked objects:
  7113 ;;		On entry : 0/0
  7114 ;;		On exit  : 0/0
  7115 ;;		Unchanged: 0/0
  7116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7117 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7118 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7120 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7121 ;;Total ram usage:       12 bytes
  7122 ;; Hardware stack levels used:    1
  7123 ;; This function calls:
  7124 ;;		Nothing
  7125 ;; This function is called by:
  7126 ;;		_tc_int
  7127 ;; This function uses a non-reentrant model
  7128 ;;
  7129                           
  7130                           
  7131                           ;psect for function i1___lmul
  7132  0A6B                     i1___lmul:	
  7133                           
  7134                           ;incstack = 0
  7135                           ; Regs used in i1___lmul: [wreg+status,2+status,0]
  7136  0A6B  3000               	movlw	0
  7137  0A6C  00FB               	movwf	i1___lmul@product+3
  7138  0A6D  3000               	movlw	0
  7139  0A6E  00FA               	movwf	i1___lmul@product+2
  7140  0A6F  3000               	movlw	0
  7141  0A70  00F9               	movwf	i1___lmul@product+1
  7142  0A71  3000               	movlw	0
  7143  0A72  00F8               	movwf	i1___lmul@product
  7144  0A73                     i1l3546:	
  7145  0A73  1C70               	btfss	i1___lmul@multiplier,0
  7146  0A74  2A7D               	goto	i1l3550
  7147  0A75  0874               	movf	i1___lmul@multiplicand,w
  7148  0A76  07F8               	addwf	i1___lmul@product,f
  7149  0A77  0875               	movf	i1___lmul@multiplicand+1,w
  7150  0A78  3DF9               	addwfc	i1___lmul@product+1,f
  7151  0A79  0876               	movf	i1___lmul@multiplicand+2,w
  7152  0A7A  3DFA               	addwfc	i1___lmul@product+2,f
  7153  0A7B  0877               	movf	i1___lmul@multiplicand+3,w
  7154  0A7C  3DFB               	addwfc	i1___lmul@product+3,f
  7155  0A7D                     i1l3550:	
  7156  0A7D  3001               	movlw	1
  7157  0A7E                     u493_25:	
  7158  0A7E  35F4               	lslf	i1___lmul@multiplicand,f
  7159  0A7F  0DF5               	rlf	i1___lmul@multiplicand+1,f
  7160  0A80  0DF6               	rlf	i1___lmul@multiplicand+2,f
  7161  0A81  0DF7               	rlf	i1___lmul@multiplicand+3,f
  7162  0A82  0B89               	decfsz	9,f
  7163  0A83  2A7E               	goto	u493_25
  7164  0A84  3001               	movlw	1
  7165  0A85                     u494_25:	
  7166  0A85  36F3               	lsrf	i1___lmul@multiplier+3,f
  7167  0A86  0CF2               	rrf	i1___lmul@multiplier+2,f
  7168  0A87  0CF1               	rrf	i1___lmul@multiplier+1,f
  7169  0A88  0CF0               	rrf	i1___lmul@multiplier,f
  7170  0A89  0B89               	decfsz	9,f
  7171  0A8A  2A85               	goto	u494_25
  7172  0A8B  0873               	movf	i1___lmul@multiplier+3,w
  7173  0A8C  0472               	iorwf	i1___lmul@multiplier+2,w
  7174  0A8D  0471               	iorwf	i1___lmul@multiplier+1,w
  7175  0A8E  0470               	iorwf	i1___lmul@multiplier,w
  7176  0A8F  1D03               	skipz
  7177  0A90  2A73               	goto	i1l3546
  7178  0A91  087B               	movf	i1___lmul@product+3,w
  7179  0A92  00F3               	movwf	?i1___lmul+3
  7180  0A93  087A               	movf	i1___lmul@product+2,w
  7181  0A94  00F2               	movwf	?i1___lmul+2
  7182  0A95  0879               	movf	i1___lmul@product+1,w
  7183  0A96  00F1               	movwf	?i1___lmul+1
  7184  0A97  0878               	movf	i1___lmul@product,w
  7185  0A98  00F0               	movwf	?i1___lmul
  7186  0A99  0008               	return
  7187  0A9A                     __end_ofi1___lmul:	
  7188  007E                     btemp	set	126	;btemp
  7189  007E                     pic14e$flags	set	126
  7190  007E                     wtemp	set	126
  7191  007E                     wtemp0	set	126
  7192  0080                     wtemp1	set	128
  7193  0082                     wtemp2	set	130
  7194  0084                     wtemp3	set	132
  7195  0086                     wtemp4	set	134
  7196  0088                     wtemp5	set	136
  7197  007F                     wtemp6	set	127
  7198  007E                     ttemp	set	126
  7199  007E                     ttemp0	set	126
  7200  0081                     ttemp1	set	129
  7201  0084                     ttemp2	set	132
  7202  0087                     ttemp3	set	135
  7203  007F                     ttemp4	set	127
  7204  007E                     ltemp	set	126
  7205  007E                     ltemp0	set	126
  7206  0082                     ltemp1	set	130
  7207  0086                     ltemp2	set	134
  7208  0080                     ltemp3	set	128


Data Sizes:
    Strings     299
    Constant    98
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     35      57
    BANK1            80     77      77
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    S111$1$0	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    status_command@param1	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    S77$1$0	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_23(CODE[2]), STR_22(CODE[2]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_23(CODE[2]), STR_22(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), main@cmdbuf(BANK1[10]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_23(CODE[2]), NULL(NULL[0]), STR_22(CODE[2]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_23(CODE[2]), STR_22(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), main@cmdbuf(BANK1[10]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_23(CODE[2]), STR_22(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), main@cmdbuf(BANK1[10]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), main@cmdbuf(BANK1[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_37(CODE[3]), STR_36(CODE[4]), STR_35(CODE[2]), STR_34(CODE[2]), 
		 -> status_command@buf(BANK1[10]), STR_24(CODE[4]), STR_13(CODE[2]), STR_12(CODE[4]), 
		 -> STR_11(CODE[27]), STR_10(CODE[6]), STR_9(CODE[25]), STR_8(CODE[6]), 
		 -> STR_7(CODE[24]), STR_6(CODE[6]), main@cmd_descr(BANK1[12]), STR_5(CODE[2]), 
		 -> STR_4(CODE[4]), STR_3(CODE[36]), STR_2(CODE[6]), main@cmdbuf(BANK1[10]), 
		 -> STR_1(CODE[33]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_37(CODE[3]), STR_36(CODE[4]), STR_35(CODE[2]), STR_34(CODE[2]), 
		 -> status_command@buf(BANK1[10]), STR_24(CODE[4]), STR_13(CODE[2]), STR_12(CODE[4]), 
		 -> STR_11(CODE[27]), STR_10(CODE[6]), STR_9(CODE[25]), STR_8(CODE[6]), 
		 -> STR_7(CODE[24]), STR_6(CODE[6]), main@cmd_descr(BANK1[12]), STR_5(CODE[2]), 
		 -> STR_4(CODE[4]), STR_3(CODE[36]), STR_2(CODE[6]), main@cmdbuf(BANK1[10]), 
		 -> STR_1(CODE[33]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), main@cmdbuf(BANK1[10]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 12
		 -> parse_setup_cmd@cbuf(BANK1[10]), main@cmd_descr(BANK1[12]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 12
		 -> parse_setup_cmd@cbuf(BANK1[10]), main@cmd_descr(BANK1[12]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[4]), STR_18(CODE[6]), 
		 -> STR_17(CODE[6]), STR_16(CODE[6]), STR_15(CODE[4]), STR_14(CODE[5]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> parse_setup_cmd@cbuf(BANK1[10]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_33(CODE[7]), STR_32(CODE[8]), STR_31(CODE[8]), STR_30(CODE[8]), 
		 -> STR_29(CODE[8]), STR_28(CODE[8]), STR_27(CODE[8]), STR_26(CODE[8]), 
		 -> STR_25(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> status_command@buf(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S377$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    sergetline@buf	PTR unsigned char  size(1) Largest target is 10
		 -> main@cmdbuf(BANK1[10]), 

    serputstr@line	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_37(CODE[3]), STR_36(CODE[4]), STR_35(CODE[2]), STR_34(CODE[2]), 
		 -> status_command@buf(BANK1[10]), STR_24(CODE[4]), STR_13(CODE[2]), STR_12(CODE[4]), 
		 -> STR_11(CODE[27]), STR_10(CODE[6]), STR_9(CODE[25]), STR_8(CODE[6]), 
		 -> STR_7(CODE[24]), STR_6(CODE[6]), STR_5(CODE[2]), STR_4(CODE[4]), 
		 -> STR_3(CODE[36]), STR_2(CODE[6]), STR_1(CODE[33]), 

    ttlout_command@param1	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    power_command@param1	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    pulse_command@param1	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    enable2_command@param1	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    enable1_command@param1	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    remote_command@param1	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    echo_command@param1	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 12
		 -> parse_setup_cmd@cbuf(BANK1[10]), main@cmd_descr(BANK1[12]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), main@cmdbuf(BANK1[10]), 

    parse_setup_cmd@buf	PTR unsigned char  size(1) Largest target is 10
		 -> main@cmdbuf(BANK1[10]), 

    parse_setup_cmd@tokptr	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), main@cmdbuf(BANK1[10]), 

    parse_setup_cmd@cmd_descr.cmdptr	PTR FTN(PTR unsigned char ,)int  size(2) Largest target is 2
		 -> status_command(), ttlout_command(), power_command(), pulse_command(), 
		 -> enable2_command(), enable1_command(), remote_command(), echo_command(), 

    parse_setup_cmd@cmd_descr	PTR struct command size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    S111cmdlist$cmdptr	PTR FTN(PTR unsigned char ,)int  size(2) Largest target is 2
		 -> status_command(), ttlout_command(), power_command(), pulse_command(), 
		 -> enable2_command(), enable1_command(), remote_command(), echo_command(), 

    commands.cmdptr	PTR FTN(PTR unsigned char ,)int  size(2) Largest target is 2
		 -> status_command(), ttlout_command(), power_command(), pulse_command(), 
		 -> enable2_command(), enable1_command(), remote_command(), echo_command(), 

    S111cmdlist$cmdname	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[4]), STR_18(CODE[6]), 
		 -> STR_17(CODE[6]), STR_16(CODE[6]), STR_15(CODE[4]), STR_14(CODE[5]), 

    commands.cmdname	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[4]), STR_18(CODE[6]), 
		 -> STR_17(CODE[6]), STR_16(CODE[6]), STR_15(CODE[4]), STR_14(CODE[5]), 

    S77command$cmdptr	PTR FTN(PTR unsigned char ,)int  size(2) Largest target is 2
		 -> status_command(), ttlout_command(), power_command(), pulse_command(), 
		 -> enable2_command(), enable1_command(), remote_command(), echo_command(), 

    cmd_descr.cmdptr	PTR FTN(PTR unsigned char ,)int  size(2) Largest target is 2
		 -> status_command(), ttlout_command(), power_command(), pulse_command(), 
		 -> enable2_command(), enable1_command(), remote_command(), echo_command(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tc_int in COMMON

    _tc_int->i1___lmul

Critical Paths under _main in BANK0

    _main->___lmul
    _main->_sergetline
    _status_command->___lmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _sergetline->_serputstr
    _serputstr->_strlen
    _power_command->___lmul
    _parse_setup_cmd->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _atoi->___wmul

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_status_command
    _status_command->_sprintf
    _sprintf->___lwmod
    _sergetline->_serputstr
    _parse_setup_cmd->_strtok
    _strtok->_strcspn
    _strtok->_strspn

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tc_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tc_int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tc_int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tc_int in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _tc_int in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _tc_int in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _tc_int in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _tc_int in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _tc_int in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    53      4   39584
                                             40 BANK1     37    33      4
                             ___lmul
                       _echo_command *
                    _enable1_command *
                    _enable2_command *
                    _parse_setup_cmd
                          _pic_setup
                      _power_command *
                      _pulse_command *
                     _remote_command *
                         _sergetline
                          _serputstr
                     _status_command *
                             _strlen
                     _ttlout_command *
 ---------------------------------------------------------------------------------
 (1) _ttlout_command                                       5     3      2    2241
                                             19 BANK1      5     3      2
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _status_command                                      21    19      2    8540
                                             19 BANK1     21    19      2
                             ___lmul
                          _serputstr
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             17    13      4    3117
                                              2 BANK1     17    13      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     508
                                             31 BANK0      4     0      4
                                              0 BANK1      2     2      0
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     395
                                             23 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _sergetline                                           9     7      2    4656
                                             32 BANK0      3     3      0
                                              4 BANK1      6     4      2
                         _sergetchar
                         _serputchar
                          _serputstr
                            _tolower
 ---------------------------------------------------------------------------------
 (2) _tolower                                              1     1      0      96
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _serputstr                                            7     5      2    3762
                                             29 BANK0      3     1      2
                                              0 BANK1      4     4      0
                         _serputchar
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _serputchar                                           1     1      0      42
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _sergetchar                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _remote_command                                       5     3      2    2241
                                             19 BANK1      5     3      2
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _pulse_command                                        5     3      2    2241
                                             19 BANK1      5     3      2
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _power_command                                       14    12      2    2971
                                             19 BANK1     14    12      2
                             ___lmul
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     682
                                             23 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _pic_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _parse_setup_cmd                                     24    22      2    3676
                                              8 BANK1     24    22      2
                             _strcmp
                             _strcpy
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _strtok                                               6     4      2    2386
                                             33 BANK0      1     1      0
                                              3 BANK1      5     3      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (3) _strspn                                               7     5      2     860
                                             29 BANK0      4     2      2
                                              0 BANK1      3     3      0
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              7     5      2     860
                                             29 BANK0      4     2      2
                                              0 BANK1      3     3      0
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               6     2      4     536
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               4     3      1     279
                                             23 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     3      2     193
                                             23 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _enable2_command                                      5     3      2    2241
                                             19 BANK1      5     3      2
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _enable1_command                                      5     3      2    2241
                                             19 BANK1      5     3      2
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _echo_command                                         5     3      2    2241
                                             19 BANK1      5     3      2
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2    1008
                                             23 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2    1017
                                             29 BANK0      4     2      2
                                              0 BANK1      4     4      0
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                             23 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tc_int                                              23    23      0    1084
                                              0 BANK0     23    23      0
                           i1___lmul
 ---------------------------------------------------------------------------------
 (6) i1___lmul                                            12     4      8     206
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lmul
   _echo_command *
     _atoi
       ___wmul
       _isdigit
     _strlen
   _enable1_command *
     _atoi
       ___wmul
       _isdigit
     _strlen
   _enable2_command *
     _atoi
       ___wmul
       _isdigit
     _strlen
   _parse_setup_cmd *
     _strcmp
     _strcpy
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _pic_setup *
   _power_command *
     ___lmul
     _atoi
       ___wmul
       _isdigit
     _strlen
   _pulse_command *
     _atoi
       ___wmul
       _isdigit
     _strlen
   _remote_command *
     _atoi
       ___wmul
       _isdigit
     _strlen
   _sergetline *
     _sergetchar
     _serputchar
     _serputstr
       _serputchar
       _strlen
     _tolower
   _serputstr *
     _serputchar
     _strlen
   _status_command *
     ___lmul
     _serputstr
       _serputchar
       _strlen
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _strlen *
   _ttlout_command *
     _atoi
       ___wmul
       _isdigit
     _strlen

 _tc_int (ROOT)
   i1___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       1       4        1.2%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      39       5       71.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4D      4D       7       96.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      94      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      94      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Sep  9 09:47:11 2014

       ttlout_command@val 00B6       ___wmul@multiplicand 0039                       l301 0C9B  
                     l322 02F4                       l308 0CD9                       l272 0FA9  
                     l440 099E                       l280 0C1F                       l434 09AC  
                     l294 0C5D                       l287 0D17                       l577 0A0C  
                     _GIE 005F                       _RB0 0068                       _RB1 0069  
                     _RA3 0063                       _RC0 0070                       _RB2 006A  
                     _RA4 0064                       _RC1 0071                       _RB3 006B  
                     _RA5 0065                       _RC2 0072                       _RB4 006C  
                     _RA6 0066                       _RC3 0073                       _RB5 006D  
                     _RA7 0067                       _RC4 0074                       _RC5 0075  
                     _PR2 001B   __end_of_enable1_command 0C65   __end_of_enable2_command 0CA3  
                     wreg 0009            ?_power_command 00B3                      l1009 09E8  
                    l2200 0A4E                      l2204 0A65                      l3008 0A06  
                    l3040 0B09                      l3026 09CC                      l3042 0B15  
                    l4010 07AE                      l4002 07AA                      l4100 0FFA  
                    l4020 0ED1                      l3052 0B30                      l4012 0726  
                    l3150 0E5A                      l4014 07F6                      l4110 0BFD  
                    l3048 0B27                      l3146 0E53                      l2194 09D4  
                    l4034 0F01                      l4130 0CF5                      l4210 0DE3  
                    l3164 0E79                      l3148 0E4C                      l4060 0F52  
                    l4036 0F07                      l4028 0EEA                      l4116 0C19  
                    l4140 0D1E                      l4220 0E05                      l3174 0EC2  
                    l3166 0E7F                      l3158 0E72                      l2198 0A46  
                    l3254 0AA3                      l4054 0F33                      l4046 0F1A  
                    l4150 0C3B                      l4310 0677                      l3168 0EAF  
                    l3248 09BD                      l4240 02EE                      l4136 0D11  
                    l4216 0DFF                      l4320 0683                      l4312 06B1  
                    l4304 0629                      l3258 0AAD                      l4234 02D2  
                    l4170 0C79                      l4084 0F9D                      l4244 02FC  
                    l4156 0C57                      l4324 0688                      l4316 067C  
                    l4086 0FA2                      l4078 0F79                      l4190 0CB7  
                    l4334 068A                      l4176 0C95                      l4344 0696  
                    l4098 0FF4                      l4354 06A2                      l4338 0691  
                    l4196 0CD3                      l4292 0603                      l4348 069D  
                    l3910 0B80                      l3902 0BDE                      l4358 06A9  
                    l3914 0BA2                      l3908 0B76                      l3932 0D79  
                    l3862 0A28                      l3926 0B4D                      l3864 0A35  
                    l3880 0AD2                      l3954 0DCC                      l3946 0D9C  
                    l3938 0D7E                      l3882 0AE1                      l3890 0AF8  
                    l3956 0DCD                      l3886 0AEE                      l3974 0760  
                    l3896 0BB2                      l3984 0776                      l3968 0748  
                    l3898 0BBC                      l3996 079B                      l3988 077C  
                    STR_1 0386                      STR_2 045A                      STR_3 0362  
                    STR_4 047B                      STR_5 03A5                      STR_6 0448  
                    STR_7 03DB                      STR_8 044E                      STR_9 03C2  
                    _BRGH 0CF2                      _AD_a 0300                      _CREN 0CEC  
                    _AD_b 035A                      _AD_x 0340                      u4005 0A0D  
                    u4015 0A12                      u4105 0B28                      u4065 0B0C  
                    u4085 0B16                      u4095 0B20                      u6205 0F4A  
                    u4455 0AAE                      u4465 0AB5                      u6145 0EF5  
                    u6075 0791                      u6315 0D0F                      _RCIF 008D  
                    u6245 0FB3                      u6520 02FA                      u6515 02EC  
                    u6275 0C17                      u6355 0C55                      u6435 0CD1  
                    i1l93 0023                      i1l97 0029                      u5905 0AD7  
                    u6545 0546                      u6395 0C93                      u6475 0DFD  
                    u6563 0627                      u5925 0AE8                      u6485 0E3B  
                    u6645 06FD                      u6573 0675                      u5935 0AEF  
                    u6665 0706                      u6685 070F                      u5995 0B5B  
                    _SPEN 0CEF                      _TXEN 0CF5                      _TXIF 008C  
                    _SYNC 0CF4                      _atoi 0E4A                      _main 0609  
                    fsr0h 0005                      fsr1h 0007                      fsr0l 0004  
                    indf0 0000                      indf1 0001                      fsr1l 0006  
                    btemp 007E             _pulse_enabled 03E3                      ltemp 007E  
                    start 02AF             _pulse_command 0CA3                      ttemp 007E  
            serputstr@len 00A0                      wtemp 007E             __CFG_IESO$OFF 0000  
    __end_of_echo_command 0C27      ttlout_command@param1 00B3                     ?_atoi 003D  
                   ?_main 00C8                     STR_10 0454                     STR_11 03A7  
                   STR_12 047B                     STR_20 0441                     STR_13 03A5  
                   STR_21 043A                     STR_22 0481                     STR_30 03F3  
                   STR_14 0472                     STR_23 048B                     STR_31 040B  
                   STR_15 0483                     STR_24 047F                     STR_32 0403  
                   _BRG16 0CFB                     STR_16 0460                     STR_33 0433  
                   STR_25 0423                     STR_17 0466             __CFG_WDTE$OFF 0000  
                   STR_34 044C                     STR_26 03FB                     STR_18 046C  
                   STR_35 03A5                     STR_27 0413                     STR_19 0487  
                   STR_36 0477                     STR_28 041B                     STR_37 03A4  
                   STR_29 042B                     _T2CON 001C           __end_of___lwdiv 0B37  
                   i1l101 002F                     i1l113 00BC                     i1l122 0124  
                   i1l114 00C7                     i1l132 017B                     i1l116 00EA  
                   i1l141 01EF                     i1l126 014E                     i1l151 027C  
                   i1l135 017F                     i1l129 0152                     i1l147 021E  
                   i1l139 01CD                     i1l165 02AB           __end_of___lwmod 0B00  
                   _RCREG 0199                     _TRISA 008C                     _TRISB 008D  
                   _TRISC 008E                     _TXREG 019A       ___lmul@multiplicand 003B  
           __CFG_PWRTE$ON 0000                     _nDONE 04E9            __CFG_FCMEN$OFF 0000  
         __end_of_dpowers 035A   __size_of_status_command 017C           __end_of_isdigit 09CE  
        ??_ttlout_command 00B5                     atoi@a 00A1                     atoi@s 00A3  
                   main@i 00DB                     main@j 00CD          pulse_command@val 00B6  
          __pbitbssCOMMON 03E0          __end_ofi1___lmul 0A9A                     pclath 000A  
 __end_of_parse_setup_cmd 1000                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080                     ttemp0 007E  
                   ttemp1 0081                     ttemp2 0084                     ttemp3 0087  
                   ttemp4 007F                     status 0003             serputstr@line 003D  
                   wtemp0 007E                     wtemp1 0080                     wtemp2 0082  
                   wtemp3 0084                     wtemp4 0086                     wtemp5 0088  
                   wtemp6 007F           __end_of_sprintf 07FB           __end_of_tolower 09BF  
         __end_of_strcspn 0BAD            ?_pulse_command 00B3              __end_of_AD_a 0320  
            __end_of_AD_b 0362              __end_of_AD_x 0350            __CFG_MCLRE$OFF 0000  
         __initialization 02B1              __end_of_atoi 0ECD              __end_of_main 0720  
     i1___lmul@multiplier 0070          parse_setup_cmd@i 00BD             main@cmd_descr 00E1  
                  ??_atoi 003F                    ??_main 00CC            __CFG_PLLEN$OFF 0000  
        ?_enable1_command 00B3          ?_enable2_command 00B3       parse_setup_cmd@cbuf 00B0  
         ??_power_command 00B5         status_command@buf 00BA        enable1_command@val 00B6  
                  _ADCON0 009D                    _ADCON1 009E                    _ADRESH 009C  
                  _ADRESL 009B                    _CCPR2L 0298                    _ANSELA 018C  
                  _ANSELB 018D                    i1l3600 0043                    i1l3700 023A  
                  i1l3604 0053                    i1l3550 0A7D                    i1l3702 0243  
                  i1l3614 00B0                    i1l3712 025B                    i1l3704 024C  
                  i1l3632 00F3                    i1l3624 00D9                    i1l3546 0A73  
                  i1l3714 025C                    i1l3642 0110                    i1l3634 00F5  
                  i1l3618 00B5                    i1l3644 011E                    i1l3628 00EB  
                  i1l3726 026B                    i1l3670 01CE                    i1l3744 0289  
                  i1l3680 0207                    i1l3746 028A                    i1l3738 027A  
                  i1l3674 01F0                    i1l3594 0039                    i1l3756 0297  
                  i1l3684 020F                    i1l3676 0200                    i1l3596 003E  
                  i1l3694 022A                    i1l3768 02A6                    i1l3696 022C  
                  i1l3688 0216                    i1l3698 0233                    u521_25 00D4  
                  u522_25 00E6                    u531_25 0158                    u515_25 004C  
                  u525_25 00FB                    u517_25 006E                    u534_25 0185  
                  u526_25 0109                    u518_25 00A4                    u551_20 024A  
                  u527_25 011C                    u536_25 01B5                    u528_25 0141  
                  u545_20 0231                    u537_25 01C9                    _OSCCON 0099  
                  u538_25 01D7                    u547_20 0238                    u539_25 01EB  
                  u549_20 0241                    u493_25 0A7E                    u494_25 0A85  
                  _TMR0IE 005D                    _TMR0IF 005A                    _SPBRGH 019C  
                  _SPBRGL 019B          __end_of_commands 0340                    ___lmul 0A9A  
                  ___wmul 0A03   __size_of_remote_command 0041                 ??___lwdiv 003B  
               ??___lwmod 00A0         tc_int@pulse_timer 0053                    _tc_int 0004  
                  _strchr 09E8                    _strcmp 0A43                    _strcpy 09CE  
                  _strlen 0A21                    _strtok 0D6E                    _strspn 0BAD  
               ??_isdigit 0037           sergetline@bsize 00A4        enable2_command@val 00B6  
               ??_sprintf 00A6                 ??_tolower 0037                 ??_strcspn 003F  
        ?_parse_setup_cmd 00A8           ??_pulse_command 00B5     __size_of_echo_command 003E  
 __end_of__initialization 02BA            __pcstackCOMMON 0070          _channel1_enabled 03E0  
        _channel2_enabled 03E1                 ?i1___lmul 0070              _echo_enabled 03E2  
            _echo_command 0BE9            _status_command 048D                __pbssBANK0 0043  
parse_setup_cmd@cmd_descr 00A8      tc_int@fet_temp_timer 0057        __size_of_pic_setup 004C  
              __pmaintext 0609                   ?___lmul 0037                   ?___wmul 0037  
      status_command@temp 00C4                __pintentry 0004                   _CCP2CON 029A  
          ___lmul@product 003F                   ?_tc_int 0070                ??i1___lmul 0078  
    status_command@param1 00B3                   ?_strchr 0037                   ?_strcmp 0037  
                 ?_strcpy 0037                   ?_strlen 0037                   ?_strtok 00A3  
                 ?_strspn 003D    __end_of_status_command 0609     enable1_command@param1 00B3  
      __size_of_serputstr 003A            _remote_enabled 02C0            _remote_command 0CE1  
         __size_of___lmul 0030           __size_of___wmul 001E                   ___lwdiv 0B00  
                 ___lwmod 0ACA           __CFG_STVREN$OFF 0000                   _enc_A_1 03E8  
                 _enc_A_2 03E9                   _enc_B_1 03EA                   _enc_B_2 03EB  
         __size_of_tc_int 02AB                   __ptext1 048D                   __ptext2 0DCF  
                 __ptext3 0CA3                   __ptext4 0C65                   __ptext5 0C27  
                 __ptext6 0CE1                   __ptext7 0BE9                   __ptext8 02BE  
                 __ptext9 0720           __size_of_strchr 001B           __size_of_strcmp 0028  
         __size_of_strcpy 001A           __size_of_strlen 0022           __size_of_strtok 0061  
         __size_of_strspn 003C                   _dpowers 0350              _enc_position 004B  
                 _isdigit 09BF           ?_status_command 00B3         __end_of_pic_setup 0D6E  
                 _sprintf 0720                   _tolower 09B2                   clrloop0 09A5  
                 _strcspn 0B71      end_of_initialization 02BA               sergetline@c 00A9  
             sergetline@i 00A7                   tc_int@i 0034          tc_int@fet_temp_1 0043  
        tc_int@fet_temp_2 0047    __end_of_remote_command 0D22         __end_of_serputstr 0B71  
              _sergetchar 099E                _sergetline 0ECD              __pstringtext 0300  
                 strcmp@r 003A                   strlen@s 0037                   strspn@i 00A0  
              _serputchar 09AA          __CFG_FOSC$INTOSC 0000     __end_of_power_command 0E4A  
__size_of_enable1_command 003E      remote_command@param1 00B3  __size_of_enable2_command 003E  
             serputchar@c 0037                main@cmdbuf 00D1                main@status 00DF  
         ?_remote_command 00B3   __size_of_ttlout_command 0042            __end_of___lmul 0ACA  
          __end_of___wmul 0A21             __pbitbssBANK0 02C0            __end_of_tc_int 02AF  
          __end_of_strchr 0A03            __end_of_strcmp 0A6B              tc_int@AD_val 0030  
          __end_of_strcpy 09E8            __end_of_strlen 0A43            __end_of_strtok 0DCF  
          __end_of_strspn 0BE9     i1___lmul@multiplicand 0074         __size_ofi1___lmul 002F  
           __pbitnvCOMMON 03E8       start_initialization 02B1        parse_setup_cmd@buf 00BC  
     power_command@param1 00B3     __end_of_pulse_command 0CE1          tc_int@overtemp_1 03E4  
        tc_int@overtemp_2 03E5              tc_int@period 0035  __size_of_parse_setup_cmd 00A1  
             ?_sergetchar 0070               ?_sergetline 00A4                  ??___lmul 003F  
                ??___wmul 003B                  ??_tc_int 0020                  ??_strchr 003B  
                ??_strcmp 0039               ?_serputchar 0070                  ??_strcpy 0038  
                ??_strlen 0039                  ??_strtok 00A5                  ??_strspn 003F  
               ___latbits 0003             __pcstackBANK0 0020             __pcstackBANK1 00A0  
     __end_of__stringdata 048D          i1___lmul@product 0078         power_command@temp 00BB  
     tc_int@fault_timer_1 004F       tc_int@fault_timer_2 0051               sprintf@_val 00AD  
     tc_int@slewed_period 0032               sprintf@flag 00AB               sprintf@prec 00AC  
       ??_enable1_command 00B5          ___lwdiv@dividend 0039         ??_enable2_command 00B5  
   parse_setup_cmd@tokptr 00BF                  ?___lwdiv 0037                  ?___lwmod 003F  
        ??_status_command 00B5   parse_setup_cmd@num_cmds 00BA                  ?_isdigit 0070  
                _CCPTMRS0 029E          ___lwdiv@quotient 003D                  ?_sprintf 00A2  
                ?_tolower 0070       __size_of_sergetchar 0006                  ?_strcspn 003D  
     __size_of_sergetline 0092                 _tc_int$70 0028                 _tc_int$71 0029  
               _tc_int$72 002A                 _tc_int$73 002B                 _tc_int$74 002C  
               _tc_int$75 002D                 _pic_setup 0D22            ___wmul@product 003B  
               clear_ram0 09A4       __size_of_serputchar 0008            _ttlout_command 02BE  
               _serputstr 0B37         ??_parse_setup_cmd 00AA                  i1___lmul 0A6B  
             __stringdata 0362         ___wmul@multiplier 0037        _remote_power_level 0055  
              serputstr@i 00A2         ___lmul@multiplier 0037                ?_pic_setup 0070  
        ??_remote_command 00B5    __end_of_ttlout_command 0300             sergetline@buf 00A6  
              ?_serputstr 003D          __size_of___lwdiv 0037          __size_of___lwmod 0036  
       remote_command@val 00B6               _isdigit$582 0037          power_command@val 00BF  
               tc_int@pwm 002E             ?_echo_command 00B3          __size_of_isdigit 000F  
         ___lwdiv@divisor 0037           ___lwdiv@counter 003C                  __ptext10 0ACA  
                __ptext11 0B00                  __ptext20 0D6E                  __ptext12 0ECD  
                __ptext21 0BAD                  __ptext13 09B2                  __ptext22 0B71  
                __ptext14 0B37                  __ptext31 0A6B                  __ptext23 09E8  
                __ptext15 09AA                  __ptext24 09CE                  __ptext16 099E  
                __ptext25 0A43                  __ptext17 0A9A                  __ptext26 0A21  
                __ptext18 0D22                  __ptext27 0E4A                  __ptext19 0F5F  
                __ptext28 09BF                  __ptext29 0A03                  _commands 0320  
        __size_of_sprintf 00DB          __size_of_tolower 000D          __size_of_strcspn 003C  
              strcpy@from 0037        echo_command@param1 00B3             __size_of_atoi 0083  
           __size_of_main 0117           echo_command@val 00B6           ?_ttlout_command 00B3  
            ??_sergetchar 0037              ??_sergetline 0040                  atoi@sign 00A0  
     pulse_command@param1 00B3                  main@argc 00C8                  main@argv 00CA  
  __size_of_power_command 007B              ??_serputchar 0037            ??_echo_command 00B5  
                isdigit@c 0038               pic14e$flags 007E     enable2_command@param1 00B3  
         _enable1_command 0C27        __end_of_sergetchar 09A4                  intlevel1 0000  
         _enable2_command 0C65        __end_of_sergetline 0F5F                 sprintf@ap 00AA  
             ??_pic_setup 0037                 sprintf@sp 00B1                 strchr@chr 0039  
        ___lwmod@dividend 0041                 strchr@ptr 0037                 strcspn@s1 00A2  
               strcspn@s2 003D        __end_of_serputchar 09B2               ??_serputstr 003F  
              _OPTION_REG 0095                  sprintf@c 00B2                  sprintf@f 00A2  
                tolower@c 0037                  strcmp@s1 003B                  strcmp@s2 0037  
         ___lwmod@divisor 003F    __size_of_pulse_command 003E                  strcpy@cp 0039  
                strlen@cp 003B                  strcpy@to 003A           ___lwmod@counter 00A1  
                strcspn@i 00A0                  strtok@s1 0041                  strtok@s2 00A3  
                strspn@s1 00A2                  strspn@s2 003D                  strtok@sp 0056  
           _power_command 0DCF       _power_light_counter 004D           _parse_setup_cmd 0F5F  
