

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Sep  9 12:38:58 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1938
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     8                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  008E                     	;# 
    81  0090                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0095                     	;# 
    86  0096                     	;# 
    87  0097                     	;# 
    88  0098                     	;# 
    89  0099                     	;# 
    90  009A                     	;# 
    91  009B                     	;# 
    92  009B                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  010C                     	;# 
    97  010D                     	;# 
    98  010E                     	;# 
    99  0110                     	;# 
   100  0111                     	;# 
   101  0112                     	;# 
   102  0113                     	;# 
   103  0114                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011A                     	;# 
   110  011B                     	;# 
   111  011D                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0194                     	;# 
   121  0195                     	;# 
   122  0196                     	;# 
   123  0199                     	;# 
   124  019A                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019C                     	;# 
   130  019C                     	;# 
   131  019D                     	;# 
   132  019E                     	;# 
   133  019F                     	;# 
   134  020D                     	;# 
   135  0210                     	;# 
   136  0211                     	;# 
   137  0212                     	;# 
   138  0213                     	;# 
   139  0214                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0216                     	;# 
   143  0217                     	;# 
   144  0291                     	;# 
   145  0291                     	;# 
   146  0292                     	;# 
   147  0293                     	;# 
   148  0294                     	;# 
   149  0295                     	;# 
   150  0295                     	;# 
   151  0296                     	;# 
   152  0298                     	;# 
   153  0298                     	;# 
   154  0299                     	;# 
   155  029A                     	;# 
   156  029B                     	;# 
   157  029C                     	;# 
   158  029C                     	;# 
   159  029D                     	;# 
   160  029E                     	;# 
   161  029F                     	;# 
   162  0311                     	;# 
   163  0311                     	;# 
   164  0312                     	;# 
   165  0313                     	;# 
   166  0314                     	;# 
   167  0315                     	;# 
   168  0315                     	;# 
   169  0316                     	;# 
   170  0318                     	;# 
   171  0318                     	;# 
   172  0319                     	;# 
   173  031A                     	;# 
   174  031C                     	;# 
   175  031C                     	;# 
   176  031D                     	;# 
   177  031E                     	;# 
   178  0394                     	;# 
   179  0395                     	;# 
   180  0396                     	;# 
   181  0415                     	;# 
   182  0416                     	;# 
   183  0417                     	;# 
   184  041C                     	;# 
   185  041D                     	;# 
   186  041E                     	;# 
   187  0791                     	;# 
   188  0792                     	;# 
   189  0793                     	;# 
   190  0794                     	;# 
   191  0795                     	;# 
   192  0798                     	;# 
   193  0799                     	;# 
   194  07A0                     	;# 
   195  07A1                     	;# 
   196  07A3                     	;# 
   197  07A4                     	;# 
   198  07A6                     	;# 
   199  07A7                     	;# 
   200  07A9                     	;# 
   201  07AA                     	;# 
   202  0FE4                     	;# 
   203  0FE5                     	;# 
   204  0FE6                     	;# 
   205  0FE7                     	;# 
   206  0FE8                     	;# 
   207  0FE9                     	;# 
   208  0FEA                     	;# 
   209  0FEB                     	;# 
   210  0FED                     	;# 
   211  0FEE                     	;# 
   212  0FEF                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  008C                     	;# 
   244  008D                     	;# 
   245  008E                     	;# 
   246  0090                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  010C                     	;# 
   262  010D                     	;# 
   263  010E                     	;# 
   264  0110                     	;# 
   265  0111                     	;# 
   266  0112                     	;# 
   267  0113                     	;# 
   268  0114                     	;# 
   269  0115                     	;# 
   270  0116                     	;# 
   271  0117                     	;# 
   272  0118                     	;# 
   273  0119                     	;# 
   274  011A                     	;# 
   275  011B                     	;# 
   276  011D                     	;# 
   277  018C                     	;# 
   278  018D                     	;# 
   279  0191                     	;# 
   280  0191                     	;# 
   281  0192                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0193                     	;# 
   285  0194                     	;# 
   286  0195                     	;# 
   287  0196                     	;# 
   288  0199                     	;# 
   289  019A                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019B                     	;# 
   294  019C                     	;# 
   295  019C                     	;# 
   296  019D                     	;# 
   297  019E                     	;# 
   298  019F                     	;# 
   299  020D                     	;# 
   300  0210                     	;# 
   301  0211                     	;# 
   302  0212                     	;# 
   303  0213                     	;# 
   304  0214                     	;# 
   305  0215                     	;# 
   306  0215                     	;# 
   307  0216                     	;# 
   308  0217                     	;# 
   309  0291                     	;# 
   310  0291                     	;# 
   311  0292                     	;# 
   312  0293                     	;# 
   313  0294                     	;# 
   314  0295                     	;# 
   315  0295                     	;# 
   316  0296                     	;# 
   317  0298                     	;# 
   318  0298                     	;# 
   319  0299                     	;# 
   320  029A                     	;# 
   321  029B                     	;# 
   322  029C                     	;# 
   323  029C                     	;# 
   324  029D                     	;# 
   325  029E                     	;# 
   326  029F                     	;# 
   327  0311                     	;# 
   328  0311                     	;# 
   329  0312                     	;# 
   330  0313                     	;# 
   331  0314                     	;# 
   332  0315                     	;# 
   333  0315                     	;# 
   334  0316                     	;# 
   335  0318                     	;# 
   336  0318                     	;# 
   337  0319                     	;# 
   338  031A                     	;# 
   339  031C                     	;# 
   340  031C                     	;# 
   341  031D                     	;# 
   342  031E                     	;# 
   343  0394                     	;# 
   344  0395                     	;# 
   345  0396                     	;# 
   346  0415                     	;# 
   347  0416                     	;# 
   348  0417                     	;# 
   349  041C                     	;# 
   350  041D                     	;# 
   351  041E                     	;# 
   352  0791                     	;# 
   353  0792                     	;# 
   354  0793                     	;# 
   355  0794                     	;# 
   356  0795                     	;# 
   357  0798                     	;# 
   358  0799                     	;# 
   359  07A0                     	;# 
   360  07A1                     	;# 
   361  07A3                     	;# 
   362  07A4                     	;# 
   363  07A6                     	;# 
   364  07A7                     	;# 
   365  07A9                     	;# 
   366  07AA                     	;# 
   367  0FE4                     	;# 
   368  0FE5                     	;# 
   369  0FE6                     	;# 
   370  0FE7                     	;# 
   371  0FE8                     	;# 
   372  0FE9                     	;# 
   373  0FEA                     	;# 
   374  0FEB                     	;# 
   375  0FED                     	;# 
   376  0FEE                     	;# 
   377  0FEF                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001E                     	;# 
   407  001F                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  0090                     	;# 
   412  0091                     	;# 
   413  0092                     	;# 
   414  0093                     	;# 
   415  0095                     	;# 
   416  0096                     	;# 
   417  0097                     	;# 
   418  0098                     	;# 
   419  0099                     	;# 
   420  009A                     	;# 
   421  009B                     	;# 
   422  009B                     	;# 
   423  009C                     	;# 
   424  009D                     	;# 
   425  009E                     	;# 
   426  010C                     	;# 
   427  010D                     	;# 
   428  010E                     	;# 
   429  0110                     	;# 
   430  0111                     	;# 
   431  0112                     	;# 
   432  0113                     	;# 
   433  0114                     	;# 
   434  0115                     	;# 
   435  0116                     	;# 
   436  0117                     	;# 
   437  0118                     	;# 
   438  0119                     	;# 
   439  011A                     	;# 
   440  011B                     	;# 
   441  011D                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444  0191                     	;# 
   445  0191                     	;# 
   446  0192                     	;# 
   447  0193                     	;# 
   448  0193                     	;# 
   449  0193                     	;# 
   450  0194                     	;# 
   451  0195                     	;# 
   452  0196                     	;# 
   453  0199                     	;# 
   454  019A                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019B                     	;# 
   458  019B                     	;# 
   459  019C                     	;# 
   460  019C                     	;# 
   461  019D                     	;# 
   462  019E                     	;# 
   463  019F                     	;# 
   464  020D                     	;# 
   465  0210                     	;# 
   466  0211                     	;# 
   467  0212                     	;# 
   468  0213                     	;# 
   469  0214                     	;# 
   470  0215                     	;# 
   471  0215                     	;# 
   472  0216                     	;# 
   473  0217                     	;# 
   474  0291                     	;# 
   475  0291                     	;# 
   476  0292                     	;# 
   477  0293                     	;# 
   478  0294                     	;# 
   479  0295                     	;# 
   480  0295                     	;# 
   481  0296                     	;# 
   482  0298                     	;# 
   483  0298                     	;# 
   484  0299                     	;# 
   485  029A                     	;# 
   486  029B                     	;# 
   487  029C                     	;# 
   488  029C                     	;# 
   489  029D                     	;# 
   490  029E                     	;# 
   491  029F                     	;# 
   492  0311                     	;# 
   493  0311                     	;# 
   494  0312                     	;# 
   495  0313                     	;# 
   496  0314                     	;# 
   497  0315                     	;# 
   498  0315                     	;# 
   499  0316                     	;# 
   500  0318                     	;# 
   501  0318                     	;# 
   502  0319                     	;# 
   503  031A                     	;# 
   504  031C                     	;# 
   505  031C                     	;# 
   506  031D                     	;# 
   507  031E                     	;# 
   508  0394                     	;# 
   509  0395                     	;# 
   510  0396                     	;# 
   511  0415                     	;# 
   512  0416                     	;# 
   513  0417                     	;# 
   514  041C                     	;# 
   515  041D                     	;# 
   516  041E                     	;# 
   517  0791                     	;# 
   518  0792                     	;# 
   519  0793                     	;# 
   520  0794                     	;# 
   521  0795                     	;# 
   522  0798                     	;# 
   523  0799                     	;# 
   524  07A0                     	;# 
   525  07A1                     	;# 
   526  07A3                     	;# 
   527  07A4                     	;# 
   528  07A6                     	;# 
   529  07A7                     	;# 
   530  07A9                     	;# 
   531  07AA                     	;# 
   532  0FE4                     	;# 
   533  0FE5                     	;# 
   534  0FE6                     	;# 
   535  0FE7                     	;# 
   536  0FE8                     	;# 
   537  0FE9                     	;# 
   538  0FEA                     	;# 
   539  0FEB                     	;# 
   540  0FED                     	;# 
   541  0FEE                     	;# 
   542  0FEF                     	;# 
   543                           
   544                           	psect	stringtext
   545  0300                     __pstringtext:	
   546  0300                     _commands:	
   547  0300  3482               	retlw	low (STR_14| (0+32768))
   548  0301  3484               	retlw	high (STR_14| (0+32768))
   549  0302  340E               	retlw	low _echo_command
   550  0303  340B               	retlw	high _echo_command
   551  0304  3493               	retlw	low (STR_15| (0+32768))
   552  0305  3484               	retlw	high (STR_15| (0+32768))
   553  0306  3406               	retlw	low _remote_command
   554  0307  340C               	retlw	high _remote_command
   555  0308  346B               	retlw	low (STR_16| (0+32768))
   556  0309  3484               	retlw	high (STR_16| (0+32768))
   557  030A  344C               	retlw	low _enable1_command
   558  030B  340B               	retlw	high _enable1_command
   559  030C  3471               	retlw	low (STR_17| (0+32768))
   560  030D  3484               	retlw	high (STR_17| (0+32768))
   561  030E  348A               	retlw	low _enable2_command
   562  030F  340B               	retlw	high _enable2_command
   563  0310  3477               	retlw	low (STR_18| (0+32768))
   564  0311  3484               	retlw	high (STR_18| (0+32768))
   565  0312  34C8               	retlw	low _pulse_command
   566  0313  340B               	retlw	high _pulse_command
   567  0314  3497               	retlw	low (STR_19| (0+32768))
   568  0315  3484               	retlw	high (STR_19| (0+32768))
   569  0316  34F4               	retlw	low _power_command
   570  0317  340C               	retlw	high _power_command
   571  0318  344C               	retlw	low (STR_20| (0+32768))
   572  0319  3484               	retlw	high (STR_20| (0+32768))
   573  031A  34BE               	retlw	low _ttlout_command
   574  031B  3402               	retlw	high _ttlout_command
   575  031C  3445               	retlw	low (STR_21| (0+32768))
   576  031D  3484               	retlw	high (STR_21| (0+32768))
   577  031E  349D               	retlw	low _status_command
   578  031F  3404               	retlw	high _status_command
   579  0320  343E               	retlw	low (STR_22| (0+32768))
   580  0321  3484               	retlw	high (STR_22| (0+32768))
   581  0322  3430               	retlw	low _errors_command
   582  0323  3407               	retlw	high _errors_command
   583  0324                     __end_of_commands:	
   584  0324                     _AD_a:	
   585  0324  34D8               	retlw	216
   586  0325  34AD               	retlw	173
   587  0326  3405               	retlw	5
   588  0327  3400               	retlw	0
   589  0328  3434               	retlw	52
   590  0329  345A               	retlw	90
   591  032A  3402               	retlw	2
   592  032B  3400               	retlw	0
   593  032C  3416               	retlw	22
   594  032D  34CE               	retlw	206
   595  032E  3401               	retlw	1
   596  032F  3400               	retlw	0
   597  0330  348E               	retlw	142
   598  0331  3485               	retlw	133
   599  0332  3401               	retlw	1
   600  0333  3400               	retlw	0
   601  0334  3435               	retlw	53
   602  0335  3457               	retlw	87
   603  0336  3401               	retlw	1
   604  0337  3400               	retlw	0
   605  0338  3448               	retlw	72
   606  0339  3436               	retlw	54
   607  033A  3401               	retlw	1
   608  033B  3400               	retlw	0
   609  033C  3455               	retlw	85
   610  033D  341D               	retlw	29
   611  033E  3401               	retlw	1
   612  033F  3400               	retlw	0
   613  0340  341F               	retlw	31
   614  0341  340A               	retlw	10
   615  0342  3401               	retlw	1
   616  0343  3400               	retlw	0
   617  0344                     __end_of_AD_a:	
   618  0344                     _AD_x:	
   619  0344  3410               	retlw	16
   620  0345  3400               	retlw	0
   621  0346  3420               	retlw	32
   622  0347  3400               	retlw	0
   623  0348  3430               	retlw	48
   624  0349  3400               	retlw	0
   625  034A  3440               	retlw	64
   626  034B  3400               	retlw	0
   627  034C  3450               	retlw	80
   628  034D  3400               	retlw	0
   629  034E  3460               	retlw	96
   630  034F  3400               	retlw	0
   631  0350  3470               	retlw	112
   632  0351  3400               	retlw	0
   633  0352  347F               	retlw	127
   634  0353  3400               	retlw	0
   635  0354                     __end_of_AD_x:	
   636  0354                     _dpowers:	
   637  0354  3401               	retlw	1
   638  0355  3400               	retlw	0
   639  0356  340A               	retlw	10
   640  0357  3400               	retlw	0
   641  0358  3464               	retlw	100
   642  0359  3400               	retlw	0
   643  035A  34E8               	retlw	232
   644  035B  3403               	retlw	3
   645  035C  3410               	retlw	16
   646  035D  3427               	retlw	39
   647  035E                     __end_of_dpowers:	
   648  035E                     _AD_b:	
   649  035E  3400               	retlw	0
   650  035F  3435               	retlw	53
   651  0360  3447               	retlw	71
   652  0361  3454               	retlw	84
   653  0362  3460               	retlw	96
   654  0363  346A               	retlw	106
   655  0364  3474               	retlw	116
   656  0365  347C               	retlw	124
   657  0366                     __end_of_AD_b:	
   658  0366                     __stringdata:	
   659  0366                     STR_3:	
   660  0366  3445               	retlw	69	;'E'
   661  0367  3452               	retlw	82	;'R'
   662  0368  3452               	retlw	82	;'R'
   663  0369  3434               	retlw	52	;'4'
   664  036A  3420               	retlw	32	;' '
   665  036B  3463               	retlw	99	;'c'
   666  036C  346F               	retlw	111	;'o'
   667  036D  346D               	retlw	109	;'m'
   668  036E  346D               	retlw	109	;'m'
   669  036F  3461               	retlw	97	;'a'
   670  0370  346E               	retlw	110	;'n'
   671  0371  3464               	retlw	100	;'d'
   672  0372  3420               	retlw	32	;' '
   673  0373  346C               	retlw	108	;'l'
   674  0374  3469               	retlw	105	;'i'
   675  0375  346E               	retlw	110	;'n'
   676  0376  3465               	retlw	101	;'e'
   677  0377  3420               	retlw	32	;' '
   678  0378  3462               	retlw	98	;'b'
   679  0379  3475               	retlw	117	;'u'
   680  037A  3466               	retlw	102	;'f'
   681  037B  3466               	retlw	102	;'f'
   682  037C  3465               	retlw	101	;'e'
   683  037D  3472               	retlw	114	;'r'
   684  037E  3420               	retlw	32	;' '
   685  037F  346F               	retlw	111	;'o'
   686  0380  3476               	retlw	118	;'v'
   687  0381  3465               	retlw	101	;'e'
   688  0382  3472               	retlw	114	;'r'
   689  0383  3466               	retlw	102	;'f'
   690  0384  346C               	retlw	108	;'l'
   691  0385  346F               	retlw	111	;'o'
   692  0386  3477               	retlw	119	;'w'
   693  0387  340D               	retlw	13
   694  0388  340A               	retlw	10
   695  0389  3400               	retlw	0
   696  038A                     STR_1:	
   697  038A  340D               	retlw	13
   698  038B  3453               	retlw	83	;'S'
   699  038C  3441               	retlw	65	;'A'
   700  038D  3457               	retlw	87	;'W'
   701  038E  3420               	retlw	32	;' '
   702  038F  344E               	retlw	78	;'N'
   703  0390  3465               	retlw	101	;'e'
   704  0391  3462               	retlw	98	;'b'
   705  0392  3475               	retlw	117	;'u'
   706  0393  346C               	retlw	108	;'l'
   707  0394  3469               	retlw	105	;'i'
   708  0395  347A               	retlw	122	;'z'
   709  0396  3465               	retlw	101	;'e'
   710  0397  3472               	retlw	114	;'r'
   711  0398  3420               	retlw	32	;' '
   712  0399  3452               	retlw	82	;'R'
   713  039A  3446               	retlw	70	;'F'
   714  039B  3420               	retlw	32	;' '
   715  039C  3444               	retlw	68	;'D'
   716  039D  3472               	retlw	114	;'r'
   717  039E  3469               	retlw	105	;'i'
   718  039F  3476               	retlw	118	;'v'
   719  03A0  3465               	retlw	101	;'e'
   720  03A1  3472               	retlw	114	;'r'
   721  03A2  3420               	retlw	32	;' '
   722  03A3  342D               	retlw	45	;'-'
   723  03A4  3420               	retlw	32	;' '
   724  03A5  3431               	retlw	49	;'1'
   725  03A6  342E               	retlw	46	;'.'
   726  03A7  3430               	retlw	48	;'0'
   727  03A8  340D               	retlw	13
   728  03A9  340A               	retlw	10
   729  03AA  3400               	retlw	0
   730  03AB                     STR_11:	
   731  03AB  3445               	retlw	69	;'E'
   732  03AC  3452               	retlw	82	;'R'
   733  03AD  3452               	retlw	82	;'R'
   734  03AE  3433               	retlw	51	;'3'
   735  03AF  3420               	retlw	32	;' '
   736  03B0  3462               	retlw	98	;'b'
   737  03B1  3461               	retlw	97	;'a'
   738  03B2  3464               	retlw	100	;'d'
   739  03B3  3420               	retlw	32	;' '
   740  03B4  3470               	retlw	112	;'p'
   741  03B5  3461               	retlw	97	;'a'
   742  03B6  3472               	retlw	114	;'r'
   743  03B7  3461               	retlw	97	;'a'
   744  03B8  346D               	retlw	109	;'m'
   745  03B9  3465               	retlw	101	;'e'
   746  03BA  3474               	retlw	116	;'t'
   747  03BB  3465               	retlw	101	;'e'
   748  03BC  3472               	retlw	114	;'r'
   749  03BD  3420               	retlw	32	;' '
   750  03BE  3476               	retlw	118	;'v'
   751  03BF  3461               	retlw	97	;'a'
   752  03C0  346C               	retlw	108	;'l'
   753  03C1  3475               	retlw	117	;'u'
   754  03C2  3465               	retlw	101	;'e'
   755  03C3  340D               	retlw	13
   756  03C4  340A               	retlw	10
   757  03C5  3400               	retlw	0
   758  03C6                     STR_9:	
   759  03C6  3445               	retlw	69	;'E'
   760  03C7  3452               	retlw	82	;'R'
   761  03C8  3452               	retlw	82	;'R'
   762  03C9  3432               	retlw	50	;'2'
   763  03CA  3420               	retlw	32	;' '
   764  03CB  3470               	retlw	112	;'p'
   765  03CC  3461               	retlw	97	;'a'
   766  03CD  3472               	retlw	114	;'r'
   767  03CE  3461               	retlw	97	;'a'
   768  03CF  346D               	retlw	109	;'m'
   769  03D0  3465               	retlw	101	;'e'
   770  03D1  3474               	retlw	116	;'t'
   771  03D2  3465               	retlw	101	;'e'
   772  03D3  3472               	retlw	114	;'r'
   773  03D4  3420               	retlw	32	;' '
   774  03D5  346D               	retlw	109	;'m'
   775  03D6  3469               	retlw	105	;'i'
   776  03D7  3473               	retlw	115	;'s'
   777  03D8  3473               	retlw	115	;'s'
   778  03D9  3469               	retlw	105	;'i'
   779  03DA  346E               	retlw	110	;'n'
   780  03DB  3467               	retlw	103	;'g'
   781  03DC  340D               	retlw	13
   782  03DD  340A               	retlw	10
   783  03DE  3400               	retlw	0
   784  03DF                     STR_7:	
   785  03DF  3445               	retlw	69	;'E'
   786  03E0  3452               	retlw	82	;'R'
   787  03E1  3452               	retlw	82	;'R'
   788  03E2  3431               	retlw	49	;'1'
   789  03E3  3420               	retlw	32	;' '
   790  03E4  3462               	retlw	98	;'b'
   791  03E5  3461               	retlw	97	;'a'
   792  03E6  3464               	retlw	100	;'d'
   793  03E7  3420               	retlw	32	;' '
   794  03E8  3463               	retlw	99	;'c'
   795  03E9  346F               	retlw	111	;'o'
   796  03EA  346D               	retlw	109	;'m'
   797  03EB  346D               	retlw	109	;'m'
   798  03EC  3461               	retlw	97	;'a'
   799  03ED  346E               	retlw	110	;'n'
   800  03EE  3464               	retlw	100	;'d'
   801  03EF  3420               	retlw	32	;' '
   802  03F0  3476               	retlw	118	;'v'
   803  03F1  3465               	retlw	101	;'e'
   804  03F2  3472               	retlw	114	;'r'
   805  03F3  3462               	retlw	98	;'b'
   806  03F4  340D               	retlw	13
   807  03F5  340A               	retlw	10
   808  03F6  3400               	retlw	0
   809  03F7                     STR_31:	
   810  03F7  3446               	retlw	70	;'F'
   811  03F8  344C               	retlw	76	;'L'
   812  03F9  3431               	retlw	49	;'1'
   813  03FA  343D               	retlw	61	;'='
   814  03FB  3425               	retlw	37	;'%'
   815  03FC  3464               	retlw	100	;'d'
   816  03FD  3420               	retlw	32	;' '
   817  03FE  3400               	retlw	0
   818  03FF                     STR_27:	
   819  03FF  3445               	retlw	69	;'E'
   820  0400  344E               	retlw	78	;'N'
   821  0401  3431               	retlw	49	;'1'
   822  0402  343D               	retlw	61	;'='
   823  0403  3425               	retlw	37	;'%'
   824  0404  3464               	retlw	100	;'d'
   825  0405  3420               	retlw	32	;' '
   826  0406  3400               	retlw	0
   827  0407                     STR_33:	
   828  0407  344F               	retlw	79	;'O'
   829  0408  3454               	retlw	84	;'T'
   830  0409  3431               	retlw	49	;'1'
   831  040A  343D               	retlw	61	;'='
   832  040B  3425               	retlw	37	;'%'
   833  040C  3464               	retlw	100	;'d'
   834  040D  3420               	retlw	32	;' '
   835  040E  3400               	retlw	0
   836  040F                     STR_32:	
   837  040F  3446               	retlw	70	;'F'
   838  0410  344C               	retlw	76	;'L'
   839  0411  3432               	retlw	50	;'2'
   840  0412  343D               	retlw	61	;'='
   841  0413  3425               	retlw	37	;'%'
   842  0414  3464               	retlw	100	;'d'
   843  0415  3420               	retlw	32	;' '
   844  0416  3400               	retlw	0
   845  0417                     STR_28:	
   846  0417  3445               	retlw	69	;'E'
   847  0418  344E               	retlw	78	;'N'
   848  0419  3432               	retlw	50	;'2'
   849  041A  343D               	retlw	61	;'='
   850  041B  3425               	retlw	37	;'%'
   851  041C  3464               	retlw	100	;'d'
   852  041D  3420               	retlw	32	;' '
   853  041E  3400               	retlw	0
   854  041F                     STR_29:	
   855  041F  3450               	retlw	80	;'P'
   856  0420  3455               	retlw	85	;'U'
   857  0421  344C               	retlw	76	;'L'
   858  0422  343D               	retlw	61	;'='
   859  0423  3425               	retlw	37	;'%'
   860  0424  3464               	retlw	100	;'d'
   861  0425  3420               	retlw	32	;' '
   862  0426  3400               	retlw	0
   863  0427                     STR_26:	
   864  0427  3452               	retlw	82	;'R'
   865  0428  3445               	retlw	69	;'E'
   866  0429  344D               	retlw	77	;'M'
   867  042A  343D               	retlw	61	;'='
   868  042B  3425               	retlw	37	;'%'
   869  042C  3464               	retlw	100	;'d'
   870  042D  3420               	retlw	32	;' '
   871  042E  3400               	retlw	0
   872  042F                     STR_30:	
   873  042F  3450               	retlw	80	;'P'
   874  0430  3457               	retlw	87	;'W'
   875  0431  3452               	retlw	82	;'R'
   876  0432  343D               	retlw	61	;'='
   877  0433  3425               	retlw	37	;'%'
   878  0434  3464               	retlw	100	;'d'
   879  0435  3420               	retlw	32	;' '
   880  0436  3400               	retlw	0
   881  0437                     STR_34:	
   882  0437  344F               	retlw	79	;'O'
   883  0438  3454               	retlw	84	;'T'
   884  0439  3432               	retlw	50	;'2'
   885  043A  343D               	retlw	61	;'='
   886  043B  3425               	retlw	37	;'%'
   887  043C  3464               	retlw	100	;'d'
   888  043D  3400               	retlw	0
   889  043E                     STR_22:	
   890  043E  3465               	retlw	101	;'e'
   891  043F  3472               	retlw	114	;'r'
   892  0440  3472               	retlw	114	;'r'
   893  0441  346F               	retlw	111	;'o'
   894  0442  3472               	retlw	114	;'r'
   895  0443  3473               	retlw	115	;'s'
   896  0444  3400               	retlw	0
   897  0445                     STR_21:	
   898  0445  3473               	retlw	115	;'s'
   899  0446  3474               	retlw	116	;'t'
   900  0447  3461               	retlw	97	;'a'
   901  0448  3474               	retlw	116	;'t'
   902  0449  3475               	retlw	117	;'u'
   903  044A  3473               	retlw	115	;'s'
   904  044B  3400               	retlw	0
   905  044C                     STR_20:	
   906  044C  3474               	retlw	116	;'t'
   907  044D  3474               	retlw	116	;'t'
   908  044E  346C               	retlw	108	;'l'
   909  044F  346F               	retlw	111	;'o'
   910  0450  3475               	retlw	117	;'u'
   911  0451  3474               	retlw	116	;'t'
   912  0452  3400               	retlw	0
   913  0453                     STR_6:	
   914  0453  3445               	retlw	69	;'E'
   915  0454  3452               	retlw	82	;'R'
   916  0455  3452               	retlw	82	;'R'
   917  0456  3431               	retlw	49	;'1'
   918  0457  340D               	retlw	13
   919  0458  3400               	retlw	0
   920  0459                     STR_8:	
   921  0459  3445               	retlw	69	;'E'
   922  045A  3452               	retlw	82	;'R'
   923  045B  3452               	retlw	82	;'R'
   924  045C  3432               	retlw	50	;'2'
   925  045D  340D               	retlw	13
   926  045E  3400               	retlw	0
   927  045F                     STR_10:	
   928  045F  3445               	retlw	69	;'E'
   929  0460  3452               	retlw	82	;'R'
   930  0461  3452               	retlw	82	;'R'
   931  0462  3433               	retlw	51	;'3'
   932  0463  340D               	retlw	13
   933  0464  3400               	retlw	0
   934  0465                     STR_2:	
   935  0465  3445               	retlw	69	;'E'
   936  0466  3452               	retlw	82	;'R'
   937  0467  3452               	retlw	82	;'R'
   938  0468  3434               	retlw	52	;'4'
   939  0469  340D               	retlw	13
   940  046A  3400               	retlw	0
   941  046B                     STR_16:	
   942  046B  3465               	retlw	101	;'e'
   943  046C  346E               	retlw	110	;'n'
   944  046D  3461               	retlw	97	;'a'
   945  046E  3462               	retlw	98	;'b'
   946  046F  3431               	retlw	49	;'1'
   947  0470  3400               	retlw	0
   948  0471                     STR_17:	
   949  0471  3465               	retlw	101	;'e'
   950  0472  346E               	retlw	110	;'n'
   951  0473  3461               	retlw	97	;'a'
   952  0474  3462               	retlw	98	;'b'
   953  0475  3432               	retlw	50	;'2'
   954  0476  3400               	retlw	0
   955  0477                     STR_18:	
   956  0477  3470               	retlw	112	;'p'
   957  0478  3475               	retlw	117	;'u'
   958  0479  346C               	retlw	108	;'l'
   959  047A  3473               	retlw	115	;'s'
   960  047B  3465               	retlw	101	;'e'
   961  047C  3400               	retlw	0
   962  047D                     STR_37:	
   963  047D  3445               	retlw	69	;'E'
   964  047E  3452               	retlw	82	;'R'
   965  047F  3452               	retlw	82	;'R'
   966  0480  3420               	retlw	32	;' '
   967  0481  3400               	retlw	0
   968  0482                     STR_14:	
   969  0482  3465               	retlw	101	;'e'
   970  0483  3463               	retlw	99	;'c'
   971  0484  3468               	retlw	104	;'h'
   972  0485  346F               	retlw	111	;'o'
   973  0486  3400               	retlw	0
   974  0487                     STR_44:	
   975  0487  3408               	retlw	8
   976  0488  3420               	retlw	32	;' '
   977  0489  3408               	retlw	8
   978  048A  3400               	retlw	0
   979  048B                     STR_4:	
   980  048B  344F               	retlw	79	;'O'
   981  048C  344B               	retlw	75	;'K'
   982  048D  340D               	retlw	13
   983  048E  3400               	retlw	0
   984  048F                     STR_25:	
   985  048F  344F               	retlw	79	;'O'
   986  0490  344B               	retlw	75	;'K'
   987  0491  3420               	retlw	32	;' '
   988  0492  3400               	retlw	0
   989  0493                     STR_15:	
   990  0493  3472               	retlw	114	;'r'
   991  0494  3465               	retlw	101	;'e'
   992  0495  346D               	retlw	109	;'m'
   993  0496  3400               	retlw	0
   994  0497                     STR_19:	
   995  0497  3470               	retlw	112	;'p'
   996  0498  3477               	retlw	119	;'w'
   997  0499  3472               	retlw	114	;'r'
   998  049A  3400               	retlw	0
   999  049B                     STR_24:	
  1000  049B  347E               	retlw	126	;'~'
  1001  049C  3400               	retlw	0
  1002  049D                     __end_of__stringdata:	
  1003                           
  1004                           ; #config settings
  1005  0000                     
  1006                           	psect	bitnvCOMMON
  1007  03E8                     __pbitnvCOMMON:	
  1008  03E8                     _enc_A_1:	
  1009  03E8                     	ds	1
  1010  03E9                     _enc_A_2:	
  1011  03E9                     	ds	1
  1012  03EA                     _enc_B_1:	
  1013  03EA                     	ds	1
  1014  03EB                     _enc_B_2:	
  1015  03EB                     	ds	1
  1016  001B                     _PR2	set	27
  1017  001C                     _T2CON	set	28
  1018  005F                     _GIE	set	95
  1019  0063                     _RA3	set	99
  1020  0064                     _RA4	set	100
  1021  0065                     _RA5	set	101
  1022  0066                     _RA6	set	102
  1023  0067                     _RA7	set	103
  1024  0068                     _RB0	set	104
  1025  0069                     _RB1	set	105
  1026  006A                     _RB2	set	106
  1027  006B                     _RB3	set	107
  1028  006C                     _RB4	set	108
  1029  006D                     _RB5	set	109
  1030  0070                     _RC0	set	112
  1031  0071                     _RC1	set	113
  1032  0072                     _RC2	set	114
  1033  0073                     _RC3	set	115
  1034  0074                     _RC4	set	116
  1035  0075                     _RC5	set	117
  1036  008D                     _RCIF	set	141
  1037  005D                     _TMR0IE	set	93
  1038  005A                     _TMR0IF	set	90
  1039  008C                     _TXIF	set	140
  1040  009D                     _ADCON0	set	157
  1041  009E                     _ADCON1	set	158
  1042  009C                     _ADRESH	set	156
  1043  009B                     _ADRESL	set	155
  1044  0095                     _OPTION_REG	set	149
  1045  0099                     _OSCCON	set	153
  1046  008C                     _TRISA	set	140
  1047  008D                     _TRISB	set	141
  1048  008E                     _TRISC	set	142
  1049  04E9                     _nDONE	set	1257
  1050  018C                     _ANSELA	set	396
  1051  018D                     _ANSELB	set	397
  1052  0199                     _RCREG	set	409
  1053  019C                     _SPBRGH	set	412
  1054  019B                     _SPBRGL	set	411
  1055  019A                     _TXREG	set	410
  1056  0CFB                     _BRG16	set	3323
  1057  0CF2                     _BRGH	set	3314
  1058  0CEC                     _CREN	set	3308
  1059  0CEF                     _SPEN	set	3311
  1060  0CF4                     _SYNC	set	3316
  1061  0CF5                     _TXEN	set	3317
  1062  029A                     _CCP2CON	set	666
  1063  0298                     _CCPR2L	set	664
  1064  029E                     _CCPTMRS0	set	670
  1065                           
  1066                           	psect	cinit
  1067  02B1                     start_initialization:	
  1068  02B1                     __initialization:	
  1069                           
  1070                           ; Clear objects allocated to BITCOMMON
  1071  02B1  01FC               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  1072                           
  1073                           ; Clear objects allocated to BITBANK0
  1074  02B2  01D8               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
  1075                           
  1076                           ; Clear objects allocated to BANK0
  1077  02B3  3043               	movlw	low __pbssBANK0
  1078  02B4  0084               	movwf	4
  1079  02B5  3000               	movlw	high __pbssBANK0
  1080  02B6  0085               	movwf	5
  1081  02B7  3015               	movlw	21
  1082  02B8  3188  20F1         	fcall	clear_ram0
  1083  02BA                     end_of_initialization:	
  1084                           ;End of C runtime variable initialization code
  1085                           
  1086  02BA                     __end_of__initialization:	
  1087  02BA  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1088  02BB  0020               	movlb	0
  1089  02BC  3186  2E19         	ljmp	_main	;jump to C main() function
  1090                           
  1091                           	psect	bitbssCOMMON
  1092  03E0                     __pbitbssCOMMON:	
  1093  03E0                     _channel1_enabled:	
  1094  03E0                     	ds	1
  1095  03E1                     _channel2_enabled:	
  1096  03E1                     	ds	1
  1097  03E2                     _echo_enabled:	
  1098  03E2                     	ds	1
  1099  03E3                     _pulse_enabled:	
  1100  03E3                     	ds	1
  1101  03E4                     tc_int@overtemp_1:	
  1102  03E4                     	ds	1
  1103  03E5                     tc_int@overtemp_2:	
  1104  03E5                     	ds	1
  1105                           
  1106                           	psect	bitbssBANK0
  1107  02C0                     __pbitbssBANK0:	
  1108  02C0                     _remote_enabled:	
  1109  02C0                     	ds	1
  1110                           
  1111                           	psect	bssBANK0
  1112  0043                     __pbssBANK0:	
  1113  0043                     tc_int@fet_temp_1:	
  1114  0043                     	ds	4
  1115  0047                     tc_int@fet_temp_2:	
  1116  0047                     	ds	4
  1117  004B                     _enc_position:	
  1118  004B                     	ds	2
  1119  004D                     _power_light_counter:	
  1120  004D                     	ds	2
  1121  004F                     tc_int@fault_timer_1:	
  1122  004F                     	ds	2
  1123  0051                     tc_int@fault_timer_2:	
  1124  0051                     	ds	2
  1125  0053                     tc_int@pulse_timer:	
  1126  0053                     	ds	2
  1127  0055                     _remote_power_level:	
  1128  0055                     	ds	1
  1129  0056                     strtok@sp:	
  1130  0056                     	ds	1
  1131  0057                     tc_int@fet_temp_timer:	
  1132  0057                     	ds	1
  1133                           
  1134                           	psect	clrtext
  1135  08F1                     clear_ram0:	
  1136                           ;	Called with FSR0 containing the base address, and
  1137                           ;	WREG with the size to clear
  1138                           
  1139  08F1  0064               	clrwdt	;clear the watchdog before getting into this loop
  1140  08F2                     clrloop0:	
  1141  08F2  0180               	clrf	0	;clear RAM location pointed to by FSR
  1142  08F3  3101               	addfsr 0,1
  1143  08F4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1144  08F5  28F2               	goto	clrloop0	;have we reached the end yet?
  1145  08F6  3400               	retlw	0	;all done for this memory range, return
  1146                           
  1147                           	psect	cstackBANK1
  1148  00A0                     __pcstackBANK1:	
  1149  00A0                     ??___lwmod:	
  1150  00A0                     atoi@sign:	
  1151                           ; 0 bytes @ 0x0
  1152                           
  1153  00A0                     serputstr@len:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  00A0                     strcspn@i:	
  1157                           ; 2 bytes @ 0x0
  1158                           
  1159  00A0                     strspn@i:	
  1160                           ; 2 bytes @ 0x0
  1161                           
  1162                           
  1163                           ; 2 bytes @ 0x0
  1164  00A0                     	ds	1
  1165  00A1                     ___lwmod@counter:	
  1166  00A1                     atoi@a:	
  1167                           ; 1 bytes @ 0x1
  1168                           
  1169                           
  1170                           ; 2 bytes @ 0x1
  1171  00A1                     	ds	1
  1172  00A2                     ?_sprintf:	
  1173  00A2                     strcspn@s1:	
  1174                           ; 2 bytes @ 0x2
  1175                           
  1176  00A2                     strspn@s1:	
  1177                           ; 1 bytes @ 0x2
  1178                           
  1179  00A2                     serputstr@i:	
  1180                           ; 1 bytes @ 0x2
  1181                           
  1182  00A2                     sprintf@f:	
  1183                           ; 2 bytes @ 0x2
  1184                           
  1185                           
  1186                           ; 2 bytes @ 0x2
  1187  00A2                     	ds	1
  1188  00A3                     ?_strtok:	
  1189  00A3                     atoi@s:	
  1190                           ; 1 bytes @ 0x3
  1191                           
  1192  00A3                     strtok@s2:	
  1193                           ; 1 bytes @ 0x3
  1194                           
  1195                           
  1196                           ; 2 bytes @ 0x3
  1197  00A3                     	ds	1
  1198  00A4                     ?_sergetline:	
  1199  00A4                     sergetline@bsize:	
  1200                           ; 2 bytes @ 0x4
  1201                           
  1202                           
  1203                           ; 2 bytes @ 0x4
  1204  00A4                     	ds	1
  1205  00A5                     ??_strtok:	
  1206                           
  1207                           ; 0 bytes @ 0x5
  1208  00A5                     	ds	1
  1209  00A6                     ??_sprintf:	
  1210  00A6                     sergetline@buf:	
  1211                           ; 0 bytes @ 0x6
  1212                           
  1213                           
  1214                           ; 1 bytes @ 0x6
  1215  00A6                     	ds	1
  1216  00A7                     sergetline@i:	
  1217                           
  1218                           ; 2 bytes @ 0x7
  1219  00A7                     	ds	1
  1220  00A8                     ?_parse_setup_cmd:	
  1221  00A8                     parse_setup_cmd@cmd_descr:	
  1222                           ; 2 bytes @ 0x8
  1223                           
  1224                           
  1225                           ; 1 bytes @ 0x8
  1226  00A8                     	ds	1
  1227  00A9                     sergetline@c:	
  1228                           
  1229                           ; 1 bytes @ 0x9
  1230  00A9                     	ds	1
  1231  00AA                     ??_parse_setup_cmd:	
  1232  00AA                     sprintf@ap:	
  1233                           ; 0 bytes @ 0xA
  1234                           
  1235                           
  1236                           ; 1 bytes @ 0xA
  1237  00AA                     	ds	1
  1238  00AB                     sprintf@flag:	
  1239                           
  1240                           ; 1 bytes @ 0xB
  1241  00AB                     	ds	1
  1242  00AC                     sprintf@prec:	
  1243                           
  1244                           ; 1 bytes @ 0xC
  1245  00AC                     	ds	1
  1246  00AD                     sprintf@_val:	
  1247                           
  1248                           ; 4 bytes @ 0xD
  1249  00AD                     	ds	3
  1250  00B0                     parse_setup_cmd@cbuf:	
  1251                           
  1252                           ; 10 bytes @ 0x10
  1253  00B0                     	ds	1
  1254  00B1                     sprintf@c:	
  1255                           
  1256                           ; 1 bytes @ 0x11
  1257  00B1                     	ds	1
  1258  00B2                     sprintf@sp:	
  1259                           
  1260                           ; 1 bytes @ 0x12
  1261  00B2                     	ds	1
  1262  00B3                     ?_echo_command:	
  1263  00B3                     ?_remote_command:	
  1264                           ; 2 bytes @ 0x13
  1265                           
  1266  00B3                     ?_enable1_command:	
  1267                           ; 2 bytes @ 0x13
  1268                           
  1269  00B3                     ?_enable2_command:	
  1270                           ; 2 bytes @ 0x13
  1271                           
  1272  00B3                     ?_pulse_command:	
  1273                           ; 2 bytes @ 0x13
  1274                           
  1275  00B3                     ?_power_command:	
  1276                           ; 2 bytes @ 0x13
  1277                           
  1278  00B3                     ?_ttlout_command:	
  1279                           ; 2 bytes @ 0x13
  1280                           
  1281  00B3                     ?_status_command:	
  1282                           ; 2 bytes @ 0x13
  1283                           
  1284  00B3                     ?_errors_command:	
  1285                           ; 2 bytes @ 0x13
  1286                           
  1287  00B3                     echo_command@param1:	
  1288                           ; 2 bytes @ 0x13
  1289                           
  1290  00B3                     remote_command@param1:	
  1291                           ; 1 bytes @ 0x13
  1292                           
  1293  00B3                     enable1_command@param1:	
  1294                           ; 1 bytes @ 0x13
  1295                           
  1296  00B3                     enable2_command@param1:	
  1297                           ; 1 bytes @ 0x13
  1298                           
  1299  00B3                     pulse_command@param1:	
  1300                           ; 1 bytes @ 0x13
  1301                           
  1302  00B3                     power_command@param1:	
  1303                           ; 1 bytes @ 0x13
  1304                           
  1305  00B3                     ttlout_command@param1:	
  1306                           ; 1 bytes @ 0x13
  1307                           
  1308  00B3                     status_command@param1:	
  1309                           ; 1 bytes @ 0x13
  1310                           
  1311  00B3                     errors_command@param1:	
  1312                           ; 1 bytes @ 0x13
  1313                           
  1314                           
  1315                           ; 1 bytes @ 0x13
  1316  00B3                     	ds	2
  1317  00B5                     ??_echo_command:	
  1318  00B5                     ??_remote_command:	
  1319                           ; 0 bytes @ 0x15
  1320                           
  1321  00B5                     ??_enable1_command:	
  1322                           ; 0 bytes @ 0x15
  1323                           
  1324  00B5                     ??_enable2_command:	
  1325                           ; 0 bytes @ 0x15
  1326                           
  1327  00B5                     ??_pulse_command:	
  1328                           ; 0 bytes @ 0x15
  1329                           
  1330  00B5                     ??_power_command:	
  1331                           ; 0 bytes @ 0x15
  1332                           
  1333  00B5                     ??_ttlout_command:	
  1334                           ; 0 bytes @ 0x15
  1335                           
  1336  00B5                     ??_status_command:	
  1337                           ; 0 bytes @ 0x15
  1338                           
  1339  00B5                     ??_errors_command:	
  1340                           ; 0 bytes @ 0x15
  1341                           
  1342                           
  1343                           ; 0 bytes @ 0x15
  1344  00B5                     	ds	1
  1345  00B6                     echo_command@val:	
  1346  00B6                     remote_command@val:	
  1347                           ; 2 bytes @ 0x16
  1348                           
  1349  00B6                     enable1_command@val:	
  1350                           ; 2 bytes @ 0x16
  1351                           
  1352  00B6                     enable2_command@val:	
  1353                           ; 2 bytes @ 0x16
  1354                           
  1355  00B6                     pulse_command@val:	
  1356                           ; 2 bytes @ 0x16
  1357                           
  1358  00B6                     ttlout_command@val:	
  1359                           ; 2 bytes @ 0x16
  1360                           
  1361                           
  1362                           ; 2 bytes @ 0x16
  1363  00B6                     	ds	1
  1364  00B7                     errors_command@buf:	
  1365                           
  1366                           ; 10 bytes @ 0x17
  1367  00B7                     	ds	3
  1368  00BA                     parse_setup_cmd@num_cmds:	
  1369  00BA                     status_command@buf:	
  1370                           ; 2 bytes @ 0x1A
  1371                           
  1372                           
  1373                           ; 10 bytes @ 0x1A
  1374  00BA                     	ds	1
  1375  00BB                     power_command@temp:	
  1376                           
  1377                           ; 4 bytes @ 0x1B
  1378  00BB                     	ds	1
  1379  00BC                     parse_setup_cmd@buf:	
  1380                           
  1381                           ; 1 bytes @ 0x1C
  1382  00BC                     	ds	1
  1383  00BD                     parse_setup_cmd@i:	
  1384                           
  1385                           ; 2 bytes @ 0x1D
  1386  00BD                     	ds	2
  1387  00BF                     parse_setup_cmd@tokptr:	
  1388  00BF                     power_command@val:	
  1389                           ; 1 bytes @ 0x1F
  1390                           
  1391                           
  1392                           ; 2 bytes @ 0x1F
  1393  00BF                     	ds	5
  1394  00C4                     status_command@temp:	
  1395                           
  1396                           ; 4 bytes @ 0x24
  1397  00C4                     	ds	4
  1398  00C8                     ?_main:	
  1399  00C8                     main@argc:	
  1400                           ; 2 bytes @ 0x28
  1401                           
  1402                           
  1403                           ; 2 bytes @ 0x28
  1404  00C8                     	ds	2
  1405  00CA                     main@argv:	
  1406                           
  1407                           ; 2 bytes @ 0x2A
  1408  00CA                     	ds	2
  1409  00CC                     ??_main:	
  1410                           
  1411                           ; 0 bytes @ 0x2C
  1412  00CC                     	ds	1
  1413  00CD                     main@j:	
  1414                           
  1415                           ; 4 bytes @ 0x2D
  1416  00CD                     	ds	4
  1417  00D1                     main@cmdbuf:	
  1418                           
  1419                           ; 10 bytes @ 0x31
  1420  00D1                     	ds	10
  1421  00DB                     main@i:	
  1422                           
  1423                           ; 4 bytes @ 0x3B
  1424  00DB                     	ds	4
  1425  00DF                     main@status:	
  1426                           
  1427                           ; 2 bytes @ 0x3F
  1428  00DF                     	ds	2
  1429  00E1                     main@cmd_descr:	
  1430                           
  1431                           ; 12 bytes @ 0x41
  1432  00E1                     	ds	12
  1433                           
  1434                           	psect	cstackCOMMON
  1435  0070                     __pcstackCOMMON:	
  1436  0070                     ?_pic_setup:	
  1437  0070                     ?_isdigit:	
  1438                           ; 0 bytes @ 0x0
  1439                           
  1440  0070                     ?_tc_int:	
  1441                           ; 1 bit 
  1442                           
  1443  0070                     ?_serputchar:	
  1444                           ; 0 bytes @ 0x0
  1445                           
  1446  0070                     ?_tolower:	
  1447                           ; 0 bytes @ 0x0
  1448                           
  1449  0070                     ?_sergetchar:	
  1450                           ; 1 bytes @ 0x0
  1451                           
  1452  0070                     ?i1___lmul:	
  1453                           ; 1 bytes @ 0x0
  1454                           
  1455  0070                     i1___lmul@multiplier:	
  1456                           ; 4 bytes @ 0x0
  1457                           
  1458                           
  1459                           ; 4 bytes @ 0x0
  1460  0070                     	ds	4
  1461  0074                     i1___lmul@multiplicand:	
  1462                           
  1463                           ; 4 bytes @ 0x4
  1464  0074                     	ds	4
  1465  0078                     ??i1___lmul:	
  1466  0078                     i1___lmul@product:	
  1467                           ; 0 bytes @ 0x8
  1468                           
  1469                           
  1470                           ; 4 bytes @ 0x8
  1471  0078                     	ds	4
  1472                           
  1473                           	psect	cstackBANK0
  1474  0020                     __pcstackBANK0:	
  1475  0020                     ??_tc_int:	
  1476                           
  1477                           ; 0 bytes @ 0x0
  1478  0020                     	ds	8
  1479  0028                     _tc_int$70:	
  1480                           
  1481                           ; 1 bytes @ 0x8
  1482  0028                     	ds	1
  1483  0029                     _tc_int$71:	
  1484                           
  1485                           ; 1 bytes @ 0x9
  1486  0029                     	ds	1
  1487  002A                     _tc_int$72:	
  1488                           
  1489                           ; 1 bytes @ 0xA
  1490  002A                     	ds	1
  1491  002B                     _tc_int$73:	
  1492                           
  1493                           ; 1 bytes @ 0xB
  1494  002B                     	ds	1
  1495  002C                     _tc_int$74:	
  1496                           
  1497                           ; 1 bytes @ 0xC
  1498  002C                     	ds	1
  1499  002D                     _tc_int$75:	
  1500                           
  1501                           ; 1 bytes @ 0xD
  1502  002D                     	ds	1
  1503  002E                     tc_int@pwm:	
  1504                           
  1505                           ; 2 bytes @ 0xE
  1506  002E                     	ds	2
  1507  0030                     tc_int@AD_val:	
  1508                           
  1509                           ; 2 bytes @ 0x10
  1510  0030                     	ds	2
  1511  0032                     tc_int@slewed_period:	
  1512                           
  1513                           ; 2 bytes @ 0x12
  1514  0032                     	ds	2
  1515  0034                     tc_int@i:	
  1516                           
  1517                           ; 1 bytes @ 0x14
  1518  0034                     	ds	1
  1519  0035                     tc_int@period:	
  1520                           
  1521                           ; 2 bytes @ 0x15
  1522  0035                     	ds	2
  1523  0037                     ??_pic_setup:	
  1524  0037                     ??_tolower:	
  1525                           ; 0 bytes @ 0x17
  1526                           
  1527  0037                     ??_isdigit:	
  1528                           ; 0 bytes @ 0x17
  1529                           
  1530  0037                     ??_serputchar:	
  1531                           ; 0 bytes @ 0x17
  1532                           
  1533  0037                     ??_sergetchar:	
  1534                           ; 0 bytes @ 0x17
  1535                           
  1536  0037                     ?_strcpy:	
  1537                           ; 0 bytes @ 0x17
  1538                           
  1539  0037                     ?_strlen:	
  1540                           ; 1 bytes @ 0x17
  1541                           
  1542  0037                     ?_strcmp:	
  1543                           ; 2 bytes @ 0x17
  1544                           
  1545  0037                     ?_strchr:	
  1546                           ; 2 bytes @ 0x17
  1547                           
  1548  0037                     ?___wmul:	
  1549                           ; 2 bytes @ 0x17
  1550                           
  1551  0037                     ?___lwdiv:	
  1552                           ; 2 bytes @ 0x17
  1553                           
  1554  0037                     ?___lmul:	
  1555                           ; 2 bytes @ 0x17
  1556                           
  1557  0037                     serputchar@c:	
  1558                           ; 4 bytes @ 0x17
  1559                           
  1560  0037                     _isdigit$598:	
  1561                           ; 1 bytes @ 0x17
  1562                           
  1563  0037                     strcpy@from:	
  1564                           ; 1 bytes @ 0x17
  1565                           
  1566  0037                     tolower@c:	
  1567                           ; 1 bytes @ 0x17
  1568                           
  1569  0037                     ___wmul@multiplier:	
  1570                           ; 1 bytes @ 0x17
  1571                           
  1572  0037                     ___lwdiv@divisor:	
  1573                           ; 2 bytes @ 0x17
  1574                           
  1575  0037                     strcmp@s2:	
  1576                           ; 2 bytes @ 0x17
  1577                           
  1578  0037                     strlen@s:	
  1579                           ; 2 bytes @ 0x17
  1580                           
  1581  0037                     strchr@ptr:	
  1582                           ; 2 bytes @ 0x17
  1583                           
  1584  0037                     ___lmul@multiplier:	
  1585                           ; 2 bytes @ 0x17
  1586                           
  1587                           
  1588                           ; 4 bytes @ 0x17
  1589  0037                     	ds	1
  1590  0038                     ??_strcpy:	
  1591  0038                     isdigit@c:	
  1592                           ; 0 bytes @ 0x18
  1593                           
  1594                           
  1595                           ; 1 bytes @ 0x18
  1596  0038                     	ds	1
  1597  0039                     ??_strlen:	
  1598  0039                     ??_strcmp:	
  1599                           ; 0 bytes @ 0x19
  1600                           
  1601  0039                     strcpy@cp:	
  1602                           ; 0 bytes @ 0x19
  1603                           
  1604  0039                     ___wmul@multiplicand:	
  1605                           ; 1 bytes @ 0x19
  1606                           
  1607  0039                     ___lwdiv@dividend:	
  1608                           ; 2 bytes @ 0x19
  1609                           
  1610  0039                     strchr@chr:	
  1611                           ; 2 bytes @ 0x19
  1612                           
  1613                           
  1614                           ; 2 bytes @ 0x19
  1615  0039                     	ds	1
  1616  003A                     strcmp@r:	
  1617  003A                     strcpy@to:	
  1618                           ; 1 bytes @ 0x1A
  1619                           
  1620                           
  1621                           ; 1 bytes @ 0x1A
  1622  003A                     	ds	1
  1623  003B                     ??_strchr:	
  1624  003B                     ??___wmul:	
  1625                           ; 0 bytes @ 0x1B
  1626                           
  1627  003B                     ??___lwdiv:	
  1628                           ; 0 bytes @ 0x1B
  1629                           
  1630  003B                     strcmp@s1:	
  1631                           ; 0 bytes @ 0x1B
  1632                           
  1633  003B                     ___wmul@product:	
  1634                           ; 1 bytes @ 0x1B
  1635                           
  1636  003B                     strlen@cp:	
  1637                           ; 2 bytes @ 0x1B
  1638                           
  1639  003B                     ___lmul@multiplicand:	
  1640                           ; 2 bytes @ 0x1B
  1641                           
  1642                           
  1643                           ; 4 bytes @ 0x1B
  1644  003B                     	ds	1
  1645  003C                     ___lwdiv@counter:	
  1646                           
  1647                           ; 1 bytes @ 0x1C
  1648  003C                     	ds	1
  1649  003D                     ?_serputstr:	
  1650  003D                     ?_atoi:	
  1651                           ; 0 bytes @ 0x1D
  1652                           
  1653  003D                     ?_strspn:	
  1654                           ; 2 bytes @ 0x1D
  1655                           
  1656  003D                     ?_strcspn:	
  1657                           ; 2 bytes @ 0x1D
  1658                           
  1659  003D                     serputstr@line:	
  1660                           ; 2 bytes @ 0x1D
  1661                           
  1662  003D                     ___lwdiv@quotient:	
  1663                           ; 2 bytes @ 0x1D
  1664                           
  1665  003D                     strcspn@s2:	
  1666                           ; 2 bytes @ 0x1D
  1667                           
  1668  003D                     strspn@s2:	
  1669                           ; 2 bytes @ 0x1D
  1670                           
  1671                           
  1672                           ; 2 bytes @ 0x1D
  1673  003D                     	ds	2
  1674  003F                     ??_serputstr:	
  1675  003F                     ??_atoi:	
  1676                           ; 0 bytes @ 0x1F
  1677                           
  1678  003F                     ??_strspn:	
  1679                           ; 0 bytes @ 0x1F
  1680                           
  1681  003F                     ??_strcspn:	
  1682                           ; 0 bytes @ 0x1F
  1683                           
  1684  003F                     ??___lmul:	
  1685                           ; 0 bytes @ 0x1F
  1686                           
  1687  003F                     ?___lwmod:	
  1688                           ; 0 bytes @ 0x1F
  1689                           
  1690  003F                     ___lwmod@divisor:	
  1691                           ; 2 bytes @ 0x1F
  1692                           
  1693  003F                     ___lmul@product:	
  1694                           ; 2 bytes @ 0x1F
  1695                           
  1696                           
  1697                           ; 4 bytes @ 0x1F
  1698  003F                     	ds	1
  1699  0040                     ??_sergetline:	
  1700                           
  1701                           ; 0 bytes @ 0x20
  1702  0040                     	ds	1
  1703  0041                     strtok@s1:	
  1704  0041                     ___lwmod@dividend:	
  1705                           ; 1 bytes @ 0x21
  1706                           
  1707                           
  1708                           ; 2 bytes @ 0x21
  1709  0041                     	ds	2
  1710                           
  1711                           	psect	maintext
  1712  0619                     __pmaintext:	
  1713 ;;
  1714 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1715 ;;
  1716 ;; *************** function _main *****************
  1717 ;; Defined at:
  1718 ;;		line 35 in file "Main.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  argc            2   40[BANK1 ] int 
  1721 ;;  argv            2   42[BANK1 ] PTR PTR unsigned char 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  temp           20    0        unsigned char [20]
  1724 ;;  cmd_descr      12   65[BANK1 ] struct command
  1725 ;;  cmdbuf         10   49[BANK1 ] unsigned char [10]
  1726 ;;  i               4   59[BANK1 ] long 
  1727 ;;  j               4   45[BANK1 ] long 
  1728 ;;  status          2   63[BANK1 ] int 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  2   40[BANK1 ] int 
  1731 ;; Registers used:
  1732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 17F/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1738 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1739 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  1740 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1741 ;;      Totals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0
  1742 ;;Total ram usage:       37 bytes
  1743 ;; Hardware stack levels required when called:    6
  1744 ;; This function calls:
  1745 ;;		___lmul
  1746 ;;		_echo_command
  1747 ;;		_enable1_command
  1748 ;;		_enable2_command
  1749 ;;		_errors_command
  1750 ;;		_parse_setup_cmd
  1751 ;;		_pic_setup
  1752 ;;		_power_command
  1753 ;;		_pulse_command
  1754 ;;		_remote_command
  1755 ;;		_sergetline
  1756 ;;		_serputstr
  1757 ;;		_status_command
  1758 ;;		_strlen
  1759 ;;		_ttlout_command
  1760 ;; This function is called by:
  1761 ;;		Startup code after reset
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function _main
  1767  0619                     _main:	
  1768                           
  1769                           ;Main.c: 36: int status;
  1770                           ;Main.c: 37: long int i, j;
  1771                           ;Main.c: 38: unsigned char cmdbuf[10], temp[20];
  1772                           ;Main.c: 39: CMD_DESRCIPTION cmd_descr;
  1773                           ;Main.c: 42: pic_setup();
  1774                           
  1775                           ;incstack = 0
  1776                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1777  0619  318C  2447  3186   	fcall	_pic_setup
  1778                           
  1779                           ;Main.c: 45: for (i = 0; i < 10000; ++i) {
  1780  061C  3000               	movlw	0
  1781  061D  0021               	movlb	1	; select bank1
  1782  061E  00DE               	movwf	(main@i+3)^(0+128)
  1783  061F  3000               	movlw	0
  1784  0620  00DD               	movwf	(main@i+2)^(0+128)
  1785  0621  3000               	movlw	0
  1786  0622  00DC               	movwf	(main@i+1)^(0+128)
  1787  0623  3000               	movlw	0
  1788  0624  00DB               	movwf	main@i^(0+128)
  1789  0625  085E               	movf	(main@i+3)^(0+128),w
  1790  0626  3A80               	xorlw	128
  1791  0627  00CC               	movwf	??_main^(0+128)
  1792  0628  3000               	movlw	0
  1793  0629  3A80               	xorlw	128
  1794  062A  024C               	subwf	??_main^(0+128),w
  1795  062B  1D03               	skipz
  1796  062C  2E37               	goto	u6603
  1797  062D  3000               	movlw	0
  1798  062E  025D               	subwf	(main@i+2)^(0+128),w
  1799  062F  1D03               	skipz
  1800  0630  2E37               	goto	u6603
  1801  0631  3027               	movlw	39
  1802  0632  025C               	subwf	(main@i+1)^(0+128),w
  1803  0633  1D03               	skipz
  1804  0634  2E37               	goto	u6603
  1805  0635  3010               	movlw	16
  1806  0636  025B               	subwf	main@i^(0+128),w
  1807  0637                     u6603:	
  1808  0637  1803               	btfsc	3,0
  1809  0638  2E87               	goto	l4412
  1810  0639                     l4406:	
  1811                           
  1812                           ;Main.c: 46: j = i * i;
  1813  0639  085E               	movf	(main@i+3)^(0+128),w
  1814  063A  0020               	movlb	0	; select bank0
  1815  063B  00BA               	movwf	___lmul@multiplier+3
  1816  063C  0021               	movlb	1	; select bank1
  1817  063D  085D               	movf	(main@i+2)^(0+128),w
  1818  063E  0020               	movlb	0	; select bank0
  1819  063F  00B9               	movwf	___lmul@multiplier+2
  1820  0640  0021               	movlb	1	; select bank1
  1821  0641  085C               	movf	(main@i+1)^(0+128),w
  1822  0642  0020               	movlb	0	; select bank0
  1823  0643  00B8               	movwf	___lmul@multiplier+1
  1824  0644  0021               	movlb	1	; select bank1
  1825  0645  085B               	movf	main@i^(0+128),w
  1826  0646  0020               	movlb	0	; select bank0
  1827  0647  00B7               	movwf	___lmul@multiplier
  1828  0648  0021               	movlb	1	; select bank1
  1829  0649  085E               	movf	(main@i+3)^(0+128),w
  1830  064A  0020               	movlb	0	; select bank0
  1831  064B  00BE               	movwf	___lmul@multiplicand+3
  1832  064C  0021               	movlb	1	; select bank1
  1833  064D  085D               	movf	(main@i+2)^(0+128),w
  1834  064E  0020               	movlb	0	; select bank0
  1835  064F  00BD               	movwf	___lmul@multiplicand+2
  1836  0650  0021               	movlb	1	; select bank1
  1837  0651  085C               	movf	(main@i+1)^(0+128),w
  1838  0652  0020               	movlb	0	; select bank0
  1839  0653  00BC               	movwf	___lmul@multiplicand+1
  1840  0654  0021               	movlb	1	; select bank1
  1841  0655  085B               	movf	main@i^(0+128),w
  1842  0656  0020               	movlb	0	; select bank0
  1843  0657  00BB               	movwf	___lmul@multiplicand
  1844  0658  3189  21BF  3186   	fcall	___lmul
  1845  065B  0020               	movlb	0	; select bank0
  1846  065C  083A               	movf	?___lmul+3,w
  1847  065D  0021               	movlb	1	; select bank1
  1848  065E  00D0               	movwf	(main@j+3)^(0+128)
  1849  065F  0020               	movlb	0	; select bank0
  1850  0660  0839               	movf	?___lmul+2,w
  1851  0661  0021               	movlb	1	; select bank1
  1852  0662  00CF               	movwf	(main@j+2)^(0+128)
  1853  0663  0020               	movlb	0	; select bank0
  1854  0664  0838               	movf	?___lmul+1,w
  1855  0665  0021               	movlb	1	; select bank1
  1856  0666  00CE               	movwf	(main@j+1)^(0+128)
  1857  0667  0020               	movlb	0	; select bank0
  1858  0668  0837               	movf	?___lmul,w
  1859  0669  0021               	movlb	1	; select bank1
  1860  066A  00CD               	movwf	main@j^(0+128)
  1861  066B  3001               	movlw	1
  1862  066C  07DB               	addwf	main@i^(0+128),f
  1863  066D  3000               	movlw	0
  1864  066E  3DDC               	addwfc	(main@i+1)^(0+128),f
  1865  066F  3000               	movlw	0
  1866  0670  3DDD               	addwfc	(main@i+2)^(0+128),f
  1867  0671  3000               	movlw	0
  1868  0672  3DDE               	addwfc	(main@i+3)^(0+128),f
  1869  0673  085E               	movf	(main@i+3)^(0+128),w
  1870  0674  3A80               	xorlw	128
  1871  0675  00CC               	movwf	??_main^(0+128)
  1872  0676  3000               	movlw	0
  1873  0677  3A80               	xorlw	128
  1874  0678  024C               	subwf	??_main^(0+128),w
  1875  0679  1D03               	skipz
  1876  067A  2E85               	goto	u6613
  1877  067B  3000               	movlw	0
  1878  067C  025D               	subwf	(main@i+2)^(0+128),w
  1879  067D  1D03               	skipz
  1880  067E  2E85               	goto	u6613
  1881  067F  3027               	movlw	39
  1882  0680  025C               	subwf	(main@i+1)^(0+128),w
  1883  0681  1D03               	skipz
  1884  0682  2E85               	goto	u6613
  1885  0683  3010               	movlw	16
  1886  0684  025B               	subwf	main@i^(0+128),w
  1887  0685                     u6613:	
  1888  0685  1C03               	skipc
  1889  0686  2E39               	goto	l4406
  1890  0687                     l4412:	
  1891                           
  1892                           ;Main.c: 47: }
  1893                           ;Main.c: 49: serputstr("\rSAW Nebulizer RF Driver - " "1.0" "\r\n");
  1894  0687  308A               	movlw	low (STR_1| (0+32768))
  1895  0688  0020               	movlb	0	; select bank0
  1896  0689  00BD               	movwf	serputstr@line
  1897  068A  3083               	movlw	high (STR_1| (0+32768))
  1898  068B  2EBD               	goto	L2
  1899  068C                     l4418:	
  1900                           
  1901                           ;Main.c: 56: if (!echo_enabled) {
  1902  068C  197C               	btfsc	_echo_enabled/(0+8),_echo_enabled& (0+7)
  1903  068D  2E93               	goto	l4422
  1904                           
  1905                           ;Main.c: 57: serputstr("ERR4\r");
  1906  068E  3065               	movlw	low (STR_2| (0+32768))
  1907  068F  0020               	movlb	0	; select bank0
  1908  0690  00BD               	movwf	serputstr@line
  1909  0691  3084               	movlw	high (STR_2| (0+32768))
  1910  0692  2EBD               	goto	L2
  1911  0693                     l4422:	
  1912                           ;Main.c: 58: } else {
  1913                           
  1914                           
  1915                           ;Main.c: 59: serputstr("ERR4 command line buffer overflow\r\n");
  1916  0693  3066               	movlw	low (STR_3| (0+32768))
  1917  0694  0020               	movlb	0	; select bank0
  1918  0695  00BD               	movwf	serputstr@line
  1919  0696  3083               	movlw	high (STR_3| (0+32768))
  1920  0697  2EBD               	goto	L2
  1921  0698                     l4426:	
  1922                           ;Main.c: 60: }
  1923                           ;Main.c: 61: continue;
  1924                           
  1925                           
  1926                           ;Main.c: 65: serputstr("OK\r");
  1927  0698  308B               	movlw	low (STR_4| (0+32768))
  1928  0699  2F23               	goto	L4
  1929  069A                     l4436:	
  1930                           ;Main.c: 67: continue;
  1931                           
  1932                           ;Main.c: 66: if (echo_enabled) serputstr("\n");
  1933                           
  1934                           
  1935                           ;Main.c: 73: if (!echo_enabled) {
  1936  069A  197C               	btfsc	_echo_enabled/(0+8),_echo_enabled& (0+7)
  1937  069B  2EA1               	goto	l4440
  1938                           
  1939                           ;Main.c: 74: serputstr("ERR1\r");
  1940  069C  3053               	movlw	low (STR_6| (0+32768))
  1941  069D  0020               	movlb	0	; select bank0
  1942  069E  00BD               	movwf	serputstr@line
  1943  069F  3084               	movlw	high (STR_6| (0+32768))
  1944  06A0  2EBD               	goto	L2
  1945  06A1                     l4440:	
  1946                           ;Main.c: 75: } else {
  1947                           
  1948                           
  1949                           ;Main.c: 76: serputstr("ERR1 bad command verb\r\n");
  1950  06A1  30DF               	movlw	low (STR_7| (0+32768))
  1951  06A2  0020               	movlb	0	; select bank0
  1952  06A3  00BD               	movwf	serputstr@line
  1953  06A4  3083               	movlw	high (STR_7| (0+32768))
  1954  06A5  2EBD               	goto	L2
  1955  06A6                     l4446:	
  1956                           ;Main.c: 77: }
  1957                           ;Main.c: 78: continue;
  1958                           
  1959                           
  1960                           ;Main.c: 84: if (!echo_enabled) {
  1961  06A6  197C               	btfsc	_echo_enabled/(0+8),_echo_enabled& (0+7)
  1962  06A7  2EAD               	goto	l4450
  1963                           
  1964                           ;Main.c: 85: serputstr("ERR2\r");
  1965  06A8  3059               	movlw	low (STR_8| (0+32768))
  1966  06A9  0020               	movlb	0	; select bank0
  1967  06AA  00BD               	movwf	serputstr@line
  1968  06AB  3084               	movlw	high (STR_8| (0+32768))
  1969  06AC  2EBD               	goto	L2
  1970  06AD                     l4450:	
  1971                           ;Main.c: 86: } else {
  1972                           
  1973                           
  1974                           ;Main.c: 87: serputstr("ERR2 parameter missing\r\n");
  1975  06AD  30C6               	movlw	low (STR_9| (0+32768))
  1976  06AE  0020               	movlb	0	; select bank0
  1977  06AF  00BD               	movwf	serputstr@line
  1978  06B0  3083               	movlw	high (STR_9| (0+32768))
  1979  06B1  2EBD               	goto	L2
  1980  06B2                     l4456:	
  1981                           ;Main.c: 91: } else if (status == -2) {
  1982                           
  1983                           ;Main.c: 88: }
  1984                           ;Main.c: 89: continue;
  1985                           
  1986                           
  1987                           ;Main.c: 92: if (!echo_enabled) {
  1988  06B2  197C               	btfsc	_echo_enabled/(0+8),_echo_enabled& (0+7)
  1989  06B3  2EB9               	goto	l4460
  1990                           
  1991                           ;Main.c: 93: serputstr("ERR3\r");
  1992  06B4  305F               	movlw	low (STR_10| (0+32768))
  1993  06B5  0020               	movlb	0	; select bank0
  1994  06B6  00BD               	movwf	serputstr@line
  1995  06B7  3084               	movlw	high (STR_10| (0+32768))
  1996  06B8  2EBD               	goto	L2
  1997  06B9                     l4460:	
  1998                           ;Main.c: 94: } else {
  1999                           
  2000                           
  2001                           ;Main.c: 95: serputstr("ERR3 bad parameter value\r\n");
  2002  06B9  30AB               	movlw	low (STR_11| (0+32768))
  2003  06BA  0020               	movlb	0	; select bank0
  2004  06BB  00BD               	movwf	serputstr@line
  2005  06BC  3083               	movlw	high (STR_11| (0+32768))
  2006  06BD                     L2:	
  2007  06BD  00BE               	movwf	serputstr@line+1
  2008  06BE  318A  225C  3186   	fcall	_serputstr
  2009  06C1                     l4414:	
  2010                           ;Main.c: 53: while(1) {
  2011                           
  2012                           ;Main.c: 102: } else {
  2013                           
  2014                           ;Main.c: 100: continue;
  2015                           
  2016                           ;Main.c: 99: } else if (status == -3) {
  2017                           
  2018                           ;Main.c: 96: }
  2019                           ;Main.c: 97: continue;
  2020                           
  2021                           
  2022                           ;Main.c: 54: status = sergetline(cmdbuf, sizeof(cmdbuf));
  2023  06C1  300A               	movlw	10
  2024  06C2  0021               	movlb	1	; select bank1
  2025  06C3  00A4               	movwf	sergetline@bsize^(0+128)
  2026  06C4  3000               	movlw	0
  2027  06C5  00A5               	movwf	(sergetline@bsize^(0+128)+1)
  2028  06C6  30D1               	movlw	main@cmdbuf& (0+255)
  2029  06C7  318D  25F2  3186   	fcall	_sergetline
  2030  06CA  0021               	movlb	1	; select bank1
  2031  06CB  0825               	movf	(?_sergetline+1)^(0+128),w
  2032  06CC  01E0               	clrf	(main@status+1)^(0+128)
  2033  06CD  07E0               	addwf	(main@status+1)^(0+128),f
  2034  06CE  0824               	movf	?_sergetline^(0+128),w
  2035  06CF  01DF               	clrf	main@status^(0+128)
  2036  06D0  07DF               	addwf	main@status^(0+128),f
  2037                           
  2038                           ;Main.c: 55: if (status != 0) {
  2039  06D1  0860               	movf	(main@status+1)^(0+128),w
  2040  06D2  045F               	iorwf	main@status^(0+128),w
  2041  06D3  1D03               	btfss	3,2
  2042  06D4  2E8C               	goto	l4418
  2043                           
  2044                           ;Main.c: 62: }
  2045                           ;Main.c: 64: if (strlen(cmdbuf) == 0) {
  2046  06D5  30D1               	movlw	low main@cmdbuf
  2047  06D6  0020               	movlb	0	; select bank0
  2048  06D7  00B7               	movwf	strlen@s
  2049  06D8  3000               	movlw	high main@cmdbuf
  2050  06D9  00B8               	movwf	strlen@s+1
  2051  06DA  3189  216E  3186   	fcall	_strlen
  2052  06DD  0020               	movlb	0	; select bank0
  2053  06DE  0838               	movf	?_strlen+1,w
  2054  06DF  0437               	iorwf	?_strlen,w
  2055  06E0  1903               	btfsc	3,2
  2056  06E1  2E98               	goto	l4426
  2057                           
  2058                           ;Main.c: 68: }
  2059                           ;Main.c: 71: status = parse_setup_cmd(cmdbuf, &cmd_descr);
  2060  06E2  30E1               	movlw	main@cmd_descr& (0+255)
  2061  06E3  0021               	movlb	1	; select bank1
  2062  06E4  00CC               	movwf	??_main^(0+128)
  2063  06E5  084C               	movf	??_main^(0+128),w
  2064  06E6  00A8               	movwf	parse_setup_cmd@cmd_descr^(0+128)
  2065  06E7  30D1               	movlw	main@cmdbuf& (0+255)
  2066  06E8  318E  2684  3186   	fcall	_parse_setup_cmd
  2067  06EB  0021               	movlb	1	; select bank1
  2068  06EC  0829               	movf	(?_parse_setup_cmd+1)^(0+128),w
  2069  06ED  01E0               	clrf	(main@status+1)^(0+128)
  2070  06EE  07E0               	addwf	(main@status+1)^(0+128),f
  2071  06EF  0828               	movf	?_parse_setup_cmd^(0+128),w
  2072  06F0  01DF               	clrf	main@status^(0+128)
  2073  06F1  07DF               	addwf	main@status^(0+128),f
  2074                           
  2075                           ;Main.c: 72: if (status != 0) {
  2076  06F2  0860               	movf	(main@status+1)^(0+128),w
  2077  06F3  045F               	iorwf	main@status^(0+128),w
  2078  06F4  1D03               	btfss	3,2
  2079  06F5  2E9A               	goto	l4436
  2080                           
  2081                           ;Main.c: 79: }
  2082                           ;Main.c: 82: status = (*cmd_descr.cmdptr)(cmd_descr.arg1);
  2083  06F6  30E1               	movlw	main@cmd_descr& (0+255)
  2084  06F7  0021               	movlb	1	; select bank1
  2085  06F8  00CC               	movwf	??_main^(0+128)
  2086  06F9  084C               	movf	??_main^(0+128),w
  2087  06FA  00B3               	movwf	errors_command@param1^(0+128)
  2088  06FB  086C               	movf	(main@cmd_descr+11)^(0+128),w
  2089  06FC  008A               	movwf	10
  2090  06FD  086B               	movf	(main@cmd_descr+10)^(0+128),w
  2091  06FE  000A               	callw
  2092  06FF  3186               	pagesel	$
  2093  0700  0021               	movlb	1	; select bank1
  2094  0701  0834               	movf	(?_errors_command+1)^(0+128),w
  2095  0702  01E0               	clrf	(main@status+1)^(0+128)
  2096  0703  07E0               	addwf	(main@status+1)^(0+128),f
  2097  0704  0833               	movf	?_errors_command^(0+128),w
  2098  0705  01DF               	clrf	main@status^(0+128)
  2099  0706  07DF               	addwf	main@status^(0+128),f
  2100                           
  2101                           ;Main.c: 83: if (status == -1) {
  2102  0707  30FF               	movlw	255
  2103  0708  0660               	xorwf	(main@status+1)^(0+128),w
  2104  0709  1D03               	skipz
  2105  070A  2F0D               	goto	u6685
  2106  070B  30FF               	movlw	255
  2107  070C  065F               	xorwf	main@status^(0+128),w
  2108  070D                     u6685:	
  2109  070D  1903               	btfsc	3,2
  2110  070E  2EA6               	goto	l4446
  2111  070F  30FF               	movlw	255
  2112  0710  0021               	movlb	1	; select bank1
  2113  0711  0660               	xorwf	(main@status+1)^(0+128),w
  2114  0712  1D03               	skipz
  2115  0713  2F16               	goto	u6705
  2116  0714  30FE               	movlw	254
  2117  0715  065F               	xorwf	main@status^(0+128),w
  2118  0716                     u6705:	
  2119  0716  1903               	btfsc	3,2
  2120  0717  2EB2               	goto	l4456
  2121  0718  30FF               	movlw	255
  2122  0719  0021               	movlb	1	; select bank1
  2123  071A  0660               	xorwf	(main@status+1)^(0+128),w
  2124  071B  1D03               	skipz
  2125  071C  2F1F               	goto	u6725
  2126  071D  30FD               	movlw	253
  2127  071E  065F               	xorwf	main@status^(0+128),w
  2128  071F                     u6725:	
  2129  071F  1903               	btfsc	3,2
  2130  0720  2EC1               	goto	l4414
  2131                           
  2132                           ;Main.c: 103: serputstr("OK\r");
  2133  0721  308B               	movlw	low (STR_4| (0+32768))
  2134  0722  0020               	movlb	0	; select bank0
  2135  0723                     L4:	
  2136  0723  00BD               	movwf	serputstr@line
  2137  0724  3084               	movlw	high (STR_4| (0+32768))
  2138  0725  00BE               	movwf	serputstr@line+1
  2139  0726  318A  225C  3186   	fcall	_serputstr
  2140                           
  2141                           ;Main.c: 104: if (echo_enabled) serputstr("\n");
  2142  0729  1D7C               	btfss	_echo_enabled/(0+8),_echo_enabled& (0+7)
  2143  072A  2EC1               	goto	l4414
  2144  072B  30A9               	movlw	low ((STR_1+31)| (0+32768))
  2145  072C  0020               	movlb	0	; select bank0
  2146  072D  00BD               	movwf	serputstr@line
  2147  072E  3083               	movlw	high ((STR_1+31)| (0+32768))
  2148  072F  2EBD               	goto	L2
  2149  0730                     __end_of_main:	
  2150                           ;Main.c: 106: }
  2151                           ;Main.c: 108: }
  2152                           ;Main.c: 110: return (0);
  2153                           ;	Return value of _main is never used
  2154                           
  2155                           ;Main.c: 105: continue;
  2156                           
  2157                           
  2158                           	psect	text1
  2159  0730                     __ptext1:	
  2160 ;; *************** function _errors_command *****************
  2161 ;; Defined at:
  2162 ;;		line 292 in file "Main.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  param1          1   19[BANK1 ] PTR unsigned char 
  2165 ;;		 -> main@cmd_descr(12), 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  buf            10   23[BANK1 ] unsigned char [10]
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  2   19[BANK1 ] int 
  2170 ;; Registers used:
  2171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2177 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2178 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  2179 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2180 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  2181 ;;Total ram usage:       14 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    4
  2184 ;; This function calls:
  2185 ;;		_serputstr
  2186 ;;		_sprintf
  2187 ;; This function is called by:
  2188 ;;		_main
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           
  2193                           ;psect for function _errors_command
  2194  0730                     _errors_command:	
  2195                           
  2196                           ;Main.c: 294: char buf[10];
  2197                           ;Main.c: 295: serputstr("ERR ");
  2198                           
  2199                           ;incstack = 0
  2200                           ; Regs used in _errors_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2201  0730  307D               	movlw	low (STR_37| (0+32768))
  2202  0731  0020               	movlb	0	; select bank0
  2203  0732  00BD               	movwf	serputstr@line
  2204  0733  3084               	movlw	high (STR_37| (0+32768))
  2205  0734  00BE               	movwf	serputstr@line+1
  2206  0735  318A  225C  3187   	fcall	_serputstr
  2207                           
  2208                           ;Main.c: 297: sprintf(buf, "FL1=%d ", ~RB0 & 0x0001);
  2209  0738  30F7               	movlw	low (STR_31| (0+32768))
  2210  0739  0021               	movlb	1	; select bank1
  2211  073A  00A2               	movwf	sprintf@f^(0+128)
  2212  073B  3083               	movlw	high (STR_31| (0+32768))
  2213  073C  00A3               	movwf	(sprintf@f^(0+128)+1)
  2214  073D  1003               	clrc
  2215  073E  0020               	movlb	0	; select bank0
  2216  073F  180D               	btfsc	13,0	;volatile
  2217  0740  1403               	setc
  2218  0741  3000               	movlw	0
  2219  0742  3D09               	addwfc	9,w
  2220  0743  0021               	movlb	1	; select bank1
  2221  0744  00B5               	movwf	??_errors_command^(0+128)
  2222  0745  01B6               	clrf	(??_errors_command^(0+128)+1)
  2223  0746  09B5               	comf	??_errors_command^(0+128),f
  2224  0747  09B6               	comf	(??_errors_command^(0+128)+1),f
  2225  0748  3001               	movlw	1
  2226  0749  0535               	andwf	??_errors_command^(0+128),w
  2227  074A  00A4               	movwf	(?_sprintf^(0+128)+2)
  2228  074B  3000               	movlw	0
  2229  074C  0536               	andwf	(??_errors_command+1)^(0+128),w
  2230  074D  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2231  074E  30B7               	movlw	errors_command@buf& (0+255)
  2232  074F  318F  2725  3187   	fcall	_sprintf
  2233                           
  2234                           ;Main.c: 298: serputstr(buf);
  2235  0752  30B7               	movlw	low errors_command@buf
  2236  0753  0020               	movlb	0	; select bank0
  2237  0754  00BD               	movwf	serputstr@line
  2238  0755  3000               	movlw	high errors_command@buf
  2239  0756  00BE               	movwf	serputstr@line+1
  2240  0757  318A  225C  3187   	fcall	_serputstr
  2241                           
  2242                           ;Main.c: 300: sprintf(buf, "FL2=%d ", ~RB2 & 0x0001);
  2243  075A  300F               	movlw	low (STR_32| (0+32768))
  2244  075B  0021               	movlb	1	; select bank1
  2245  075C  00A2               	movwf	sprintf@f^(0+128)
  2246  075D  3084               	movlw	high (STR_32| (0+32768))
  2247  075E  00A3               	movwf	(sprintf@f^(0+128)+1)
  2248  075F  1003               	clrc
  2249  0760  0020               	movlb	0	; select bank0
  2250  0761  190D               	btfsc	13,2	;volatile
  2251  0762  1403               	setc
  2252  0763  3000               	movlw	0
  2253  0764  3D09               	addwfc	9,w
  2254  0765  0021               	movlb	1	; select bank1
  2255  0766  00B5               	movwf	??_errors_command^(0+128)
  2256  0767  01B6               	clrf	(??_errors_command^(0+128)+1)
  2257  0768  09B5               	comf	??_errors_command^(0+128),f
  2258  0769  09B6               	comf	(??_errors_command^(0+128)+1),f
  2259  076A  3001               	movlw	1
  2260  076B  0535               	andwf	??_errors_command^(0+128),w
  2261  076C  00A4               	movwf	(?_sprintf^(0+128)+2)
  2262  076D  3000               	movlw	0
  2263  076E  0536               	andwf	(??_errors_command+1)^(0+128),w
  2264  076F  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2265  0770  30B7               	movlw	errors_command@buf& (0+255)
  2266  0771  318F  2725  3187   	fcall	_sprintf
  2267                           
  2268                           ;Main.c: 301: serputstr(buf);
  2269  0774  30B7               	movlw	low errors_command@buf
  2270  0775  0020               	movlb	0	; select bank0
  2271  0776  00BD               	movwf	serputstr@line
  2272  0777  3000               	movlw	high errors_command@buf
  2273  0778  00BE               	movwf	serputstr@line+1
  2274  0779  318A  225C  3187   	fcall	_serputstr
  2275                           
  2276                           ;Main.c: 303: sprintf(buf, "OT1=%d ", ~RB1 & 0x0001);
  2277  077C  3007               	movlw	low (STR_33| (0+32768))
  2278  077D  0021               	movlb	1	; select bank1
  2279  077E  00A2               	movwf	sprintf@f^(0+128)
  2280  077F  3084               	movlw	high (STR_33| (0+32768))
  2281  0780  00A3               	movwf	(sprintf@f^(0+128)+1)
  2282  0781  1003               	clrc
  2283  0782  0020               	movlb	0	; select bank0
  2284  0783  188D               	btfsc	13,1	;volatile
  2285  0784  1403               	setc
  2286  0785  3000               	movlw	0
  2287  0786  3D09               	addwfc	9,w
  2288  0787  0021               	movlb	1	; select bank1
  2289  0788  00B5               	movwf	??_errors_command^(0+128)
  2290  0789  01B6               	clrf	(??_errors_command^(0+128)+1)
  2291  078A  09B5               	comf	??_errors_command^(0+128),f
  2292  078B  09B6               	comf	(??_errors_command^(0+128)+1),f
  2293  078C  3001               	movlw	1
  2294  078D  0535               	andwf	??_errors_command^(0+128),w
  2295  078E  00A4               	movwf	(?_sprintf^(0+128)+2)
  2296  078F  3000               	movlw	0
  2297  0790  0536               	andwf	(??_errors_command+1)^(0+128),w
  2298  0791  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2299  0792  30B7               	movlw	errors_command@buf& (0+255)
  2300  0793  318F  2725  3187   	fcall	_sprintf
  2301                           
  2302                           ;Main.c: 304: serputstr(buf);
  2303  0796  30B7               	movlw	low errors_command@buf
  2304  0797  0020               	movlb	0	; select bank0
  2305  0798  00BD               	movwf	serputstr@line
  2306  0799  3000               	movlw	high errors_command@buf
  2307  079A  00BE               	movwf	serputstr@line+1
  2308  079B  318A  225C  3187   	fcall	_serputstr
  2309                           
  2310                           ;Main.c: 306: sprintf(buf, "OT2=%d", ~RB3 & 0x0001);
  2311  079E  3037               	movlw	low (STR_34| (0+32768))
  2312  079F  0021               	movlb	1	; select bank1
  2313  07A0  00A2               	movwf	sprintf@f^(0+128)
  2314  07A1  3084               	movlw	high (STR_34| (0+32768))
  2315  07A2  00A3               	movwf	(sprintf@f^(0+128)+1)
  2316  07A3  1003               	clrc
  2317  07A4  0020               	movlb	0	; select bank0
  2318  07A5  198D               	btfsc	13,3	;volatile
  2319  07A6  1403               	setc
  2320  07A7  3000               	movlw	0
  2321  07A8  3D09               	addwfc	9,w
  2322  07A9  0021               	movlb	1	; select bank1
  2323  07AA  00B5               	movwf	??_errors_command^(0+128)
  2324  07AB  01B6               	clrf	(??_errors_command^(0+128)+1)
  2325  07AC  09B5               	comf	??_errors_command^(0+128),f
  2326  07AD  09B6               	comf	(??_errors_command^(0+128)+1),f
  2327  07AE  3001               	movlw	1
  2328  07AF  0535               	andwf	??_errors_command^(0+128),w
  2329  07B0  00A4               	movwf	(?_sprintf^(0+128)+2)
  2330  07B1  3000               	movlw	0
  2331  07B2  0536               	andwf	(??_errors_command+1)^(0+128),w
  2332  07B3  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2333  07B4  30B7               	movlw	errors_command@buf& (0+255)
  2334  07B5  318F  2725  3187   	fcall	_sprintf
  2335                           
  2336                           ;Main.c: 307: serputstr(buf);
  2337  07B8  30B7               	movlw	low errors_command@buf
  2338  07B9  0020               	movlb	0	; select bank0
  2339  07BA  00BD               	movwf	serputstr@line
  2340  07BB  3000               	movlw	high errors_command@buf
  2341  07BC  00BE               	movwf	serputstr@line+1
  2342  07BD  318A  225C  3187   	fcall	_serputstr
  2343                           
  2344                           ;Main.c: 309: serputstr("\r");
  2345  07C0  3057               	movlw	low ((STR_6+4)| (0+32768))
  2346  07C1  0020               	movlb	0	; select bank0
  2347  07C2  00BD               	movwf	serputstr@line
  2348  07C3  3084               	movlw	high ((STR_6+4)| (0+32768))
  2349  07C4  00BE               	movwf	serputstr@line+1
  2350  07C5  318A  225C  3187   	fcall	_serputstr
  2351                           
  2352                           ;Main.c: 310: if (echo_enabled) serputstr("\n");
  2353  07C8  1D7C               	btfss	_echo_enabled/(0+8),_echo_enabled& (0+7)
  2354  07C9  2FD1               	goto	l4394
  2355  07CA  30A9               	movlw	low ((STR_1+31)| (0+32768))
  2356  07CB  0020               	movlb	0	; select bank0
  2357  07CC  00BD               	movwf	serputstr@line
  2358  07CD  3083               	movlw	high ((STR_1+31)| (0+32768))
  2359  07CE  00BE               	movwf	serputstr@line+1
  2360  07CF  318A  225C         	fcall	_serputstr
  2361  07D1                     l4394:	
  2362                           
  2363                           ;Main.c: 312: return -3;
  2364  07D1  30FD               	movlw	253
  2365  07D2  0021               	movlb	1	; select bank1
  2366  07D3  00B3               	movwf	?_errors_command^(0+128)
  2367  07D4  30FF               	movlw	255
  2368  07D5  00B4               	movwf	(?_errors_command^(0+128)+1)
  2369  07D6  0008               	return
  2370  07D7                     __end_of_errors_command:	
  2371                           
  2372                           	psect	text2
  2373  049D                     __ptext2:	
  2374 ;; *************** function _status_command *****************
  2375 ;; Defined at:
  2376 ;;		line 250 in file "Main.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  param1          1   19[BANK1 ] PTR unsigned char 
  2379 ;;		 -> main@cmd_descr(12), 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  buf            10   26[BANK1 ] unsigned char [10]
  2382 ;;  temp            4   36[BANK1 ] long 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  2   19[BANK1 ] int 
  2385 ;; Registers used:
  2386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2392 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2393 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  2394 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  2395 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  2396 ;;Total ram usage:       21 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    4
  2399 ;; This function calls:
  2400 ;;		___lmul
  2401 ;;		_serputstr
  2402 ;;		_sprintf
  2403 ;; This function is called by:
  2404 ;;		_main
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           
  2409                           ;psect for function _status_command
  2410  049D                     _status_command:	
  2411                           
  2412                           ;Main.c: 252: char buf[10];
  2413                           ;Main.c: 253: long int temp;
  2414                           ;Main.c: 255: serputstr("OK ");
  2415                           
  2416                           ;incstack = 0
  2417                           ; Regs used in _status_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2418  049D  308F               	movlw	low (STR_25| (0+32768))
  2419  049E  0020               	movlb	0	; select bank0
  2420  049F  00BD               	movwf	serputstr@line
  2421  04A0  3084               	movlw	high (STR_25| (0+32768))
  2422  04A1  00BE               	movwf	serputstr@line+1
  2423  04A2  318A  225C  3184   	fcall	_serputstr
  2424                           
  2425                           ;Main.c: 256: sprintf(buf, "REM=%d ", remote_enabled);
  2426  04A5  3027               	movlw	low (STR_26| (0+32768))
  2427  04A6  0021               	movlb	1	; select bank1
  2428  04A7  00A2               	movwf	sprintf@f^(0+128)
  2429  04A8  3084               	movlw	high (STR_26| (0+32768))
  2430  04A9  00A3               	movwf	(sprintf@f^(0+128)+1)
  2431  04AA  1003               	clrc
  2432  04AB  0020               	movlb	0	; select bank0
  2433  04AC  1858               	btfsc	_remote_enabled/(0+8),_remote_enabled& (0+7)
  2434  04AD  1403               	setc
  2435  04AE  3000               	movlw	0
  2436  04AF  3D09               	addwfc	9,w
  2437  04B0  0021               	movlb	1	; select bank1
  2438  04B1  00B5               	movwf	??_status_command^(0+128)
  2439  04B2  01B6               	clrf	(??_status_command^(0+128)+1)
  2440  04B3  0835               	movf	??_status_command^(0+128),w
  2441  04B4  00A4               	movwf	(?_sprintf^(0+128)+2)
  2442  04B5  0836               	movf	(??_status_command+1)^(0+128),w
  2443  04B6  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2444  04B7  30BA               	movlw	status_command@buf& (0+255)
  2445  04B8  318F  2725  3184   	fcall	_sprintf
  2446                           
  2447                           ;Main.c: 257: serputstr(buf);
  2448  04BB  30BA               	movlw	low status_command@buf
  2449  04BC  0020               	movlb	0	; select bank0
  2450  04BD  00BD               	movwf	serputstr@line
  2451  04BE  3000               	movlw	high status_command@buf
  2452  04BF  00BE               	movwf	serputstr@line+1
  2453  04C0  318A  225C  3184   	fcall	_serputstr
  2454                           
  2455                           ;Main.c: 259: sprintf(buf, "EN1=%d ", channel1_enabled);
  2456  04C3  30FF               	movlw	low (STR_27| (0+32768))
  2457  04C4  0021               	movlb	1	; select bank1
  2458  04C5  00A2               	movwf	sprintf@f^(0+128)
  2459  04C6  3083               	movlw	high (STR_27| (0+32768))
  2460  04C7  00A3               	movwf	(sprintf@f^(0+128)+1)
  2461  04C8  1003               	clrc
  2462  04C9  187C               	btfsc	_channel1_enabled/(0+8),_channel1_enabled& (0+7)
  2463  04CA  1403               	setc
  2464  04CB  3000               	movlw	0
  2465  04CC  3D09               	addwfc	9,w
  2466  04CD  00B5               	movwf	??_status_command^(0+128)
  2467  04CE  01B6               	clrf	(??_status_command^(0+128)+1)
  2468  04CF  0835               	movf	??_status_command^(0+128),w
  2469  04D0  00A4               	movwf	(?_sprintf^(0+128)+2)
  2470  04D1  0836               	movf	(??_status_command+1)^(0+128),w
  2471  04D2  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2472  04D3  30BA               	movlw	status_command@buf& (0+255)
  2473  04D4  318F  2725  3184   	fcall	_sprintf
  2474                           
  2475                           ;Main.c: 260: serputstr(buf);
  2476  04D7  30BA               	movlw	low status_command@buf
  2477  04D8  0020               	movlb	0	; select bank0
  2478  04D9  00BD               	movwf	serputstr@line
  2479  04DA  3000               	movlw	high status_command@buf
  2480  04DB  00BE               	movwf	serputstr@line+1
  2481  04DC  318A  225C  3184   	fcall	_serputstr
  2482                           
  2483                           ;Main.c: 262: sprintf(buf, "EN2=%d ", channel2_enabled);
  2484  04DF  3017               	movlw	low (STR_28| (0+32768))
  2485  04E0  0021               	movlb	1	; select bank1
  2486  04E1  00A2               	movwf	sprintf@f^(0+128)
  2487  04E2  3084               	movlw	high (STR_28| (0+32768))
  2488  04E3  00A3               	movwf	(sprintf@f^(0+128)+1)
  2489  04E4  1003               	clrc
  2490  04E5  18FC               	btfsc	_channel2_enabled/(0+8),_channel2_enabled& (0+7)
  2491  04E6  1403               	setc
  2492  04E7  3000               	movlw	0
  2493  04E8  3D09               	addwfc	9,w
  2494  04E9  00B5               	movwf	??_status_command^(0+128)
  2495  04EA  01B6               	clrf	(??_status_command^(0+128)+1)
  2496  04EB  0835               	movf	??_status_command^(0+128),w
  2497  04EC  00A4               	movwf	(?_sprintf^(0+128)+2)
  2498  04ED  0836               	movf	(??_status_command+1)^(0+128),w
  2499  04EE  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2500  04EF  30BA               	movlw	status_command@buf& (0+255)
  2501  04F0  318F  2725  3184   	fcall	_sprintf
  2502                           
  2503                           ;Main.c: 263: serputstr(buf);
  2504  04F3  30BA               	movlw	low status_command@buf
  2505  04F4  0020               	movlb	0	; select bank0
  2506  04F5  00BD               	movwf	serputstr@line
  2507  04F6  3000               	movlw	high status_command@buf
  2508  04F7  00BE               	movwf	serputstr@line+1
  2509  04F8  318A  225C  3184   	fcall	_serputstr
  2510                           
  2511                           ;Main.c: 265: sprintf(buf, "PUL=%d ", pulse_enabled);
  2512  04FB  301F               	movlw	low (STR_29| (0+32768))
  2513  04FC  0021               	movlb	1	; select bank1
  2514  04FD  00A2               	movwf	sprintf@f^(0+128)
  2515  04FE  3084               	movlw	high (STR_29| (0+32768))
  2516  04FF  00A3               	movwf	(sprintf@f^(0+128)+1)
  2517  0500  1003               	clrc
  2518  0501  19FC               	btfsc	_pulse_enabled/(0+8),_pulse_enabled& (0+7)
  2519  0502  1403               	setc
  2520  0503  3000               	movlw	0
  2521  0504  3D09               	addwfc	9,w
  2522  0505  00B5               	movwf	??_status_command^(0+128)
  2523  0506  01B6               	clrf	(??_status_command^(0+128)+1)
  2524  0507  0835               	movf	??_status_command^(0+128),w
  2525  0508  00A4               	movwf	(?_sprintf^(0+128)+2)
  2526  0509  0836               	movf	(??_status_command+1)^(0+128),w
  2527  050A  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2528  050B  30BA               	movlw	status_command@buf& (0+255)
  2529  050C  318F  2725  3184   	fcall	_sprintf
  2530                           
  2531                           ;Main.c: 266: serputstr(buf);
  2532  050F  30BA               	movlw	low status_command@buf
  2533  0510  0020               	movlb	0	; select bank0
  2534  0511  00BD               	movwf	serputstr@line
  2535  0512  3000               	movlw	high status_command@buf
  2536  0513  00BE               	movwf	serputstr@line+1
  2537  0514  318A  225C  3184   	fcall	_serputstr
  2538                           
  2539                           ;Main.c: 268: temp = (long int)remote_power_level * 25700L + 32768L;
  2540  0517  0020               	movlb	0	; select bank0
  2541  0518  0855               	movf	_remote_power_level,w
  2542  0519  0021               	movlb	1	; select bank1
  2543  051A  00B5               	movwf	??_status_command^(0+128)
  2544  051B  01B6               	clrf	(??_status_command^(0+128)+1)
  2545  051C  01B7               	clrf	(??_status_command^(0+128)+2)
  2546  051D  01B8               	clrf	(??_status_command^(0+128)+3)
  2547  051E  0838               	movf	(??_status_command+3)^(0+128),w
  2548  051F  0020               	movlb	0	; select bank0
  2549  0520  00BA               	movwf	___lmul@multiplier+3
  2550  0521  0021               	movlb	1	; select bank1
  2551  0522  0837               	movf	(??_status_command+2)^(0+128),w
  2552  0523  0020               	movlb	0	; select bank0
  2553  0524  00B9               	movwf	___lmul@multiplier+2
  2554  0525  0021               	movlb	1	; select bank1
  2555  0526  0836               	movf	(??_status_command+1)^(0+128),w
  2556  0527  0020               	movlb	0	; select bank0
  2557  0528  00B8               	movwf	___lmul@multiplier+1
  2558  0529  0021               	movlb	1	; select bank1
  2559  052A  0835               	movf	??_status_command^(0+128),w
  2560  052B  0020               	movlb	0	; select bank0
  2561  052C  00B7               	movwf	___lmul@multiplier
  2562  052D  3000               	movlw	0
  2563  052E  00BE               	movwf	___lmul@multiplicand+3
  2564  052F  3000               	movlw	0
  2565  0530  00BD               	movwf	___lmul@multiplicand+2
  2566  0531  3064               	movlw	100
  2567  0532  00BC               	movwf	___lmul@multiplicand+1
  2568  0533  3064               	movlw	100
  2569  0534  00BB               	movwf	___lmul@multiplicand
  2570  0535  3189  21BF  3184   	fcall	___lmul
  2571  0538  3000               	movlw	0
  2572  0539  0020               	movlb	0	; select bank0
  2573  053A  0737               	addwf	?___lmul,w
  2574  053B  0021               	movlb	1	; select bank1
  2575  053C  00C4               	movwf	status_command@temp^(0+128)
  2576  053D  3080               	movlw	128
  2577  053E  0020               	movlb	0	; select bank0
  2578  053F  3D38               	addwfc	?___lmul+1,w
  2579  0540  0021               	movlb	1	; select bank1
  2580  0541  00C5               	movwf	(status_command@temp+1)^(0+128)
  2581  0542  3000               	movlw	0
  2582  0543  0020               	movlb	0	; select bank0
  2583  0544  3D39               	addwfc	?___lmul+2,w
  2584  0545  0021               	movlb	1	; select bank1
  2585  0546  00C6               	movwf	(status_command@temp+2)^(0+128)
  2586  0547  3000               	movlw	0
  2587  0548  0020               	movlb	0	; select bank0
  2588  0549  3D3A               	addwfc	?___lmul+3,w
  2589  054A  0021               	movlb	1	; select bank1
  2590  054B  00C7               	movwf	(status_command@temp+3)^(0+128)
  2591                           
  2592                           ;Main.c: 269: temp = temp >> 16;
  2593  054C  0844               	movf	status_command@temp^(0+128),w
  2594  054D  00B5               	movwf	??_status_command^(0+128)
  2595  054E  0845               	movf	(status_command@temp+1)^(0+128),w
  2596  054F  00B6               	movwf	(??_status_command^(0+128)+1)
  2597  0550  0846               	movf	(status_command@temp+2)^(0+128),w
  2598  0551  00B7               	movwf	(??_status_command^(0+128)+2)
  2599  0552  0847               	movf	(status_command@temp+3)^(0+128),w
  2600  0553  00B8               	movwf	(??_status_command^(0+128)+3)
  2601  0554  3010               	movlw	16
  2602  0555  00B9               	movwf	(??_status_command+4)^(0+128)
  2603  0556                     u6575:	
  2604  0556  37B8               	asrf	(??_status_command^(0+128)+3),f
  2605  0557  0CB7               	rrf	(??_status_command^(0+128)+2),f
  2606  0558  0CB6               	rrf	(??_status_command^(0+128)+1),f
  2607  0559  0CB5               	rrf	??_status_command^(0+128),f
  2608  055A  0BB9               	decfsz	(??_status_command+4)^(0+128),f
  2609  055B  2D56               	goto	u6575
  2610  055C  0838               	movf	(??_status_command+3)^(0+128),w
  2611  055D  00C7               	movwf	(status_command@temp+3)^(0+128)
  2612  055E  0837               	movf	(??_status_command+2)^(0+128),w
  2613  055F  00C6               	movwf	(status_command@temp+2)^(0+128)
  2614  0560  0836               	movf	(??_status_command+1)^(0+128),w
  2615  0561  00C5               	movwf	(status_command@temp+1)^(0+128)
  2616  0562  0835               	movf	??_status_command^(0+128),w
  2617  0563  00C4               	movwf	status_command@temp^(0+128)
  2618                           
  2619                           ;Main.c: 270: sprintf(buf, "PWR=%d ", (int)temp);
  2620  0564  302F               	movlw	low (STR_30| (0+32768))
  2621  0565  00A2               	movwf	sprintf@f^(0+128)
  2622  0566  3084               	movlw	high (STR_30| (0+32768))
  2623  0567  00A3               	movwf	(sprintf@f^(0+128)+1)
  2624  0568  0845               	movf	(status_command@temp+1)^(0+128),w
  2625  0569  01A5               	clrf	((?_sprintf+1)^(0+128)+2)
  2626  056A  07A5               	addwf	((?_sprintf+1)^(0+128)+2),f
  2627  056B  0844               	movf	status_command@temp^(0+128),w
  2628  056C  01A4               	clrf	(?_sprintf^(0+128)+2)
  2629  056D  07A4               	addwf	(?_sprintf^(0+128)+2),f
  2630  056E  30BA               	movlw	status_command@buf& (0+255)
  2631  056F  318F  2725  3184   	fcall	_sprintf
  2632                           
  2633                           ;Main.c: 271: serputstr(buf);
  2634  0572  30BA               	movlw	low status_command@buf
  2635  0573  0020               	movlb	0	; select bank0
  2636  0574  00BD               	movwf	serputstr@line
  2637  0575  3000               	movlw	high status_command@buf
  2638  0576  00BE               	movwf	serputstr@line+1
  2639  0577  318A  225C  3184   	fcall	_serputstr
  2640                           
  2641                           ;Main.c: 273: sprintf(buf, "FL1=%d ", ~RB0 & 0x0001);
  2642  057A  30F7               	movlw	low (STR_31| (0+32768))
  2643  057B  0021               	movlb	1	; select bank1
  2644  057C  00A2               	movwf	sprintf@f^(0+128)
  2645  057D  3083               	movlw	high (STR_31| (0+32768))
  2646  057E  00A3               	movwf	(sprintf@f^(0+128)+1)
  2647  057F  1003               	clrc
  2648  0580  0020               	movlb	0	; select bank0
  2649  0581  180D               	btfsc	13,0	;volatile
  2650  0582  1403               	setc
  2651  0583  3000               	movlw	0
  2652  0584  3D09               	addwfc	9,w
  2653  0585  0021               	movlb	1	; select bank1
  2654  0586  00B5               	movwf	??_status_command^(0+128)
  2655  0587  01B6               	clrf	(??_status_command^(0+128)+1)
  2656  0588  09B5               	comf	??_status_command^(0+128),f
  2657  0589  09B6               	comf	(??_status_command^(0+128)+1),f
  2658  058A  3001               	movlw	1
  2659  058B  0535               	andwf	??_status_command^(0+128),w
  2660  058C  00A4               	movwf	(?_sprintf^(0+128)+2)
  2661  058D  3000               	movlw	0
  2662  058E  0536               	andwf	(??_status_command+1)^(0+128),w
  2663  058F  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2664  0590  30BA               	movlw	status_command@buf& (0+255)
  2665  0591  318F  2725  3184   	fcall	_sprintf
  2666                           
  2667                           ;Main.c: 274: serputstr(buf);
  2668  0594  30BA               	movlw	low status_command@buf
  2669  0595  0020               	movlb	0	; select bank0
  2670  0596  00BD               	movwf	serputstr@line
  2671  0597  3000               	movlw	high status_command@buf
  2672  0598  00BE               	movwf	serputstr@line+1
  2673  0599  318A  225C  3184   	fcall	_serputstr
  2674                           
  2675                           ;Main.c: 276: sprintf(buf, "FL2=%d ", ~RB2 & 0x0001);
  2676  059C  300F               	movlw	low (STR_32| (0+32768))
  2677  059D  0021               	movlb	1	; select bank1
  2678  059E  00A2               	movwf	sprintf@f^(0+128)
  2679  059F  3084               	movlw	high (STR_32| (0+32768))
  2680  05A0  00A3               	movwf	(sprintf@f^(0+128)+1)
  2681  05A1  1003               	clrc
  2682  05A2  0020               	movlb	0	; select bank0
  2683  05A3  190D               	btfsc	13,2	;volatile
  2684  05A4  1403               	setc
  2685  05A5  3000               	movlw	0
  2686  05A6  3D09               	addwfc	9,w
  2687  05A7  0021               	movlb	1	; select bank1
  2688  05A8  00B5               	movwf	??_status_command^(0+128)
  2689  05A9  01B6               	clrf	(??_status_command^(0+128)+1)
  2690  05AA  09B5               	comf	??_status_command^(0+128),f
  2691  05AB  09B6               	comf	(??_status_command^(0+128)+1),f
  2692  05AC  3001               	movlw	1
  2693  05AD  0535               	andwf	??_status_command^(0+128),w
  2694  05AE  00A4               	movwf	(?_sprintf^(0+128)+2)
  2695  05AF  3000               	movlw	0
  2696  05B0  0536               	andwf	(??_status_command+1)^(0+128),w
  2697  05B1  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2698  05B2  30BA               	movlw	status_command@buf& (0+255)
  2699  05B3  318F  2725  3184   	fcall	_sprintf
  2700                           
  2701                           ;Main.c: 277: serputstr(buf);
  2702  05B6  30BA               	movlw	low status_command@buf
  2703  05B7  0020               	movlb	0	; select bank0
  2704  05B8  00BD               	movwf	serputstr@line
  2705  05B9  3000               	movlw	high status_command@buf
  2706  05BA  00BE               	movwf	serputstr@line+1
  2707  05BB  318A  225C  3184   	fcall	_serputstr
  2708                           
  2709                           ;Main.c: 279: sprintf(buf, "OT1=%d ", ~RB1 & 0x0001);
  2710  05BE  3007               	movlw	low (STR_33| (0+32768))
  2711  05BF  0021               	movlb	1	; select bank1
  2712  05C0  00A2               	movwf	sprintf@f^(0+128)
  2713  05C1  3084               	movlw	high (STR_33| (0+32768))
  2714  05C2  00A3               	movwf	(sprintf@f^(0+128)+1)
  2715  05C3  1003               	clrc
  2716  05C4  0020               	movlb	0	; select bank0
  2717  05C5  188D               	btfsc	13,1	;volatile
  2718  05C6  1403               	setc
  2719  05C7  3000               	movlw	0
  2720  05C8  3D09               	addwfc	9,w
  2721  05C9  0021               	movlb	1	; select bank1
  2722  05CA  00B5               	movwf	??_status_command^(0+128)
  2723  05CB  01B6               	clrf	(??_status_command^(0+128)+1)
  2724  05CC  09B5               	comf	??_status_command^(0+128),f
  2725  05CD  09B6               	comf	(??_status_command^(0+128)+1),f
  2726  05CE  3001               	movlw	1
  2727  05CF  0535               	andwf	??_status_command^(0+128),w
  2728  05D0  00A4               	movwf	(?_sprintf^(0+128)+2)
  2729  05D1  3000               	movlw	0
  2730  05D2  0536               	andwf	(??_status_command+1)^(0+128),w
  2731  05D3  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2732  05D4  30BA               	movlw	status_command@buf& (0+255)
  2733  05D5  318F  2725  3184   	fcall	_sprintf
  2734                           
  2735                           ;Main.c: 280: serputstr(buf);
  2736  05D8  30BA               	movlw	low status_command@buf
  2737  05D9  0020               	movlb	0	; select bank0
  2738  05DA  00BD               	movwf	serputstr@line
  2739  05DB  3000               	movlw	high status_command@buf
  2740  05DC  00BE               	movwf	serputstr@line+1
  2741  05DD  318A  225C  3184   	fcall	_serputstr
  2742                           
  2743                           ;Main.c: 282: sprintf(buf, "OT2=%d", ~RB3 & 0x0001);
  2744  05E0  3037               	movlw	low (STR_34| (0+32768))
  2745  05E1  0021               	movlb	1	; select bank1
  2746  05E2  00A2               	movwf	sprintf@f^(0+128)
  2747  05E3  3084               	movlw	high (STR_34| (0+32768))
  2748  05E4  00A3               	movwf	(sprintf@f^(0+128)+1)
  2749  05E5  1003               	clrc
  2750  05E6  0020               	movlb	0	; select bank0
  2751  05E7  198D               	btfsc	13,3	;volatile
  2752  05E8  1403               	setc
  2753  05E9  3000               	movlw	0
  2754  05EA  3D09               	addwfc	9,w
  2755  05EB  0021               	movlb	1	; select bank1
  2756  05EC  00B5               	movwf	??_status_command^(0+128)
  2757  05ED  01B6               	clrf	(??_status_command^(0+128)+1)
  2758  05EE  09B5               	comf	??_status_command^(0+128),f
  2759  05EF  09B6               	comf	(??_status_command^(0+128)+1),f
  2760  05F0  3001               	movlw	1
  2761  05F1  0535               	andwf	??_status_command^(0+128),w
  2762  05F2  00A4               	movwf	(?_sprintf^(0+128)+2)
  2763  05F3  3000               	movlw	0
  2764  05F4  0536               	andwf	(??_status_command+1)^(0+128),w
  2765  05F5  00A5               	movwf	((?_sprintf+1)^(0+128)+2)
  2766  05F6  30BA               	movlw	status_command@buf& (0+255)
  2767  05F7  318F  2725  3184   	fcall	_sprintf
  2768                           
  2769                           ;Main.c: 283: serputstr(buf);
  2770  05FA  30BA               	movlw	low status_command@buf
  2771  05FB  0020               	movlb	0	; select bank0
  2772  05FC  00BD               	movwf	serputstr@line
  2773  05FD  3000               	movlw	high status_command@buf
  2774  05FE  00BE               	movwf	serputstr@line+1
  2775  05FF  318A  225C  3184   	fcall	_serputstr
  2776                           
  2777                           ;Main.c: 285: serputstr("\r");
  2778  0602  3057               	movlw	low ((STR_6+4)| (0+32768))
  2779  0603  0020               	movlb	0	; select bank0
  2780  0604  00BD               	movwf	serputstr@line
  2781  0605  3084               	movlw	high ((STR_6+4)| (0+32768))
  2782  0606  00BE               	movwf	serputstr@line+1
  2783  0607  318A  225C  3184   	fcall	_serputstr
  2784                           
  2785                           ;Main.c: 286: if (echo_enabled) serputstr("\n");
  2786  060A  1D7C               	btfss	_echo_enabled/(0+8),_echo_enabled& (0+7)
  2787  060B  2E13               	goto	l4370
  2788  060C  30A9               	movlw	low ((STR_1+31)| (0+32768))
  2789  060D  0020               	movlb	0	; select bank0
  2790  060E  00BD               	movwf	serputstr@line
  2791  060F  3083               	movlw	high ((STR_1+31)| (0+32768))
  2792  0610  00BE               	movwf	serputstr@line+1
  2793  0611  318A  225C         	fcall	_serputstr
  2794  0613                     l4370:	
  2795                           
  2796                           ;Main.c: 288: return -3;
  2797  0613  30FD               	movlw	253
  2798  0614  0021               	movlb	1	; select bank1
  2799  0615  00B3               	movwf	?_status_command^(0+128)
  2800  0616  30FF               	movlw	255
  2801  0617  00B4               	movwf	(?_status_command^(0+128)+1)
  2802  0618  0008               	return
  2803  0619                     __end_of_status_command:	
  2804                           
  2805                           	psect	text3
  2806  0CF4                     __ptext3:	
  2807 ;; *************** function _power_command *****************
  2808 ;; Defined at:
  2809 ;;		line 223 in file "Main.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  param1          1   19[BANK1 ] PTR unsigned char 
  2812 ;;		 -> main@cmd_descr(12), 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  temp            4   27[BANK1 ] long 
  2815 ;;  val             2   31[BANK1 ] int 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  2   19[BANK1 ] int 
  2818 ;; Registers used:
  2819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2825 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2826 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2827 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2828 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  2829 ;;Total ram usage:       14 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    4
  2832 ;; This function calls:
  2833 ;;		___lmul
  2834 ;;		_atoi
  2835 ;;		_strlen
  2836 ;; This function is called by:
  2837 ;;		_main
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           
  2842                           ;psect for function _power_command
  2843  0CF4                     _power_command:	
  2844                           
  2845                           ;Main.c: 225: int val;
  2846                           ;Main.c: 226: long int temp;
  2847                           ;Main.c: 228: if (strlen(param1) == 0) return -1;
  2848                           
  2849                           ;incstack = 0
  2850                           ; Regs used in _power_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2851  0CF4  0021               	movlb	1	; select bank1
  2852  0CF5  0833               	movf	power_command@param1^(0+128),w
  2853  0CF6  0020               	movlb	0	; select bank0
  2854  0CF7  00B7               	movwf	strlen@s
  2855  0CF8  3000               	movlw	0
  2856  0CF9  00B8               	movwf	strlen@s+1
  2857  0CFA  3189  216E  318C   	fcall	_strlen
  2858  0CFD  0020               	movlb	0	; select bank0
  2859  0CFE  0838               	movf	?_strlen+1,w
  2860  0CFF  0437               	iorwf	?_strlen,w
  2861  0D00  1D03               	skipz
  2862  0D01  2D08               	goto	l4288
  2863  0D02  30FF               	movlw	255
  2864  0D03  0021               	movlb	1	; select bank1
  2865  0D04  00B3               	movwf	?_power_command^(0+128)
  2866  0D05  30FF               	movlw	255
  2867  0D06  00B4               	movwf	(?_power_command^(0+128)+1)
  2868  0D07  0008               	return
  2869  0D08                     l4288:	
  2870                           
  2871                           ;Main.c: 229: val = atoi(param1);
  2872  0D08  0021               	movlb	1	; select bank1
  2873  0D09  0833               	movf	power_command@param1^(0+128),w
  2874  0D0A  318D  256F  318C   	fcall	_atoi
  2875  0D0D  0020               	movlb	0	; select bank0
  2876  0D0E  083E               	movf	?_atoi+1,w
  2877  0D0F  0021               	movlb	1	; select bank1
  2878  0D10  01C0               	clrf	(power_command@val+1)^(0+128)
  2879  0D11  07C0               	addwf	(power_command@val+1)^(0+128),f
  2880  0D12  0020               	movlb	0	; select bank0
  2881  0D13  083D               	movf	?_atoi,w
  2882  0D14  0021               	movlb	1	; select bank1
  2883  0D15  01BF               	clrf	power_command@val^(0+128)
  2884  0D16  07BF               	addwf	power_command@val^(0+128),f
  2885                           
  2886                           ;Main.c: 230: if (val < 0 || val > 100) return -2;
  2887  0D17  1BC0               	btfsc	(power_command@val+1)^(0+128),7
  2888  0D18  2D24               	goto	l4294
  2889  0D19  0840               	movf	(power_command@val+1)^(0+128),w
  2890  0D1A  3A80               	xorlw	128
  2891  0D1B  00B5               	movwf	??_power_command^(0+128)
  2892  0D1C  3080               	movlw	128
  2893  0D1D  0235               	subwf	??_power_command^(0+128),w
  2894  0D1E  1D03               	skipz
  2895  0D1F  2D22               	goto	u6505
  2896  0D20  3065               	movlw	101
  2897  0D21  023F               	subwf	power_command@val^(0+128),w
  2898  0D22                     u6505:	
  2899  0D22  1C03               	skipc
  2900  0D23  2D2A               	goto	l4298
  2901  0D24                     l4294:	
  2902  0D24  30FE               	movlw	254
  2903  0D25  0021               	movlb	1	; select bank1
  2904  0D26  00B3               	movwf	?_power_command^(0+128)
  2905  0D27  30FF               	movlw	255
  2906  0D28  00B4               	movwf	(?_power_command^(0+128)+1)
  2907  0D29  0008               	return
  2908  0D2A                     l4298:	
  2909                           
  2910                           ;Main.c: 233: temp = (long int)val * 167116L + 32768L;
  2911  0D2A  0021               	movlb	1	; select bank1
  2912  0D2B  083F               	movf	power_command@val^(0+128),w
  2913  0D2C  0020               	movlb	0	; select bank0
  2914  0D2D  00B7               	movwf	___lmul@multiplier
  2915  0D2E  0021               	movlb	1	; select bank1
  2916  0D2F  0840               	movf	(power_command@val+1)^(0+128),w
  2917  0D30  0020               	movlb	0	; select bank0
  2918  0D31  00B8               	movwf	___lmul@multiplier+1
  2919  0D32  0D89               	rlf	9,f
  2920  0D33  3B89               	subwfb	9,f
  2921  0D34  0989               	comf	9,f
  2922  0D35  00B9               	movwf	___lmul@multiplier+2
  2923  0D36  00BA               	movwf	___lmul@multiplier+3
  2924  0D37  3000               	movlw	0
  2925  0D38  00BE               	movwf	___lmul@multiplicand+3
  2926  0D39  3002               	movlw	2
  2927  0D3A  00BD               	movwf	___lmul@multiplicand+2
  2928  0D3B  308C               	movlw	140
  2929  0D3C  00BC               	movwf	___lmul@multiplicand+1
  2930  0D3D  30CC               	movlw	204
  2931  0D3E  00BB               	movwf	___lmul@multiplicand
  2932  0D3F  3189  21BF  318C   	fcall	___lmul
  2933  0D42  3000               	movlw	0
  2934  0D43  0020               	movlb	0	; select bank0
  2935  0D44  0737               	addwf	?___lmul,w
  2936  0D45  0021               	movlb	1	; select bank1
  2937  0D46  00BB               	movwf	power_command@temp^(0+128)
  2938  0D47  3080               	movlw	128
  2939  0D48  0020               	movlb	0	; select bank0
  2940  0D49  3D38               	addwfc	?___lmul+1,w
  2941  0D4A  0021               	movlb	1	; select bank1
  2942  0D4B  00BC               	movwf	(power_command@temp+1)^(0+128)
  2943  0D4C  3000               	movlw	0
  2944  0D4D  0020               	movlb	0	; select bank0
  2945  0D4E  3D39               	addwfc	?___lmul+2,w
  2946  0D4F  0021               	movlb	1	; select bank1
  2947  0D50  00BD               	movwf	(power_command@temp+2)^(0+128)
  2948  0D51  3000               	movlw	0
  2949  0D52  0020               	movlb	0	; select bank0
  2950  0D53  3D3A               	addwfc	?___lmul+3,w
  2951  0D54  0021               	movlb	1	; select bank1
  2952  0D55  00BE               	movwf	(power_command@temp+3)^(0+128)
  2953                           
  2954                           ;Main.c: 234: remote_power_level = temp >> 16;
  2955  0D56  083B               	movf	power_command@temp^(0+128),w
  2956  0D57  00B5               	movwf	??_power_command^(0+128)
  2957  0D58  083C               	movf	(power_command@temp+1)^(0+128),w
  2958  0D59  00B6               	movwf	(??_power_command^(0+128)+1)
  2959  0D5A  083D               	movf	(power_command@temp+2)^(0+128),w
  2960  0D5B  00B7               	movwf	(??_power_command^(0+128)+2)
  2961  0D5C  083E               	movf	(power_command@temp+3)^(0+128),w
  2962  0D5D  00B8               	movwf	(??_power_command^(0+128)+3)
  2963  0D5E  3010               	movlw	16
  2964  0D5F  00B9               	movwf	(??_power_command+4)^(0+128)
  2965  0D60                     u6515:	
  2966  0D60  37B8               	asrf	(??_power_command^(0+128)+3),f
  2967  0D61  0CB7               	rrf	(??_power_command^(0+128)+2),f
  2968  0D62  0CB6               	rrf	(??_power_command^(0+128)+1),f
  2969  0D63  0CB5               	rrf	??_power_command^(0+128),f
  2970  0D64  0BB9               	decfsz	(??_power_command+4)^(0+128),f
  2971  0D65  2D60               	goto	u6515
  2972  0D66  0835               	movf	??_power_command^(0+128),w
  2973  0D67  00BA               	movwf	(??_power_command+5)^(0+128)
  2974  0D68  083A               	movf	(??_power_command+5)^(0+128),w
  2975  0D69  0020               	movlb	0	; select bank0
  2976  0D6A  00D5               	movwf	_remote_power_level
  2977                           
  2978                           ;Main.c: 235: return 0;
  2979  0D6B  0021               	movlb	1	; select bank1
  2980  0D6C  01B3               	clrf	?_power_command^(0+128)
  2981  0D6D  01B4               	clrf	(?_power_command+1)^(0+128)
  2982  0D6E  0008               	return
  2983  0D6F                     __end_of_power_command:	
  2984                           
  2985                           	psect	text4
  2986  0BC8                     __ptext4:	
  2987 ;; *************** function _pulse_command *****************
  2988 ;; Defined at:
  2989 ;;		line 212 in file "Main.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;  param1          1   19[BANK1 ] PTR unsigned char 
  2992 ;;		 -> main@cmd_descr(12), 
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  val             2   22[BANK1 ] int 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  2   19[BANK1 ] int 
  2997 ;; Registers used:
  2998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3004 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3005 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;Total ram usage:        5 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    4
  3011 ;; This function calls:
  3012 ;;		_atoi
  3013 ;;		_strlen
  3014 ;; This function is called by:
  3015 ;;		_main
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           
  3020                           ;psect for function _pulse_command
  3021  0BC8                     _pulse_command:	
  3022                           
  3023                           ;Main.c: 214: int val;
  3024                           ;Main.c: 216: if (strlen(param1) == 0) return -1;
  3025                           
  3026                           ;incstack = 0
  3027                           ; Regs used in _pulse_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3028  0BC8  0021               	movlb	1	; select bank1
  3029  0BC9  0833               	movf	pulse_command@param1^(0+128),w
  3030  0BCA  0020               	movlb	0	; select bank0
  3031  0BCB  00B7               	movwf	strlen@s
  3032  0BCC  3000               	movlw	0
  3033  0BCD  00B8               	movwf	strlen@s+1
  3034  0BCE  3189  216E  318B   	fcall	_strlen
  3035  0BD1  0020               	movlb	0	; select bank0
  3036  0BD2  0838               	movf	?_strlen+1,w
  3037  0BD3  0437               	iorwf	?_strlen,w
  3038  0BD4  1D03               	skipz
  3039  0BD5  2BDC               	goto	l4268
  3040  0BD6  30FF               	movlw	255
  3041  0BD7  0021               	movlb	1	; select bank1
  3042  0BD8  00B3               	movwf	?_pulse_command^(0+128)
  3043  0BD9  30FF               	movlw	255
  3044  0BDA  00B4               	movwf	(?_pulse_command^(0+128)+1)
  3045  0BDB  0008               	return
  3046  0BDC                     l4268:	
  3047                           
  3048                           ;Main.c: 217: val = atoi(param1);
  3049  0BDC  0021               	movlb	1	; select bank1
  3050  0BDD  0833               	movf	pulse_command@param1^(0+128),w
  3051  0BDE  318D  256F  318B   	fcall	_atoi
  3052  0BE1  0020               	movlb	0	; select bank0
  3053  0BE2  083E               	movf	?_atoi+1,w
  3054  0BE3  0021               	movlb	1	; select bank1
  3055  0BE4  01B7               	clrf	(pulse_command@val+1)^(0+128)
  3056  0BE5  07B7               	addwf	(pulse_command@val+1)^(0+128),f
  3057  0BE6  0020               	movlb	0	; select bank0
  3058  0BE7  083D               	movf	?_atoi,w
  3059  0BE8  0021               	movlb	1	; select bank1
  3060  0BE9  01B6               	clrf	pulse_command@val^(0+128)
  3061  0BEA  07B6               	addwf	pulse_command@val^(0+128),f
  3062                           
  3063                           ;Main.c: 218: if (val < 0 || val > 1) return -2;
  3064  0BEB  1BB7               	btfsc	(pulse_command@val+1)^(0+128),7
  3065  0BEC  2BF8               	goto	l4274
  3066  0BED  0837               	movf	(pulse_command@val+1)^(0+128),w
  3067  0BEE  3A80               	xorlw	128
  3068  0BEF  00B5               	movwf	??_pulse_command^(0+128)
  3069  0BF0  3080               	movlw	128
  3070  0BF1  0235               	subwf	??_pulse_command^(0+128),w
  3071  0BF2  1D03               	skipz
  3072  0BF3  2BF6               	goto	u6465
  3073  0BF4  3002               	movlw	2
  3074  0BF5  0236               	subwf	pulse_command@val^(0+128),w
  3075  0BF6                     u6465:	
  3076  0BF6  1C03               	skipc
  3077  0BF7  2BFE               	goto	l310
  3078  0BF8                     l4274:	
  3079  0BF8  30FE               	movlw	254
  3080  0BF9  0021               	movlb	1	; select bank1
  3081  0BFA  00B3               	movwf	?_pulse_command^(0+128)
  3082  0BFB  30FF               	movlw	255
  3083  0BFC  00B4               	movwf	(?_pulse_command^(0+128)+1)
  3084  0BFD  0008               	return
  3085  0BFE                     l310:	
  3086                           
  3087                           ;Main.c: 219: pulse_enabled = val;
  3088  0BFE  11FC               	bcf	_pulse_enabled/(0+8),_pulse_enabled& (0+7)
  3089  0BFF  0021               	movlb	1	; select bank1
  3090  0C00  1836               	btfsc	pulse_command@val^(0+128),0
  3091  0C01  15FC               	bsf	_pulse_enabled/(0+8),_pulse_enabled& (0+7)
  3092                           
  3093                           ;Main.c: 220: return 0;
  3094  0C02  0021               	movlb	1	; select bank1
  3095  0C03  01B3               	clrf	?_pulse_command^(0+128)
  3096  0C04  01B4               	clrf	(?_pulse_command+1)^(0+128)
  3097  0C05  0008               	return
  3098  0C06                     __end_of_pulse_command:	
  3099                           
  3100                           	psect	text5
  3101  0B8A                     __ptext5:	
  3102 ;; *************** function _enable2_command *****************
  3103 ;; Defined at:
  3104 ;;		line 201 in file "Main.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  param1          1   19[BANK1 ] PTR unsigned char 
  3107 ;;		 -> main@cmd_descr(12), 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  val             2   22[BANK1 ] int 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  2   19[BANK1 ] int 
  3112 ;; Registers used:
  3113 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3119 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3120 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3121 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3122 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3123 ;;Total ram usage:        5 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    4
  3126 ;; This function calls:
  3127 ;;		_atoi
  3128 ;;		_strlen
  3129 ;; This function is called by:
  3130 ;;		_main
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           
  3135                           ;psect for function _enable2_command
  3136  0B8A                     _enable2_command:	
  3137                           
  3138                           ;Main.c: 203: int val;
  3139                           ;Main.c: 205: if (strlen(param1) == 0) return -1;
  3140                           
  3141                           ;incstack = 0
  3142                           ; Regs used in _enable2_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3143  0B8A  0021               	movlb	1	; select bank1
  3144  0B8B  0833               	movf	enable2_command@param1^(0+128),w
  3145  0B8C  0020               	movlb	0	; select bank0
  3146  0B8D  00B7               	movwf	strlen@s
  3147  0B8E  3000               	movlw	0
  3148  0B8F  00B8               	movwf	strlen@s+1
  3149  0B90  3189  216E  318B   	fcall	_strlen
  3150  0B93  0020               	movlb	0	; select bank0
  3151  0B94  0838               	movf	?_strlen+1,w
  3152  0B95  0437               	iorwf	?_strlen,w
  3153  0B96  1D03               	skipz
  3154  0B97  2B9E               	goto	l4248
  3155  0B98  30FF               	movlw	255
  3156  0B99  0021               	movlb	1	; select bank1
  3157  0B9A  00B3               	movwf	?_enable2_command^(0+128)
  3158  0B9B  30FF               	movlw	255
  3159  0B9C  00B4               	movwf	(?_enable2_command^(0+128)+1)
  3160  0B9D  0008               	return
  3161  0B9E                     l4248:	
  3162                           
  3163                           ;Main.c: 206: val = atoi(param1);
  3164  0B9E  0021               	movlb	1	; select bank1
  3165  0B9F  0833               	movf	enable2_command@param1^(0+128),w
  3166  0BA0  318D  256F  318B   	fcall	_atoi
  3167  0BA3  0020               	movlb	0	; select bank0
  3168  0BA4  083E               	movf	?_atoi+1,w
  3169  0BA5  0021               	movlb	1	; select bank1
  3170  0BA6  01B7               	clrf	(enable2_command@val+1)^(0+128)
  3171  0BA7  07B7               	addwf	(enable2_command@val+1)^(0+128),f
  3172  0BA8  0020               	movlb	0	; select bank0
  3173  0BA9  083D               	movf	?_atoi,w
  3174  0BAA  0021               	movlb	1	; select bank1
  3175  0BAB  01B6               	clrf	enable2_command@val^(0+128)
  3176  0BAC  07B6               	addwf	enable2_command@val^(0+128),f
  3177                           
  3178                           ;Main.c: 207: if (val < 0 || val > 1) return -2;
  3179  0BAD  1BB7               	btfsc	(enable2_command@val+1)^(0+128),7
  3180  0BAE  2BBA               	goto	l4254
  3181  0BAF  0837               	movf	(enable2_command@val+1)^(0+128),w
  3182  0BB0  3A80               	xorlw	128
  3183  0BB1  00B5               	movwf	??_enable2_command^(0+128)
  3184  0BB2  3080               	movlw	128
  3185  0BB3  0235               	subwf	??_enable2_command^(0+128),w
  3186  0BB4  1D03               	skipz
  3187  0BB5  2BB8               	goto	u6425
  3188  0BB6  3002               	movlw	2
  3189  0BB7  0236               	subwf	enable2_command@val^(0+128),w
  3190  0BB8                     u6425:	
  3191  0BB8  1C03               	skipc
  3192  0BB9  2BC0               	goto	l303
  3193  0BBA                     l4254:	
  3194  0BBA  30FE               	movlw	254
  3195  0BBB  0021               	movlb	1	; select bank1
  3196  0BBC  00B3               	movwf	?_enable2_command^(0+128)
  3197  0BBD  30FF               	movlw	255
  3198  0BBE  00B4               	movwf	(?_enable2_command^(0+128)+1)
  3199  0BBF  0008               	return
  3200  0BC0                     l303:	
  3201                           
  3202                           ;Main.c: 208: channel2_enabled = val;
  3203  0BC0  10FC               	bcf	_channel2_enabled/(0+8),_channel2_enabled& (0+7)
  3204  0BC1  0021               	movlb	1	; select bank1
  3205  0BC2  1836               	btfsc	enable2_command@val^(0+128),0
  3206  0BC3  14FC               	bsf	_channel2_enabled/(0+8),_channel2_enabled& (0+7)
  3207                           
  3208                           ;Main.c: 209: return 0;
  3209  0BC4  0021               	movlb	1	; select bank1
  3210  0BC5  01B3               	clrf	?_enable2_command^(0+128)
  3211  0BC6  01B4               	clrf	(?_enable2_command+1)^(0+128)
  3212  0BC7  0008               	return
  3213  0BC8                     __end_of_enable2_command:	
  3214                           
  3215                           	psect	text6
  3216  0B4C                     __ptext6:	
  3217 ;; *************** function _enable1_command *****************
  3218 ;; Defined at:
  3219 ;;		line 190 in file "Main.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  param1          1   19[BANK1 ] PTR unsigned char 
  3222 ;;		 -> main@cmd_descr(12), 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  val             2   22[BANK1 ] int 
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  2   19[BANK1 ] int 
  3227 ;; Registers used:
  3228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3234 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3235 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3236 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3237 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3238 ;;Total ram usage:        5 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    4
  3241 ;; This function calls:
  3242 ;;		_atoi
  3243 ;;		_strlen
  3244 ;; This function is called by:
  3245 ;;		_main
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           
  3250                           ;psect for function _enable1_command
  3251  0B4C                     _enable1_command:	
  3252                           
  3253                           ;Main.c: 192: int val;
  3254                           ;Main.c: 194: if (strlen(param1) == 0) return -1;
  3255                           
  3256                           ;incstack = 0
  3257                           ; Regs used in _enable1_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3258  0B4C  0021               	movlb	1	; select bank1
  3259  0B4D  0833               	movf	enable1_command@param1^(0+128),w
  3260  0B4E  0020               	movlb	0	; select bank0
  3261  0B4F  00B7               	movwf	strlen@s
  3262  0B50  3000               	movlw	0
  3263  0B51  00B8               	movwf	strlen@s+1
  3264  0B52  3189  216E  318B   	fcall	_strlen
  3265  0B55  0020               	movlb	0	; select bank0
  3266  0B56  0838               	movf	?_strlen+1,w
  3267  0B57  0437               	iorwf	?_strlen,w
  3268  0B58  1D03               	skipz
  3269  0B59  2B60               	goto	l4228
  3270  0B5A  30FF               	movlw	255
  3271  0B5B  0021               	movlb	1	; select bank1
  3272  0B5C  00B3               	movwf	?_enable1_command^(0+128)
  3273  0B5D  30FF               	movlw	255
  3274  0B5E  00B4               	movwf	(?_enable1_command^(0+128)+1)
  3275  0B5F  0008               	return
  3276  0B60                     l4228:	
  3277                           
  3278                           ;Main.c: 195: val = atoi(param1);
  3279  0B60  0021               	movlb	1	; select bank1
  3280  0B61  0833               	movf	enable1_command@param1^(0+128),w
  3281  0B62  318D  256F  318B   	fcall	_atoi
  3282  0B65  0020               	movlb	0	; select bank0
  3283  0B66  083E               	movf	?_atoi+1,w
  3284  0B67  0021               	movlb	1	; select bank1
  3285  0B68  01B7               	clrf	(enable1_command@val+1)^(0+128)
  3286  0B69  07B7               	addwf	(enable1_command@val+1)^(0+128),f
  3287  0B6A  0020               	movlb	0	; select bank0
  3288  0B6B  083D               	movf	?_atoi,w
  3289  0B6C  0021               	movlb	1	; select bank1
  3290  0B6D  01B6               	clrf	enable1_command@val^(0+128)
  3291  0B6E  07B6               	addwf	enable1_command@val^(0+128),f
  3292                           
  3293                           ;Main.c: 196: if (val < 0 || val > 1) return -2;
  3294  0B6F  1BB7               	btfsc	(enable1_command@val+1)^(0+128),7
  3295  0B70  2B7C               	goto	l4234
  3296  0B71  0837               	movf	(enable1_command@val+1)^(0+128),w
  3297  0B72  3A80               	xorlw	128
  3298  0B73  00B5               	movwf	??_enable1_command^(0+128)
  3299  0B74  3080               	movlw	128
  3300  0B75  0235               	subwf	??_enable1_command^(0+128),w
  3301  0B76  1D03               	skipz
  3302  0B77  2B7A               	goto	u6385
  3303  0B78  3002               	movlw	2
  3304  0B79  0236               	subwf	enable1_command@val^(0+128),w
  3305  0B7A                     u6385:	
  3306  0B7A  1C03               	skipc
  3307  0B7B  2B82               	goto	l296
  3308  0B7C                     l4234:	
  3309  0B7C  30FE               	movlw	254
  3310  0B7D  0021               	movlb	1	; select bank1
  3311  0B7E  00B3               	movwf	?_enable1_command^(0+128)
  3312  0B7F  30FF               	movlw	255
  3313  0B80  00B4               	movwf	(?_enable1_command^(0+128)+1)
  3314  0B81  0008               	return
  3315  0B82                     l296:	
  3316                           
  3317                           ;Main.c: 197: channel1_enabled = val;
  3318  0B82  107C               	bcf	_channel1_enabled/(0+8),_channel1_enabled& (0+7)
  3319  0B83  0021               	movlb	1	; select bank1
  3320  0B84  1836               	btfsc	enable1_command@val^(0+128),0
  3321  0B85  147C               	bsf	_channel1_enabled/(0+8),_channel1_enabled& (0+7)
  3322                           
  3323                           ;Main.c: 198: return 0;
  3324  0B86  0021               	movlb	1	; select bank1
  3325  0B87  01B3               	clrf	?_enable1_command^(0+128)
  3326  0B88  01B4               	clrf	(?_enable1_command+1)^(0+128)
  3327  0B89  0008               	return
  3328  0B8A                     __end_of_enable1_command:	
  3329                           
  3330                           	psect	text7
  3331  0C06                     __ptext7:	
  3332 ;; *************** function _remote_command *****************
  3333 ;; Defined at:
  3334 ;;		line 179 in file "Main.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  param1          1   19[BANK1 ] PTR unsigned char 
  3337 ;;		 -> main@cmd_descr(12), 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  val             2   22[BANK1 ] int 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  2   19[BANK1 ] int 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3349 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3350 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3351 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3352 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3353 ;;Total ram usage:        5 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    4
  3356 ;; This function calls:
  3357 ;;		_atoi
  3358 ;;		_strlen
  3359 ;; This function is called by:
  3360 ;;		_main
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           
  3365                           ;psect for function _remote_command
  3366  0C06                     _remote_command:	
  3367                           
  3368                           ;Main.c: 181: int val;
  3369                           ;Main.c: 183: if (strlen(param1) == 0) return -1;
  3370                           
  3371                           ;incstack = 0
  3372                           ; Regs used in _remote_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3373  0C06  0021               	movlb	1	; select bank1
  3374  0C07  0833               	movf	remote_command@param1^(0+128),w
  3375  0C08  0020               	movlb	0	; select bank0
  3376  0C09  00B7               	movwf	strlen@s
  3377  0C0A  3000               	movlw	0
  3378  0C0B  00B8               	movwf	strlen@s+1
  3379  0C0C  3189  216E  318C   	fcall	_strlen
  3380  0C0F  0020               	movlb	0	; select bank0
  3381  0C10  0838               	movf	?_strlen+1,w
  3382  0C11  0437               	iorwf	?_strlen,w
  3383  0C12  1D03               	skipz
  3384  0C13  2C1A               	goto	l4208
  3385  0C14  30FF               	movlw	255
  3386  0C15  0021               	movlb	1	; select bank1
  3387  0C16  00B3               	movwf	?_remote_command^(0+128)
  3388  0C17  30FF               	movlw	255
  3389  0C18  00B4               	movwf	(?_remote_command^(0+128)+1)
  3390  0C19  0008               	return
  3391  0C1A                     l4208:	
  3392                           
  3393                           ;Main.c: 184: val = atoi(param1);
  3394  0C1A  0021               	movlb	1	; select bank1
  3395  0C1B  0833               	movf	remote_command@param1^(0+128),w
  3396  0C1C  318D  256F  318C   	fcall	_atoi
  3397  0C1F  0020               	movlb	0	; select bank0
  3398  0C20  083E               	movf	?_atoi+1,w
  3399  0C21  0021               	movlb	1	; select bank1
  3400  0C22  01B7               	clrf	(remote_command@val+1)^(0+128)
  3401  0C23  07B7               	addwf	(remote_command@val+1)^(0+128),f
  3402  0C24  0020               	movlb	0	; select bank0
  3403  0C25  083D               	movf	?_atoi,w
  3404  0C26  0021               	movlb	1	; select bank1
  3405  0C27  01B6               	clrf	remote_command@val^(0+128)
  3406  0C28  07B6               	addwf	remote_command@val^(0+128),f
  3407                           
  3408                           ;Main.c: 185: if (val < 0 || val > 1) return -2;
  3409  0C29  1BB7               	btfsc	(remote_command@val+1)^(0+128),7
  3410  0C2A  2C36               	goto	l4214
  3411  0C2B  0837               	movf	(remote_command@val+1)^(0+128),w
  3412  0C2C  3A80               	xorlw	128
  3413  0C2D  00B5               	movwf	??_remote_command^(0+128)
  3414  0C2E  3080               	movlw	128
  3415  0C2F  0235               	subwf	??_remote_command^(0+128),w
  3416  0C30  1D03               	skipz
  3417  0C31  2C34               	goto	u6345
  3418  0C32  3002               	movlw	2
  3419  0C33  0236               	subwf	remote_command@val^(0+128),w
  3420  0C34                     u6345:	
  3421  0C34  1C03               	skipc
  3422  0C35  2C3C               	goto	l289
  3423  0C36                     l4214:	
  3424  0C36  30FE               	movlw	254
  3425  0C37  0021               	movlb	1	; select bank1
  3426  0C38  00B3               	movwf	?_remote_command^(0+128)
  3427  0C39  30FF               	movlw	255
  3428  0C3A  00B4               	movwf	(?_remote_command^(0+128)+1)
  3429  0C3B  0008               	return
  3430  0C3C                     l289:	
  3431                           
  3432                           ;Main.c: 186: remote_enabled = val;
  3433  0C3C  0020               	movlb	0	; select bank0
  3434  0C3D  1058               	bcf	_remote_enabled/(0+8),_remote_enabled& (0+7)
  3435  0C3E  0021               	movlb	1	; select bank1
  3436  0C3F  1C36               	btfss	remote_command@val^(0+128),0
  3437  0C40  2C43               	goto	l4218
  3438  0C41  0020               	movlb	0	; select bank0
  3439  0C42  1458               	bsf	_remote_enabled/(0+8),_remote_enabled& (0+7)
  3440  0C43                     l4218:	
  3441                           
  3442                           ;Main.c: 187: return 0;
  3443  0C43  0021               	movlb	1	; select bank1
  3444  0C44  01B3               	clrf	?_remote_command^(0+128)
  3445  0C45  01B4               	clrf	(?_remote_command+1)^(0+128)
  3446  0C46  0008               	return
  3447  0C47                     __end_of_remote_command:	
  3448                           
  3449                           	psect	text8
  3450  0B0E                     __ptext8:	
  3451 ;; *************** function _echo_command *****************
  3452 ;; Defined at:
  3453 ;;		line 168 in file "Main.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  param1          1   19[BANK1 ] PTR unsigned char 
  3456 ;;		 -> main@cmd_descr(12), 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;  val             2   22[BANK1 ] int 
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  2   19[BANK1 ] int 
  3461 ;; Registers used:
  3462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3468 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3469 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3470 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3471 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3472 ;;Total ram usage:        5 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:    4
  3475 ;; This function calls:
  3476 ;;		_atoi
  3477 ;;		_strlen
  3478 ;; This function is called by:
  3479 ;;		_main
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           
  3484                           ;psect for function _echo_command
  3485  0B0E                     _echo_command:	
  3486                           
  3487                           ;Main.c: 170: int val;
  3488                           ;Main.c: 172: if (strlen(param1) == 0) return -1;
  3489                           
  3490                           ;incstack = 0
  3491                           ; Regs used in _echo_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3492  0B0E  0021               	movlb	1	; select bank1
  3493  0B0F  0833               	movf	echo_command@param1^(0+128),w
  3494  0B10  0020               	movlb	0	; select bank0
  3495  0B11  00B7               	movwf	strlen@s
  3496  0B12  3000               	movlw	0
  3497  0B13  00B8               	movwf	strlen@s+1
  3498  0B14  3189  216E  318B   	fcall	_strlen
  3499  0B17  0020               	movlb	0	; select bank0
  3500  0B18  0838               	movf	?_strlen+1,w
  3501  0B19  0437               	iorwf	?_strlen,w
  3502  0B1A  1D03               	skipz
  3503  0B1B  2B22               	goto	l4188
  3504  0B1C  30FF               	movlw	255
  3505  0B1D  0021               	movlb	1	; select bank1
  3506  0B1E  00B3               	movwf	?_echo_command^(0+128)
  3507  0B1F  30FF               	movlw	255
  3508  0B20  00B4               	movwf	(?_echo_command^(0+128)+1)
  3509  0B21  0008               	return
  3510  0B22                     l4188:	
  3511                           
  3512                           ;Main.c: 173: val = atoi(param1);
  3513  0B22  0021               	movlb	1	; select bank1
  3514  0B23  0833               	movf	echo_command@param1^(0+128),w
  3515  0B24  318D  256F  318B   	fcall	_atoi
  3516  0B27  0020               	movlb	0	; select bank0
  3517  0B28  083E               	movf	?_atoi+1,w
  3518  0B29  0021               	movlb	1	; select bank1
  3519  0B2A  01B7               	clrf	(echo_command@val+1)^(0+128)
  3520  0B2B  07B7               	addwf	(echo_command@val+1)^(0+128),f
  3521  0B2C  0020               	movlb	0	; select bank0
  3522  0B2D  083D               	movf	?_atoi,w
  3523  0B2E  0021               	movlb	1	; select bank1
  3524  0B2F  01B6               	clrf	echo_command@val^(0+128)
  3525  0B30  07B6               	addwf	echo_command@val^(0+128),f
  3526                           
  3527                           ;Main.c: 174: if (val < 0 || val > 1) return -2;
  3528  0B31  1BB7               	btfsc	(echo_command@val+1)^(0+128),7
  3529  0B32  2B3E               	goto	l4194
  3530  0B33  0837               	movf	(echo_command@val+1)^(0+128),w
  3531  0B34  3A80               	xorlw	128
  3532  0B35  00B5               	movwf	??_echo_command^(0+128)
  3533  0B36  3080               	movlw	128
  3534  0B37  0235               	subwf	??_echo_command^(0+128),w
  3535  0B38  1D03               	skipz
  3536  0B39  2B3C               	goto	u6305
  3537  0B3A  3002               	movlw	2
  3538  0B3B  0236               	subwf	echo_command@val^(0+128),w
  3539  0B3C                     u6305:	
  3540  0B3C  1C03               	skipc
  3541  0B3D  2B44               	goto	l282
  3542  0B3E                     l4194:	
  3543  0B3E  30FE               	movlw	254
  3544  0B3F  0021               	movlb	1	; select bank1
  3545  0B40  00B3               	movwf	?_echo_command^(0+128)
  3546  0B41  30FF               	movlw	255
  3547  0B42  00B4               	movwf	(?_echo_command^(0+128)+1)
  3548  0B43  0008               	return
  3549  0B44                     l282:	
  3550                           
  3551                           ;Main.c: 175: echo_enabled = val;
  3552  0B44  117C               	bcf	_echo_enabled/(0+8),_echo_enabled& (0+7)
  3553  0B45  0021               	movlb	1	; select bank1
  3554  0B46  1836               	btfsc	echo_command@val^(0+128),0
  3555  0B47  157C               	bsf	_echo_enabled/(0+8),_echo_enabled& (0+7)
  3556                           
  3557                           ;Main.c: 176: return 0;
  3558  0B48  0021               	movlb	1	; select bank1
  3559  0B49  01B3               	clrf	?_echo_command^(0+128)
  3560  0B4A  01B4               	clrf	(?_echo_command+1)^(0+128)
  3561  0B4B  0008               	return
  3562  0B4C                     __end_of_echo_command:	
  3563                           
  3564                           	psect	text9
  3565  02BE                     __ptext9:	
  3566 ;; *************** function _ttlout_command *****************
  3567 ;; Defined at:
  3568 ;;		line 238 in file "Main.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;  param1          1   19[BANK1 ] PTR unsigned char 
  3571 ;;		 -> main@cmd_descr(12), 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;  val             2   22[BANK1 ] int 
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  2   19[BANK1 ] int 
  3576 ;; Registers used:
  3577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3583 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3584 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3585 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3586 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3587 ;;Total ram usage:        5 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    4
  3590 ;; This function calls:
  3591 ;;		_atoi
  3592 ;;		_strlen
  3593 ;; This function is called by:
  3594 ;;		_main
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           
  3599                           ;psect for function _ttlout_command
  3600  02BE                     _ttlout_command:	
  3601                           
  3602                           ;Main.c: 240: int val;
  3603                           ;Main.c: 242: if (strlen(param1) == 0) return -1;
  3604                           
  3605                           ;incstack = 0
  3606                           ; Regs used in _ttlout_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3607  02BE  0021               	movlb	1	; select bank1
  3608  02BF  0833               	movf	ttlout_command@param1^(0+128),w
  3609  02C0  0020               	movlb	0	; select bank0
  3610  02C1  00B7               	movwf	strlen@s
  3611  02C2  3000               	movlw	0
  3612  02C3  00B8               	movwf	strlen@s+1
  3613  02C4  3189  216E  3182   	fcall	_strlen
  3614  02C7  0020               	movlb	0	; select bank0
  3615  02C8  0838               	movf	?_strlen+1,w
  3616  02C9  0437               	iorwf	?_strlen,w
  3617  02CA  1D03               	skipz
  3618  02CB  2AD2               	goto	l4312
  3619  02CC  30FF               	movlw	255
  3620  02CD  0021               	movlb	1	; select bank1
  3621  02CE  00B3               	movwf	?_ttlout_command^(0+128)
  3622  02CF  30FF               	movlw	255
  3623  02D0  00B4               	movwf	(?_ttlout_command^(0+128)+1)
  3624  02D1  0008               	return
  3625  02D2                     l4312:	
  3626                           
  3627                           ;Main.c: 243: val = atoi(param1);
  3628  02D2  0021               	movlb	1	; select bank1
  3629  02D3  0833               	movf	ttlout_command@param1^(0+128),w
  3630  02D4  318D  256F  3182   	fcall	_atoi
  3631  02D7  0020               	movlb	0	; select bank0
  3632  02D8  083E               	movf	?_atoi+1,w
  3633  02D9  0021               	movlb	1	; select bank1
  3634  02DA  01B7               	clrf	(ttlout_command@val+1)^(0+128)
  3635  02DB  07B7               	addwf	(ttlout_command@val+1)^(0+128),f
  3636  02DC  0020               	movlb	0	; select bank0
  3637  02DD  083D               	movf	?_atoi,w
  3638  02DE  0021               	movlb	1	; select bank1
  3639  02DF  01B6               	clrf	ttlout_command@val^(0+128)
  3640  02E0  07B6               	addwf	ttlout_command@val^(0+128),f
  3641                           
  3642                           ;Main.c: 244: if (val < 0 || val > 1) return -2;
  3643  02E1  1BB7               	btfsc	(ttlout_command@val+1)^(0+128),7
  3644  02E2  2AEE               	goto	l4318
  3645  02E3  0837               	movf	(ttlout_command@val+1)^(0+128),w
  3646  02E4  3A80               	xorlw	128
  3647  02E5  00B5               	movwf	??_ttlout_command^(0+128)
  3648  02E6  3080               	movlw	128
  3649  02E7  0235               	subwf	??_ttlout_command^(0+128),w
  3650  02E8  1D03               	skipz
  3651  02E9  2AEC               	goto	u6545
  3652  02EA  3002               	movlw	2
  3653  02EB  0236               	subwf	ttlout_command@val^(0+128),w
  3654  02EC                     u6545:	
  3655  02EC  1C03               	skipc
  3656  02ED  2AF4               	goto	l324
  3657  02EE                     l4318:	
  3658  02EE  30FE               	movlw	254
  3659  02EF  0021               	movlb	1	; select bank1
  3660  02F0  00B3               	movwf	?_ttlout_command^(0+128)
  3661  02F1  30FF               	movlw	255
  3662  02F2  00B4               	movwf	(?_ttlout_command^(0+128)+1)
  3663  02F3  0008               	return
  3664  02F4                     l324:	
  3665                           
  3666                           ;Main.c: 245: RA7 = ~val;
  3667  02F4  0021               	movlb	1	; select bank1
  3668  02F5  1836               	btfsc	ttlout_command@val^(0+128),0
  3669  02F6  2AFA               	goto	u6550
  3670  02F7  0020               	movlb	0	; select bank0
  3671  02F8  178C               	bsf	12,7	;volatile
  3672  02F9  2AFC               	goto	l4322
  3673  02FA                     u6550:	
  3674  02FA  0020               	movlb	0	; select bank0
  3675  02FB  138C               	bcf	12,7	;volatile
  3676  02FC                     l4322:	
  3677                           
  3678                           ;Main.c: 246: return 0;
  3679  02FC  0021               	movlb	1	; select bank1
  3680  02FD  01B3               	clrf	?_ttlout_command^(0+128)
  3681  02FE  01B4               	clrf	(?_ttlout_command+1)^(0+128)
  3682  02FF  0008               	return
  3683  0300                     __end_of_ttlout_command:	
  3684                           
  3685                           	psect	text10
  3686  0DF2                     __ptext10:	
  3687 ;; *************** function _sergetline *****************
  3688 ;; Defined at:
  3689 ;;		line 103 in file "support.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  buf             1    wreg     PTR unsigned char 
  3692 ;;		 -> main@cmdbuf(10), 
  3693 ;;  bsize           2    4[BANK1 ] int 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  buf             1    6[BANK1 ] PTR unsigned char 
  3696 ;;		 -> main@cmdbuf(10), 
  3697 ;;  i               2    7[BANK1 ] int 
  3698 ;;  c               1    9[BANK1 ] unsigned char 
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  2    4[BANK1 ] int 
  3701 ;; Registers used:
  3702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3708 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3709 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3710 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3711 ;;      Totals:         0       3       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3712 ;;Total ram usage:        9 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; Hardware stack levels required when called:    4
  3715 ;; This function calls:
  3716 ;;		_sergetchar
  3717 ;;		_serputchar
  3718 ;;		_serputstr
  3719 ;;		_tolower
  3720 ;; This function is called by:
  3721 ;;		_main
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           
  3726                           ;psect for function _sergetline
  3727  0DF2                     _sergetline:	
  3728                           
  3729                           ;incstack = 0
  3730                           ; Regs used in _sergetline: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3731                           ;sergetline@buf stored from wreg
  3732  0DF2  0021               	movlb	1	; select bank1
  3733  0DF3  00A6               	movwf	sergetline@buf^(0+128)
  3734                           
  3735                           ;support.c: 105: int i;
  3736                           ;support.c: 106: unsigned char c;
  3737                           ;support.c: 108: i = 0;
  3738  0DF4  01A7               	clrf	sergetline@i^(0+128)
  3739  0DF5  01A8               	clrf	(sergetline@i+1)^(0+128)
  3740  0DF6                     l4098:	
  3741                           ;support.c: 109: while(1) {
  3742                           
  3743                           
  3744                           ;support.c: 110: c = sergetchar();
  3745  0DF6  3188  20EB  318D   	fcall	_sergetchar
  3746  0DF9  0020               	movlb	0	; select bank0
  3747  0DFA  00C0               	movwf	??_sergetline
  3748  0DFB  0840               	movf	??_sergetline,w
  3749  0DFC  0021               	movlb	1	; select bank1
  3750  0DFD  00A9               	movwf	sergetline@c^(0+128)
  3751                           
  3752                           ;support.c: 111: c = tolower(c);
  3753  0DFE  0829               	movf	sergetline@c^(0+128),w
  3754  0DFF  3188  20FF  318D   	fcall	_tolower
  3755  0E02  0020               	movlb	0	; select bank0
  3756  0E03  00C0               	movwf	??_sergetline
  3757  0E04  0840               	movf	??_sergetline,w
  3758  0E05  0021               	movlb	1	; select bank1
  3759  0E06  00A9               	movwf	sergetline@c^(0+128)
  3760                           
  3761                           ;support.c: 113: if (c == 0x08 || c == 0x7f) {
  3762  0E07  0829               	movf	sergetline@c^(0+128),w
  3763  0E08  3A08               	xorlw	8
  3764  0E09  1903               	skipnz
  3765  0E0A  2E0F               	goto	l4106
  3766  0E0B  0829               	movf	sergetline@c^(0+128),w
  3767  0E0C  3A7F               	xorlw	127
  3768  0E0D  1D03               	skipz
  3769  0E0E  2E2C               	goto	l4114
  3770  0E0F                     l4106:	
  3771                           
  3772                           ;support.c: 114: if (i > 0) {
  3773  0E0F  0828               	movf	(sergetline@i+1)^(0+128),w
  3774  0E10  3A80               	xorlw	128
  3775  0E11  0020               	movlb	0	; select bank0
  3776  0E12  00C0               	movwf	??_sergetline
  3777  0E13  3080               	movlw	128
  3778  0E14  0240               	subwf	??_sergetline,w
  3779  0E15  1D03               	skipz
  3780  0E16  2E1A               	goto	u6175
  3781  0E17  3001               	movlw	1
  3782  0E18  0021               	movlb	1	; select bank1
  3783  0E19  0227               	subwf	sergetline@i^(0+128),w
  3784  0E1A                     u6175:	
  3785  0E1A  1C03               	skipc
  3786  0E1B  2DF6               	goto	l4098
  3787                           
  3788                           ;support.c: 115: if (echo_enabled) serputstr("\b \b");
  3789  0E1C  1D7C               	btfss	_echo_enabled/(0+8),_echo_enabled& (0+7)
  3790  0E1D  2E26               	goto	l4112
  3791  0E1E  3087               	movlw	low (STR_44| (0+32768))
  3792  0E1F  0020               	movlb	0	; select bank0
  3793  0E20  00BD               	movwf	serputstr@line
  3794  0E21  3084               	movlw	high (STR_44| (0+32768))
  3795  0E22  00BE               	movwf	serputstr@line+1
  3796  0E23  318A  225C  318D   	fcall	_serputstr
  3797  0E26                     l4112:	
  3798                           
  3799                           ;support.c: 116: --i;
  3800  0E26  30FF               	movlw	255
  3801  0E27  0021               	movlb	1	; select bank1
  3802  0E28  07A7               	addwf	sergetline@i^(0+128),f
  3803  0E29  30FF               	movlw	255
  3804  0E2A  3DA8               	addwfc	(sergetline@i+1)^(0+128),f
  3805                           
  3806                           ;support.c: 117: }
  3807                           ;support.c: 118: continue;
  3808  0E2B  2DF6               	goto	l4098
  3809  0E2C                     l4114:	
  3810                           
  3811                           ;support.c: 119: }
  3812                           ;support.c: 120: if (c == 0x0A) continue;
  3813  0E2C  0829               	movf	sergetline@c^(0+128),w
  3814  0E2D  3A0A               	xorlw	10
  3815  0E2E  1903               	btfsc	3,2
  3816  0E2F  2DF6               	goto	l4098
  3817                           
  3818                           ;support.c: 121: if (c == 0x0D) {
  3819  0E30  0829               	movf	sergetline@c^(0+128),w
  3820  0E31  3A0D               	xorlw	13
  3821  0E32  1D03               	skipz
  3822  0E33  2E3F               	goto	l4124
  3823                           
  3824                           ;support.c: 122: if (echo_enabled) serputstr("\r\n");
  3825  0E34  1D7C               	btfss	_echo_enabled/(0+8),_echo_enabled& (0+7)
  3826  0E35  2E77               	goto	l4138
  3827  0E36  30A8               	movlw	low ((STR_1+30)| (0+32768))
  3828  0E37  0020               	movlb	0	; select bank0
  3829  0E38  00BD               	movwf	serputstr@line
  3830  0E39  3083               	movlw	high ((STR_1+30)| (0+32768))
  3831  0E3A  00BE               	movwf	serputstr@line+1
  3832  0E3B  318A  225C  318D   	fcall	_serputstr
  3833                           
  3834                           ;support.c: 123: break;
  3835  0E3E  2E77               	goto	l4138
  3836  0E3F                     l4124:	
  3837                           
  3838                           ;support.c: 124: }
  3839                           ;support.c: 125: buf[i++] = c;
  3840  0E3F  0021               	movlb	1	; select bank1
  3841  0E40  0829               	movf	sergetline@c^(0+128),w
  3842  0E41  0020               	movlb	0	; select bank0
  3843  0E42  00C0               	movwf	??_sergetline
  3844  0E43  0021               	movlb	1	; select bank1
  3845  0E44  0827               	movf	sergetline@i^(0+128),w
  3846  0E45  0726               	addwf	sergetline@buf^(0+128),w
  3847  0E46  0020               	movlb	0	; select bank0
  3848  0E47  00C1               	movwf	??_sergetline+1
  3849  0E48  0841               	movf	??_sergetline+1,w
  3850  0E49  0086               	movwf	6
  3851  0E4A  0187               	clrf	7
  3852  0E4B  0840               	movf	??_sergetline,w
  3853  0E4C  0081               	movwf	1
  3854  0E4D  3001               	movlw	1
  3855  0E4E  0021               	movlb	1	; select bank1
  3856  0E4F  07A7               	addwf	sergetline@i^(0+128),f
  3857  0E50  3000               	movlw	0
  3858  0E51  3DA8               	addwfc	(sergetline@i+1)^(0+128),f
  3859                           
  3860                           ;support.c: 126: if (echo_enabled) serputchar(c);
  3861  0E52  1D7C               	btfss	_echo_enabled/(0+8),_echo_enabled& (0+7)
  3862  0E53  2E58               	goto	l4132
  3863  0E54  0829               	movf	sergetline@c^(0+128),w
  3864  0E55  3188  20F7  318D   	fcall	_serputchar
  3865  0E58                     l4132:	
  3866                           
  3867                           ;support.c: 127: if (i >= (bsize - 1)) return -1;
  3868  0E58  0021               	movlb	1	; select bank1
  3869  0E59  0824               	movf	sergetline@bsize^(0+128),w
  3870  0E5A  3EFF               	addlw	255
  3871  0E5B  0020               	movlb	0	; select bank0
  3872  0E5C  00C0               	movwf	??_sergetline
  3873  0E5D  30FF               	movlw	255
  3874  0E5E  0021               	movlb	1	; select bank1
  3875  0E5F  3D25               	addwfc	(sergetline@bsize+1)^(0+128),w
  3876  0E60  0020               	movlb	0	; select bank0
  3877  0E61  00C1               	movwf	??_sergetline+1
  3878  0E62  0021               	movlb	1	; select bank1
  3879  0E63  0828               	movf	(sergetline@i+1)^(0+128),w
  3880  0E64  3A80               	xorlw	128
  3881  0E65  0020               	movlb	0	; select bank0
  3882  0E66  00C2               	movwf	??_sergetline+2
  3883  0E67  0841               	movf	??_sergetline+1,w
  3884  0E68  3A80               	xorlw	128
  3885  0E69  0242               	subwf	??_sergetline+2,w
  3886  0E6A  1D03               	skipz
  3887  0E6B  2E6F               	goto	u6235
  3888  0E6C  0840               	movf	??_sergetline,w
  3889  0E6D  0021               	movlb	1	; select bank1
  3890  0E6E  0227               	subwf	sergetline@i^(0+128),w
  3891  0E6F                     u6235:	
  3892  0E6F  1C03               	skipc
  3893  0E70  2DF6               	goto	l4098
  3894  0E71  30FF               	movlw	255
  3895  0E72  0021               	movlb	1	; select bank1
  3896  0E73  00A4               	movwf	?_sergetline^(0+128)
  3897  0E74  30FF               	movlw	255
  3898  0E75  00A5               	movwf	(?_sergetline^(0+128)+1)
  3899  0E76  0008               	return
  3900  0E77                     l4138:	
  3901                           
  3902                           ;support.c: 128: }
  3903                           ;support.c: 129: buf[i] = 0;
  3904  0E77  0021               	movlb	1	; select bank1
  3905  0E78  0827               	movf	sergetline@i^(0+128),w
  3906  0E79  0726               	addwf	sergetline@buf^(0+128),w
  3907  0E7A  0020               	movlb	0	; select bank0
  3908  0E7B  00C0               	movwf	??_sergetline
  3909  0E7C  0840               	movf	??_sergetline,w
  3910  0E7D  0086               	movwf	6
  3911  0E7E  0187               	clrf	7
  3912  0E7F  0181               	clrf	1
  3913                           
  3914                           ;support.c: 130: return 0;
  3915  0E80  0021               	movlb	1	; select bank1
  3916  0E81  01A4               	clrf	?_sergetline^(0+128)
  3917  0E82  01A5               	clrf	(?_sergetline+1)^(0+128)
  3918  0E83  0008               	return
  3919  0E84                     __end_of_sergetline:	
  3920                           
  3921                           	psect	text11
  3922  08FF                     __ptext11:	
  3923 ;; *************** function _tolower *****************
  3924 ;; Defined at:
  3925 ;;		line 5 in file "/Applications/microchip/xc8/v1.32/sources/common/tolower.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  c               1    wreg     unsigned char 
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;  c               1   23[BANK0 ] unsigned char 
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      unsigned char 
  3932 ;; Registers used:
  3933 ;;		wreg
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3940 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3942 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3943 ;;Total ram usage:        1 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    2
  3946 ;; This function calls:
  3947 ;;		Nothing
  3948 ;; This function is called by:
  3949 ;;		_sergetline
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           
  3954                           ;psect for function _tolower
  3955  08FF                     _tolower:	
  3956                           
  3957                           ;incstack = 0
  3958                           ; Regs used in _tolower: [wreg]
  3959                           ;tolower@c stored from wreg
  3960  08FF  0020               	movlb	0	; select bank0
  3961  0900  00B7               	movwf	tolower@c
  3962  0901  305B               	movlw	91
  3963  0902  0237               	subwf	tolower@c,w
  3964  0903  1803               	skipnc
  3965  0904  290A               	goto	l3302
  3966  0905  3041               	movlw	65
  3967  0906  0237               	subwf	tolower@c,w
  3968  0907  1C03               	skipc
  3969  0908  290A               	goto	l3302
  3970  0909  16B7               	bsf	tolower@c,5
  3971  090A                     l3302:	
  3972  090A  0837               	movf	tolower@c,w
  3973  090B  0008               	return
  3974  090C                     __end_of_tolower:	
  3975                           
  3976                           	psect	text12
  3977  08EB                     __ptext12:	
  3978 ;; *************** function _sergetchar *****************
  3979 ;; Defined at:
  3980 ;;		line 87 in file "support.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;		None
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;		None
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      unsigned char 
  3987 ;; Registers used:
  3988 ;;		wreg
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3998 ;;Total ram usage:        0 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; Hardware stack levels required when called:    2
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		_sergetline
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           
  4009                           ;psect for function _sergetchar
  4010  08EB                     _sergetchar:	
  4011  08EB                     l446:	
  4012                           ;support.c: 89: while(RCIF == 0);
  4013                           
  4014                           ;incstack = 0
  4015                           ; Regs used in _sergetchar: [wreg]
  4016                           
  4017  08EB  0020               	movlb	0	; select bank0
  4018  08EC  1E91               	btfss	17,5	;volatile
  4019  08ED  28EB               	goto	l446
  4020                           
  4021                           ;support.c: 90: return RCREG;
  4022  08EE  0023               	movlb	3	; select bank3
  4023  08EF  0819               	movf	25,w	;volatile
  4024  08F0  0008               	return
  4025  08F1                     __end_of_sergetchar:	
  4026                           
  4027                           	psect	text13
  4028  09BF                     __ptext13:	
  4029 ;; *************** function ___lmul *****************
  4030 ;; Defined at:
  4031 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul32.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  multiplier      4   23[BANK0 ] unsigned long 
  4034 ;;  multiplicand    4   27[BANK0 ] unsigned long 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  product         4   31[BANK0 ] unsigned long 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  4   23[BANK0 ] unsigned long 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4046 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4049 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4050 ;;Total ram usage:       12 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:    2
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_main
  4057 ;;		_power_command
  4058 ;;		_status_command
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           
  4063                           ;psect for function ___lmul
  4064  09BF                     ___lmul:	
  4065                           
  4066                           ;incstack = 0
  4067                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4068  09BF  3000               	movlw	0
  4069  09C0  0020               	movlb	0	; select bank0
  4070  09C1  00C2               	movwf	___lmul@product+3
  4071  09C2  3000               	movlw	0
  4072  09C3  00C1               	movwf	___lmul@product+2
  4073  09C4  3000               	movlw	0
  4074  09C5  00C0               	movwf	___lmul@product+1
  4075  09C6  3000               	movlw	0
  4076  09C7  00BF               	movwf	___lmul@product
  4077  09C8                     l3308:	
  4078  09C8  1C37               	btfss	___lmul@multiplier,0
  4079  09C9  29D2               	goto	l3312
  4080  09CA  083B               	movf	___lmul@multiplicand,w
  4081  09CB  07BF               	addwf	___lmul@product,f
  4082  09CC  083C               	movf	___lmul@multiplicand+1,w
  4083  09CD  3DC0               	addwfc	___lmul@product+1,f
  4084  09CE  083D               	movf	___lmul@multiplicand+2,w
  4085  09CF  3DC1               	addwfc	___lmul@product+2,f
  4086  09D0  083E               	movf	___lmul@multiplicand+3,w
  4087  09D1  3DC2               	addwfc	___lmul@product+3,f
  4088  09D2                     l3312:	
  4089  09D2  3001               	movlw	1
  4090  09D3                     u4475:	
  4091  09D3  35BB               	lslf	___lmul@multiplicand,f
  4092  09D4  0DBC               	rlf	___lmul@multiplicand+1,f
  4093  09D5  0DBD               	rlf	___lmul@multiplicand+2,f
  4094  09D6  0DBE               	rlf	___lmul@multiplicand+3,f
  4095  09D7  0B89               	decfsz	9,f
  4096  09D8  29D3               	goto	u4475
  4097  09D9  3001               	movlw	1
  4098  09DA                     u4485:	
  4099  09DA  36BA               	lsrf	___lmul@multiplier+3,f
  4100  09DB  0CB9               	rrf	___lmul@multiplier+2,f
  4101  09DC  0CB8               	rrf	___lmul@multiplier+1,f
  4102  09DD  0CB7               	rrf	___lmul@multiplier,f
  4103  09DE  0B89               	decfsz	9,f
  4104  09DF  29DA               	goto	u4485
  4105  09E0  083A               	movf	___lmul@multiplier+3,w
  4106  09E1  0439               	iorwf	___lmul@multiplier+2,w
  4107  09E2  0438               	iorwf	___lmul@multiplier+1,w
  4108  09E3  0437               	iorwf	___lmul@multiplier,w
  4109  09E4  1D03               	skipz
  4110  09E5  29C8               	goto	l3308
  4111  09E6  0842               	movf	___lmul@product+3,w
  4112  09E7  00BA               	movwf	?___lmul+3
  4113  09E8  0841               	movf	___lmul@product+2,w
  4114  09E9  00B9               	movwf	?___lmul+2
  4115  09EA  0840               	movf	___lmul@product+1,w
  4116  09EB  00B8               	movwf	?___lmul+1
  4117  09EC  083F               	movf	___lmul@product,w
  4118  09ED  00B7               	movwf	?___lmul
  4119  09EE  0008               	return
  4120  09EF                     __end_of___lmul:	
  4121                           
  4122                           	psect	text14
  4123  0C47                     __ptext14:	
  4124 ;; *************** function _pic_setup *****************
  4125 ;; Defined at:
  4126 ;;		line 8 in file "support.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;		None               void
  4133 ;; Registers used:
  4134 ;;		wreg, status,2
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4144 ;;Total ram usage:        0 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; Hardware stack levels required when called:    2
  4147 ;; This function calls:
  4148 ;;		Nothing
  4149 ;; This function is called by:
  4150 ;;		_main
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           
  4155                           ;psect for function _pic_setup
  4156  0C47                     _pic_setup:	
  4157                           
  4158                           ;support.c: 11: OSCCON = 0xF0;
  4159                           
  4160                           ;incstack = 0
  4161                           ; Regs used in _pic_setup: [wreg+status,2]
  4162  0C47  30F0               	movlw	240
  4163  0C48  0021               	movlb	1	; select bank1
  4164  0C49  0099               	movwf	25	;volatile
  4165                           
  4166                           ;support.c: 14: TRISA = ~0x84;
  4167  0C4A  307B               	movlw	123
  4168  0C4B  008C               	movwf	12	;volatile
  4169                           
  4170                           ;support.c: 17: TRISB = ~0x3F;
  4171  0C4C  30C0               	movlw	192
  4172  0C4D  008D               	movwf	13	;volatile
  4173                           
  4174                           ;support.c: 20: TRISC = ~0x0F;
  4175  0C4E  30F0               	movlw	240
  4176  0C4F  008E               	movwf	14	;volatile
  4177                           
  4178                           ;support.c: 23: ANSELA = 0x03;
  4179  0C50  3003               	movlw	3
  4180  0C51  0023               	movlb	3	; select bank3
  4181  0C52  008C               	movwf	12	;volatile
  4182                           
  4183                           ;support.c: 26: ANSELB = 0x00;
  4184  0C53  018D               	clrf	13	;volatile
  4185                           
  4186                           ;support.c: 29: RC2 = 0;
  4187  0C54  0020               	movlb	0	; select bank0
  4188  0C55  110E               	bcf	14,2	;volatile
  4189                           
  4190                           ;support.c: 30: RC0 = 0;
  4191  0C56  100E               	bcf	14,0	;volatile
  4192                           
  4193                           ;support.c: 31: RC3 = 0;
  4194  0C57  118E               	bcf	14,3	;volatile
  4195                           
  4196                           ;support.c: 32: RC1 = 0;
  4197  0C58  108E               	bcf	14,1	;volatile
  4198                           
  4199                           ;support.c: 33: RB0 = 1;
  4200  0C59  140D               	bsf	13,0	;volatile
  4201                           
  4202                           ;support.c: 34: RB1 = 1;
  4203  0C5A  148D               	bsf	13,1	;volatile
  4204                           
  4205                           ;support.c: 35: RB2 = 1;
  4206  0C5B  150D               	bsf	13,2	;volatile
  4207                           
  4208                           ;support.c: 36: RB3 = 1;
  4209  0C5C  158D               	bsf	13,3	;volatile
  4210                           
  4211                           ;support.c: 37: RB4 = 1;
  4212  0C5D  160D               	bsf	13,4	;volatile
  4213                           
  4214                           ;support.c: 38: RB5 = 1;
  4215  0C5E  168D               	bsf	13,5	;volatile
  4216                           
  4217                           ;support.c: 39: RA7 = 1;
  4218  0C5F  178C               	bsf	12,7	;volatile
  4219                           
  4220                           ;support.c: 42: ADCON1 = 0x60;
  4221  0C60  3060               	movlw	96
  4222  0C61  0021               	movlb	1	; select bank1
  4223  0C62  009E               	movwf	30	;volatile
  4224                           
  4225                           ;support.c: 45: ADCON0 = 0x01;
  4226  0C63  3001               	movlw	1
  4227  0C64  009D               	movwf	29	;volatile
  4228                           
  4229                           ;support.c: 49: OPTION_REG = 0x04;
  4230  0C65  3004               	movlw	4
  4231  0C66  0095               	movwf	21	;volatile
  4232                           
  4233                           ;support.c: 52: CCP2CON = 0x0C;
  4234  0C67  300C               	movlw	12
  4235  0C68  0025               	movlb	5	; select bank5
  4236  0C69  009A               	movwf	26	;volatile
  4237                           
  4238                           ;support.c: 53: CCPTMRS0 = 0x00;
  4239  0C6A  019E               	clrf	30	;volatile
  4240                           
  4241                           ;support.c: 54: PR2 = 0x3F;
  4242  0C6B  303F               	movlw	63
  4243  0C6C  0020               	movlb	0	; select bank0
  4244  0C6D  009B               	movwf	27	;volatile
  4245                           
  4246                           ;support.c: 55: T2CON = 0x04;
  4247  0C6E  3004               	movlw	4
  4248  0C6F  009C               	movwf	28	;volatile
  4249                           
  4250                           ;support.c: 56: CCPR2L = 0x00;
  4251  0C70  0025               	movlb	5	; select bank5
  4252  0C71  0198               	clrf	24	;volatile
  4253                           
  4254                           ;support.c: 59: BRG16 = 1;
  4255  0C72  0023               	movlb	3	; select bank3
  4256  0C73  159F               	bsf	31,3	;volatile
  4257                           
  4258                           ;support.c: 60: BRGH = 1;
  4259  0C74  151E               	bsf	30,2	;volatile
  4260                           
  4261                           ;support.c: 61: SPBRGL = 0x40;
  4262  0C75  3040               	movlw	64
  4263  0C76  009B               	movwf	27	;volatile
  4264                           
  4265                           ;support.c: 62: SPBRGH = 0x03;
  4266  0C77  3003               	movlw	3
  4267  0C78  009C               	movwf	28	;volatile
  4268                           
  4269                           ;support.c: 63: SYNC = 0;
  4270  0C79  121E               	bcf	30,4	;volatile
  4271                           
  4272                           ;support.c: 64: SPEN = 1;
  4273  0C7A  179D               	bsf	29,7	;volatile
  4274                           
  4275                           ;support.c: 65: CREN = 1;
  4276  0C7B  161D               	bsf	29,4	;volatile
  4277                           
  4278                           ;support.c: 66: TXEN = 1;
  4279  0C7C  169E               	bsf	30,5	;volatile
  4280                           
  4281                           ;support.c: 70: enc_A_2 = enc_A_1 = RC4;
  4282  0C7D  107D               	bcf	_enc_A_1/(0+8),_enc_A_1& (0+7)
  4283  0C7E  0020               	movlb	0	; select bank0
  4284  0C7F  1A0E               	btfsc	14,4	;volatile
  4285  0C80  147D               	bsf	_enc_A_1/(0+8),_enc_A_1& (0+7)
  4286  0C81  10FD               	bcf	_enc_A_2/(0+8),_enc_A_2& (0+7)
  4287  0C82  187D               	btfsc	_enc_A_1/(0+8),_enc_A_1& (0+7)
  4288  0C83  14FD               	bsf	_enc_A_2/(0+8),_enc_A_2& (0+7)
  4289                           
  4290                           ;support.c: 71: enc_B_2 = enc_B_1 = RC5;
  4291  0C84  117D               	bcf	_enc_B_1/(0+8),_enc_B_1& (0+7)
  4292  0C85  0020               	movlb	0	; select bank0
  4293  0C86  1A8E               	btfsc	14,5	;volatile
  4294  0C87  157D               	bsf	_enc_B_1/(0+8),_enc_B_1& (0+7)
  4295  0C88  11FD               	bcf	_enc_B_2/(0+8),_enc_B_2& (0+7)
  4296  0C89  197D               	btfsc	_enc_B_1/(0+8),_enc_B_1& (0+7)
  4297  0C8A  15FD               	bsf	_enc_B_2/(0+8),_enc_B_2& (0+7)
  4298                           
  4299                           ;support.c: 72: enc_position = 0;
  4300  0C8B  0020               	movlb	0	; select bank0
  4301  0C8C  01CB               	clrf	_enc_position
  4302  0C8D  01CC               	clrf	_enc_position+1
  4303                           
  4304                           ;support.c: 73: power_light_counter = 0;
  4305  0C8E  01CD               	clrf	_power_light_counter
  4306  0C8F  01CE               	clrf	_power_light_counter+1
  4307                           
  4308                           ;support.c: 76: TMR0IE = 1;
  4309  0C90  168B               	bsf	11,5	;volatile
  4310                           
  4311                           ;support.c: 77: GIE = 1;
  4312  0C91  178B               	bsf	11,7	;volatile
  4313  0C92  0008               	return
  4314  0C93                     __end_of_pic_setup:	
  4315                           
  4316                           	psect	text15
  4317  0E84                     __ptext15:	
  4318 ;; *************** function _parse_setup_cmd *****************
  4319 ;; Defined at:
  4320 ;;		line 131 in file "Main.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;  buf             1    wreg     PTR unsigned char 
  4323 ;;		 -> main@cmdbuf(10), 
  4324 ;;  cmd_descr       1    8[BANK1 ] PTR struct command
  4325 ;;		 -> main@cmd_descr(12), 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  buf             1   28[BANK1 ] PTR unsigned char 
  4328 ;;		 -> main@cmdbuf(10), 
  4329 ;;  cbuf           10   16[BANK1 ] unsigned char [10]
  4330 ;;  i               2   29[BANK1 ] int 
  4331 ;;  num_cmds        2   26[BANK1 ] int 
  4332 ;;  tokptr          1   31[BANK1 ] PTR unsigned char 
  4333 ;;		 -> NULL(0), main@cmdbuf(10), 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  2    8[BANK1 ] int 
  4336 ;; Registers used:
  4337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4343 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4344 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  4345 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4346 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  4347 ;;Total ram usage:       24 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; Hardware stack levels required when called:    5
  4350 ;; This function calls:
  4351 ;;		_strcmp
  4352 ;;		_strcpy
  4353 ;;		_strtok
  4354 ;; This function is called by:
  4355 ;;		_main
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           
  4360                           ;psect for function _parse_setup_cmd
  4361  0E84                     _parse_setup_cmd:	
  4362                           
  4363                           ;incstack = 0
  4364                           ; Regs used in _parse_setup_cmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4365                           ;parse_setup_cmd@buf stored from wreg
  4366  0E84  0021               	movlb	1	; select bank1
  4367  0E85  00BC               	movwf	parse_setup_cmd@buf^(0+128)
  4368                           
  4369                           ;Main.c: 133: char cbuf[10];
  4370                           ;Main.c: 134: char *tokptr;
  4371                           ;Main.c: 135: int num_cmds, i;
  4372                           ;Main.c: 138: cmd_descr->arg1[0] = 0;
  4373  0E86  0828               	movf	parse_setup_cmd@cmd_descr^(0+128),w
  4374  0E87  0086               	movwf	6
  4375  0E88  0187               	clrf	7
  4376  0E89  0181               	clrf	1
  4377                           
  4378                           ;Main.c: 141: tokptr = strtok(buf, " ");
  4379  0E8A  3091               	movlw	low ((STR_25+2)| (0+32768))
  4380  0E8B  00A3               	movwf	strtok@s2^(0+128)
  4381  0E8C  3084               	movlw	high ((STR_25+2)| (0+32768))
  4382  0E8D  00A4               	movwf	(strtok@s2^(0+128)+1)
  4383  0E8E  083C               	movf	parse_setup_cmd@buf^(0+128),w
  4384  0E8F  318C  2493  318E   	fcall	_strtok
  4385  0E92  0021               	movlb	1	; select bank1
  4386  0E93  00AA               	movwf	??_parse_setup_cmd^(0+128)
  4387  0E94  082A               	movf	??_parse_setup_cmd^(0+128),w
  4388  0E95  00BF               	movwf	parse_setup_cmd@tokptr^(0+128)
  4389                           
  4390                           ;Main.c: 142: if (tokptr == (0)) {
  4391  0E96  08BF               	movf	parse_setup_cmd@tokptr^(0+128),f
  4392  0E97  1D03               	skipz
  4393  0E98  2E9E               	goto	l4156
  4394                           
  4395                           ;Main.c: 143: return -1;
  4396  0E99  30FF               	movlw	255
  4397  0E9A  00A8               	movwf	?_parse_setup_cmd^(0+128)
  4398  0E9B  30FF               	movlw	255
  4399  0E9C  00A9               	movwf	(?_parse_setup_cmd^(0+128)+1)
  4400  0E9D  0008               	return
  4401  0E9E                     l4156:	
  4402                           ;Main.c: 144: } else {
  4403                           
  4404                           
  4405                           ;Main.c: 145: strcpy(cbuf, tokptr);
  4406  0E9E  083F               	movf	parse_setup_cmd@tokptr^(0+128),w
  4407  0E9F  00AA               	movwf	??_parse_setup_cmd^(0+128)
  4408  0EA0  082A               	movf	??_parse_setup_cmd^(0+128),w
  4409  0EA1  0020               	movlb	0	; select bank0
  4410  0EA2  00B7               	movwf	strcpy@from
  4411  0EA3  30B0               	movlw	parse_setup_cmd@cbuf& (0+255)
  4412  0EA4  3189  211B  318E   	fcall	_strcpy
  4413                           
  4414                           ;Main.c: 146: }
  4415                           ;Main.c: 149: tokptr = strtok((0), "~");
  4416  0EA7  309B               	movlw	low (STR_24| (0+32768))
  4417  0EA8  0021               	movlb	1	; select bank1
  4418  0EA9  00A3               	movwf	strtok@s2^(0+128)
  4419  0EAA  3084               	movlw	high (STR_24| (0+32768))
  4420  0EAB  00A4               	movwf	(strtok@s2^(0+128)+1)
  4421  0EAC  3000               	movlw	0
  4422  0EAD  318C  2493  318E   	fcall	_strtok
  4423  0EB0  0021               	movlb	1	; select bank1
  4424  0EB1  00AA               	movwf	??_parse_setup_cmd^(0+128)
  4425  0EB2  082A               	movf	??_parse_setup_cmd^(0+128),w
  4426  0EB3  00BF               	movwf	parse_setup_cmd@tokptr^(0+128)
  4427                           
  4428                           ;Main.c: 150: if (tokptr != (0)) {
  4429  0EB4  083F               	movf	parse_setup_cmd@tokptr^(0+128),w
  4430  0EB5  1903               	btfsc	3,2
  4431  0EB6  2EC2               	goto	l4162
  4432                           
  4433                           ;Main.c: 151: strcpy(cmd_descr->arg1, tokptr);
  4434  0EB7  083F               	movf	parse_setup_cmd@tokptr^(0+128),w
  4435  0EB8  00AA               	movwf	??_parse_setup_cmd^(0+128)
  4436  0EB9  082A               	movf	??_parse_setup_cmd^(0+128),w
  4437  0EBA  0020               	movlb	0	; select bank0
  4438  0EBB  00B7               	movwf	strcpy@from
  4439  0EBC  0021               	movlb	1	; select bank1
  4440  0EBD  0828               	movf	parse_setup_cmd@cmd_descr^(0+128),w
  4441  0EBE  3189  211B  318E   	fcall	_strcpy
  4442                           
  4443                           ;Main.c: 152: } else {
  4444  0EC1  2EC7               	goto	l4164
  4445  0EC2                     l4162:	
  4446                           
  4447                           ;Main.c: 153: cmd_descr->arg1[0] = 0;
  4448  0EC2  0021               	movlb	1	; select bank1
  4449  0EC3  0828               	movf	parse_setup_cmd@cmd_descr^(0+128),w
  4450  0EC4  0086               	movwf	6
  4451  0EC5  0187               	clrf	7
  4452  0EC6  0181               	clrf	1
  4453  0EC7                     l4164:	
  4454                           
  4455                           ;Main.c: 154: }
  4456                           ;Main.c: 157: num_cmds = sizeof(commands) / sizeof(CMD_LIST_ITEM);
  4457  0EC7  3009               	movlw	9
  4458  0EC8  0021               	movlb	1	; select bank1
  4459  0EC9  00BA               	movwf	parse_setup_cmd@num_cmds^(0+128)
  4460  0ECA  3000               	movlw	0
  4461  0ECB  00BB               	movwf	(parse_setup_cmd@num_cmds^(0+128)+1)
  4462                           
  4463                           ;Main.c: 158: for (i = 0; i < num_cmds; ++i) {
  4464  0ECC  01BD               	clrf	parse_setup_cmd@i^(0+128)
  4465  0ECD  01BE               	clrf	(parse_setup_cmd@i+1)^(0+128)
  4466  0ECE                     l274:	
  4467  0ECE  083E               	movf	(parse_setup_cmd@i+1)^(0+128),w
  4468  0ECF  3A80               	xorlw	128
  4469  0ED0  00AA               	movwf	??_parse_setup_cmd^(0+128)
  4470  0ED1  083B               	movf	(parse_setup_cmd@num_cmds+1)^(0+128),w
  4471  0ED2  3A80               	xorlw	128
  4472  0ED3  022A               	subwf	??_parse_setup_cmd^(0+128),w
  4473  0ED4  1D03               	skipz
  4474  0ED5  2ED8               	goto	u6275
  4475  0ED6  083A               	movf	parse_setup_cmd@num_cmds^(0+128),w
  4476  0ED7  023D               	subwf	parse_setup_cmd@i^(0+128),w
  4477  0ED8                     u6275:	
  4478  0ED8  1803               	btfsc	3,0
  4479  0ED9  2F1F               	goto	l4178
  4480                           
  4481                           ;Main.c: 159: if (strcmp(cbuf, commands[i].cmdname) == 0) {
  4482  0EDA  0021               	movlb	1	; select bank1
  4483  0EDB  083E               	movf	(parse_setup_cmd@i+1)^(0+128),w
  4484  0EDC  0085               	movwf	5
  4485  0EDD  083D               	movf	parse_setup_cmd@i^(0+128),w
  4486  0EDE  0084               	movwf	4
  4487  0EDF  3584               	lslf	4,f
  4488  0EE0  0D85               	rlf	5,f
  4489  0EE1  3584               	lslf	4,f
  4490  0EE2  0D85               	rlf	5,f
  4491  0EE3  3000               	movlw	low (_commands| (0+32768))
  4492  0EE4  0784               	addwf	4,f
  4493  0EE5  3083               	movlw	high (_commands| (0+32768))
  4494  0EE6  3D85               	addwfc	5,f
  4495  0EE7  3F00               	moviw [0]fsr0
  4496  0EE8  0020               	movlb	0	; select bank0
  4497  0EE9  00B7               	movwf	strcmp@s2
  4498  0EEA  3F01               	moviw [1]fsr0
  4499  0EEB  00B8               	movwf	strcmp@s2+1
  4500  0EEC  30B0               	movlw	parse_setup_cmd@cbuf& (0+255)
  4501  0EED  3187  27D7  318E   	fcall	_strcmp
  4502  0EF0  0020               	movlb	0	; select bank0
  4503  0EF1  0838               	movf	?_strcmp+1,w
  4504  0EF2  0437               	iorwf	?_strcmp,w
  4505  0EF3  1D03               	skipz
  4506  0EF4  2F19               	goto	l4176
  4507                           
  4508                           ;Main.c: 160: cmd_descr->cmdptr = commands[i].cmdptr;
  4509  0EF5  0021               	movlb	1	; select bank1
  4510  0EF6  083E               	movf	(parse_setup_cmd@i+1)^(0+128),w
  4511  0EF7  00AB               	movwf	(??_parse_setup_cmd^(0+128)+1)
  4512  0EF8  083D               	movf	parse_setup_cmd@i^(0+128),w
  4513  0EF9  00AA               	movwf	??_parse_setup_cmd^(0+128)
  4514  0EFA  35AA               	lslf	??_parse_setup_cmd^(0+128),f
  4515  0EFB  0DAB               	rlf	(??_parse_setup_cmd^(0+128)+1),f
  4516  0EFC  35AA               	lslf	??_parse_setup_cmd^(0+128),f
  4517  0EFD  0DAB               	rlf	(??_parse_setup_cmd^(0+128)+1),f
  4518  0EFE  082A               	movf	??_parse_setup_cmd^(0+128),w
  4519  0EFF  3E02               	addlw	2
  4520  0F00  00AC               	movwf	(??_parse_setup_cmd+2)^(0+128)
  4521  0F01  3000               	movlw	0
  4522  0F02  3D2B               	addwfc	(??_parse_setup_cmd+1)^(0+128),w
  4523  0F03  00AD               	movwf	(??_parse_setup_cmd+3)^(0+128)
  4524  0F04  3000               	movlw	low (_commands| (0+32768))
  4525  0F05  00AE               	movwf	(??_parse_setup_cmd+4)^(0+128)
  4526  0F06  3083               	movlw	high (_commands| (0+32768))
  4527  0F07  00AF               	movwf	((??_parse_setup_cmd+4)^(0+128)+1)
  4528  0F08  082C               	movf	(??_parse_setup_cmd+2)^(0+128),w
  4529  0F09  072E               	addwf	(??_parse_setup_cmd+4)^(0+128),w
  4530  0F0A  0086               	movwf	6
  4531  0F0B  082D               	movf	(??_parse_setup_cmd+3)^(0+128),w
  4532  0F0C  3D2F               	addwfc	(??_parse_setup_cmd+5)^(0+128),w
  4533  0F0D  0087               	movwf	7
  4534  0F0E  0828               	movf	parse_setup_cmd@cmd_descr^(0+128),w
  4535  0F0F  3E0A               	addlw	10
  4536  0F10  0084               	movwf	4
  4537  0F11  0185               	clrf	5
  4538  0F12  3F40               	moviw [0]fsr1
  4539  0F13  3F80               	movwi [0]fsr0
  4540  0F14  3F41               	moviw [1]fsr1
  4541  0F15  3F81               	movwi [1]fsr0
  4542                           
  4543                           ;Main.c: 161: return 0;
  4544  0F16  01A8               	clrf	?_parse_setup_cmd^(0+128)
  4545  0F17  01A9               	clrf	(?_parse_setup_cmd+1)^(0+128)
  4546  0F18  0008               	return
  4547  0F19                     l4176:	
  4548  0F19  3001               	movlw	1
  4549  0F1A  0021               	movlb	1	; select bank1
  4550  0F1B  07BD               	addwf	parse_setup_cmd@i^(0+128),f
  4551  0F1C  3000               	movlw	0
  4552  0F1D  3DBE               	addwfc	(parse_setup_cmd@i+1)^(0+128),f
  4553  0F1E  2ECE               	goto	l274
  4554  0F1F                     l4178:	
  4555                           
  4556                           ;Main.c: 162: }
  4557                           ;Main.c: 163: }
  4558                           ;Main.c: 165: return -2;
  4559  0F1F  30FE               	movlw	254
  4560  0F20  0021               	movlb	1	; select bank1
  4561  0F21  00A8               	movwf	?_parse_setup_cmd^(0+128)
  4562  0F22  30FF               	movlw	255
  4563  0F23  00A9               	movwf	(?_parse_setup_cmd^(0+128)+1)
  4564  0F24  0008               	return
  4565  0F25                     __end_of_parse_setup_cmd:	
  4566                           
  4567                           	psect	text16
  4568  0C93                     __ptext16:	
  4569 ;; *************** function _strtok *****************
  4570 ;; Defined at:
  4571 ;;		line 8 in file "/Applications/microchip/xc8/v1.32/sources/common/strtok.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  s1              1    wreg     PTR unsigned char 
  4574 ;;		 -> NULL(0), main@cmdbuf(10), 
  4575 ;;  s2              2    3[BANK1 ] PTR const unsigned char 
  4576 ;;		 -> STR_24(2), STR_23(2), 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  s1              1   33[BANK0 ] PTR unsigned char 
  4579 ;;		 -> NULL(0), main@cmdbuf(10), 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  1    wreg      PTR unsigned char 
  4582 ;; Registers used:
  4583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4589 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4590 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4591 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4592 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4593 ;;Total ram usage:        6 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; Hardware stack levels required when called:    4
  4596 ;; This function calls:
  4597 ;;		_strcspn
  4598 ;;		_strspn
  4599 ;; This function is called by:
  4600 ;;		_parse_setup_cmd
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           
  4605                           ;psect for function _strtok
  4606  0C93                     _strtok:	
  4607                           
  4608                           ;incstack = 0
  4609                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4610                           ;strtok@s1 stored from wreg
  4611  0C93  0020               	movlb	0	; select bank0
  4612  0C94  00C1               	movwf	strtok@s1
  4613  0C95  08C1               	movf	strtok@s1,f
  4614  0C96  1D03               	skipz
  4615  0C97  2C9E               	goto	l4010
  4616  0C98  0856               	movf	strtok@sp,w
  4617  0C99  0021               	movlb	1	; select bank1
  4618  0C9A  00A5               	movwf	??_strtok^(0+128)
  4619  0C9B  0825               	movf	??_strtok^(0+128),w
  4620  0C9C  0020               	movlb	0	; select bank0
  4621  0C9D  00C1               	movwf	strtok@s1
  4622  0C9E                     l4010:	
  4623  0C9E  08C1               	movf	strtok@s1,f
  4624  0C9F  1D03               	skipz
  4625  0CA0  2CA3               	goto	l4016
  4626  0CA1  3000               	movlw	0
  4627  0CA2  0008               	return
  4628  0CA3                     l4016:	
  4629  0CA3  0021               	movlb	1	; select bank1
  4630  0CA4  0824               	movf	(strtok@s2+1)^(0+128),w
  4631  0CA5  0020               	movlb	0	; select bank0
  4632  0CA6  01BE               	clrf	strspn@s2+1
  4633  0CA7  07BE               	addwf	strspn@s2+1,f
  4634  0CA8  0021               	movlb	1	; select bank1
  4635  0CA9  0823               	movf	strtok@s2^(0+128),w
  4636  0CAA  0020               	movlb	0	; select bank0
  4637  0CAB  01BD               	clrf	strspn@s2
  4638  0CAC  07BD               	addwf	strspn@s2,f
  4639  0CAD  0841               	movf	strtok@s1,w
  4640  0CAE  318A  22D2  318C   	fcall	_strspn
  4641  0CB1  0020               	movlb	0	; select bank0
  4642  0CB2  083D               	movf	?_strspn,w
  4643  0CB3  0021               	movlb	1	; select bank1
  4644  0CB4  00A5               	movwf	??_strtok^(0+128)
  4645  0CB5  0825               	movf	??_strtok^(0+128),w
  4646  0CB6  0020               	movlb	0	; select bank0
  4647  0CB7  07C1               	addwf	strtok@s1,f
  4648  0CB8  0841               	movf	strtok@s1,w
  4649  0CB9  0086               	movwf	6
  4650  0CBA  0187               	clrf	7
  4651  0CBB  0881               	movf	1,f
  4652  0CBC  1D03               	skipz
  4653  0CBD  2CC1               	goto	l4024
  4654  0CBE  3000               	movlw	0
  4655  0CBF  00D6               	movwf	strtok@sp
  4656  0CC0  0008               	return
  4657  0CC1                     l4024:	
  4658  0CC1  0021               	movlb	1	; select bank1
  4659  0CC2  0824               	movf	(strtok@s2+1)^(0+128),w
  4660  0CC3  0020               	movlb	0	; select bank0
  4661  0CC4  01BE               	clrf	strcspn@s2+1
  4662  0CC5  07BE               	addwf	strcspn@s2+1,f
  4663  0CC6  0021               	movlb	1	; select bank1
  4664  0CC7  0823               	movf	strtok@s2^(0+128),w
  4665  0CC8  0020               	movlb	0	; select bank0
  4666  0CC9  01BD               	clrf	strcspn@s2
  4667  0CCA  07BD               	addwf	strcspn@s2,f
  4668  0CCB  0841               	movf	strtok@s1,w
  4669  0CCC  318A  2296  318C   	fcall	_strcspn
  4670  0CCF  0020               	movlb	0	; select bank0
  4671  0CD0  083D               	movf	?_strcspn,w
  4672  0CD1  0021               	movlb	1	; select bank1
  4673  0CD2  00A5               	movwf	??_strtok^(0+128)
  4674  0CD3  0020               	movlb	0	; select bank0
  4675  0CD4  083E               	movf	?_strcspn+1,w
  4676  0CD5  0021               	movlb	1	; select bank1
  4677  0CD6  00A6               	movwf	(??_strtok^(0+128)+1)
  4678  0CD7  0020               	movlb	0	; select bank0
  4679  0CD8  0841               	movf	strtok@s1,w
  4680  0CD9  0021               	movlb	1	; select bank1
  4681  0CDA  0725               	addwf	??_strtok^(0+128),w
  4682  0CDB  00A7               	movwf	(??_strtok+2)^(0+128)
  4683  0CDC  0827               	movf	(??_strtok+2)^(0+128),w
  4684  0CDD  0020               	movlb	0	; select bank0
  4685  0CDE  00D6               	movwf	strtok@sp
  4686  0CDF  0856               	movf	strtok@sp,w
  4687  0CE0  0086               	movwf	6
  4688  0CE1  0187               	clrf	7
  4689  0CE2  0801               	movf	1,w
  4690  0CE3  3A00               	xorlw	0
  4691  0CE4  1903               	skipnz
  4692  0CE5  2CF1               	goto	l4032
  4693  0CE6  0856               	movf	strtok@sp,w
  4694  0CE7  0086               	movwf	6
  4695  0CE8  0187               	clrf	7
  4696  0CE9  0181               	clrf	1
  4697  0CEA  3001               	movlw	1
  4698  0CEB  0021               	movlb	1	; select bank1
  4699  0CEC  00A5               	movwf	??_strtok^(0+128)
  4700  0CED  0825               	movf	??_strtok^(0+128),w
  4701  0CEE  0020               	movlb	0	; select bank0
  4702  0CEF  07D6               	addwf	strtok@sp,f
  4703  0CF0  2CF2               	goto	l4034
  4704  0CF1                     l4032:	
  4705  0CF1  01D6               	clrf	strtok@sp
  4706  0CF2                     l4034:	
  4707  0CF2  0841               	movf	strtok@s1,w
  4708  0CF3  0008               	return
  4709  0CF4                     __end_of_strtok:	
  4710                           
  4711                           	psect	text17
  4712  0AD2                     __ptext17:	
  4713 ;; *************** function _strspn *****************
  4714 ;; Defined at:
  4715 ;;		line 4 in file "/Applications/microchip/xc8/v1.32/sources/common/strspn.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;  s1              1    wreg     PTR const unsigned char 
  4718 ;;		 -> NULL(0), main@cmdbuf(10), 
  4719 ;;  s2              2   29[BANK0 ] PTR const unsigned char 
  4720 ;;		 -> STR_24(2), STR_23(2), 
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;  s1              1    2[BANK1 ] PTR const unsigned char 
  4723 ;;		 -> NULL(0), main@cmdbuf(10), 
  4724 ;;  i               2    0[BANK1 ] unsigned int 
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  2   29[BANK0 ] unsigned int 
  4727 ;; Registers used:
  4728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4735 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4736 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4737 ;;      Totals:         0       4       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4738 ;;Total ram usage:        7 bytes
  4739 ;; Hardware stack levels used:    1
  4740 ;; Hardware stack levels required when called:    3
  4741 ;; This function calls:
  4742 ;;		_strchr
  4743 ;; This function is called by:
  4744 ;;		_strtok
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           
  4749                           ;psect for function _strspn
  4750  0AD2                     _strspn:	
  4751                           
  4752                           ;incstack = 0
  4753                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4754                           ;strspn@s1 stored from wreg
  4755  0AD2  0021               	movlb	1	; select bank1
  4756  0AD3  00A2               	movwf	strspn@s1^(0+128)
  4757  0AD4  01A0               	clrf	strspn@i^(0+128)
  4758  0AD5  01A1               	clrf	(strspn@i+1)^(0+128)
  4759  0AD6  2AE1               	goto	l3976
  4760  0AD7                     l3974:	
  4761  0AD7  3001               	movlw	1
  4762  0AD8  0020               	movlb	0	; select bank0
  4763  0AD9  00BF               	movwf	??_strspn
  4764  0ADA  083F               	movf	??_strspn,w
  4765  0ADB  0021               	movlb	1	; select bank1
  4766  0ADC  07A2               	addwf	strspn@s1^(0+128),f
  4767  0ADD  3001               	movlw	1
  4768  0ADE  07A0               	addwf	strspn@i^(0+128),f
  4769  0ADF  3000               	movlw	0
  4770  0AE0  3DA1               	addwfc	(strspn@i+1)^(0+128),f
  4771  0AE1                     l3976:	
  4772  0AE1  0822               	movf	strspn@s1^(0+128),w
  4773  0AE2  0086               	movwf	6
  4774  0AE3  0187               	clrf	7
  4775  0AE4  0801               	movf	1,w
  4776  0AE5  3A00               	xorlw	0
  4777  0AE6  1903               	skipnz
  4778  0AE7  2B03               	goto	l3980
  4779  0AE8  0020               	movlb	0	; select bank0
  4780  0AE9  083E               	movf	strspn@s2+1,w
  4781  0AEA  01B8               	clrf	strchr@ptr+1
  4782  0AEB  07B8               	addwf	strchr@ptr+1,f
  4783  0AEC  083D               	movf	strspn@s2,w
  4784  0AED  01B7               	clrf	strchr@ptr
  4785  0AEE  07B7               	addwf	strchr@ptr,f
  4786  0AEF  0021               	movlb	1	; select bank1
  4787  0AF0  0822               	movf	strspn@s1^(0+128),w
  4788  0AF1  0086               	movwf	6
  4789  0AF2  0187               	clrf	7
  4790  0AF3  0801               	movf	1,w
  4791  0AF4  0020               	movlb	0	; select bank0
  4792  0AF5  00BF               	movwf	??_strspn
  4793  0AF6  01C0               	clrf	??_strspn+1
  4794  0AF7  083F               	movf	??_strspn,w
  4795  0AF8  00B9               	movwf	strchr@chr
  4796  0AF9  0840               	movf	??_strspn+1,w
  4797  0AFA  00BA               	movwf	strchr@chr+1
  4798  0AFB  3189  2135  318A   	fcall	_strchr
  4799  0AFE  0020               	movlb	0	; select bank0
  4800  0AFF  0838               	movf	?_strchr+1,w
  4801  0B00  0437               	iorwf	?_strchr,w
  4802  0B01  1D03               	skipz
  4803  0B02  2AD7               	goto	l3974
  4804  0B03                     l3980:	
  4805  0B03  0021               	movlb	1	; select bank1
  4806  0B04  0821               	movf	(strspn@i+1)^(0+128),w
  4807  0B05  0020               	movlb	0	; select bank0
  4808  0B06  01BE               	clrf	?_strspn+1
  4809  0B07  07BE               	addwf	?_strspn+1,f
  4810  0B08  0021               	movlb	1	; select bank1
  4811  0B09  0820               	movf	strspn@i^(0+128),w
  4812  0B0A  0020               	movlb	0	; select bank0
  4813  0B0B  01BD               	clrf	?_strspn
  4814  0B0C  07BD               	addwf	?_strspn,f
  4815  0B0D  0008               	return
  4816  0B0E                     __end_of_strspn:	
  4817                           
  4818                           	psect	text18
  4819  0A96                     __ptext18:	
  4820 ;; *************** function _strcspn *****************
  4821 ;; Defined at:
  4822 ;;		line 4 in file "/Applications/microchip/xc8/v1.32/sources/common/strcspn.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;  s1              1    wreg     PTR const unsigned char 
  4825 ;;		 -> NULL(0), main@cmdbuf(10), 
  4826 ;;  s2              2   29[BANK0 ] PTR const unsigned char 
  4827 ;;		 -> STR_24(2), STR_23(2), 
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;  s1              1    2[BANK1 ] PTR const unsigned char 
  4830 ;;		 -> NULL(0), main@cmdbuf(10), 
  4831 ;;  i               2    0[BANK1 ] unsigned int 
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  2   29[BANK0 ] unsigned int 
  4834 ;; Registers used:
  4835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4841 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4842 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4843 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4844 ;;      Totals:         0       4       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4845 ;;Total ram usage:        7 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; Hardware stack levels required when called:    3
  4848 ;; This function calls:
  4849 ;;		_strchr
  4850 ;; This function is called by:
  4851 ;;		_strtok
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           
  4856                           ;psect for function _strcspn
  4857  0A96                     _strcspn:	
  4858                           
  4859                           ;incstack = 0
  4860                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4861                           ;strcspn@s1 stored from wreg
  4862  0A96  0021               	movlb	1	; select bank1
  4863  0A97  00A2               	movwf	strcspn@s1^(0+128)
  4864  0A98  01A0               	clrf	strcspn@i^(0+128)
  4865  0A99  01A1               	clrf	(strcspn@i+1)^(0+128)
  4866  0A9A  2AA5               	goto	l3988
  4867  0A9B                     l3986:	
  4868  0A9B  3001               	movlw	1
  4869  0A9C  0020               	movlb	0	; select bank0
  4870  0A9D  00BF               	movwf	??_strcspn
  4871  0A9E  083F               	movf	??_strcspn,w
  4872  0A9F  0021               	movlb	1	; select bank1
  4873  0AA0  07A2               	addwf	strcspn@s1^(0+128),f
  4874  0AA1  3001               	movlw	1
  4875  0AA2  07A0               	addwf	strcspn@i^(0+128),f
  4876  0AA3  3000               	movlw	0
  4877  0AA4  3DA1               	addwfc	(strcspn@i+1)^(0+128),f
  4878  0AA5                     l3988:	
  4879  0AA5  0822               	movf	strcspn@s1^(0+128),w
  4880  0AA6  0086               	movwf	6
  4881  0AA7  0187               	clrf	7
  4882  0AA8  0801               	movf	1,w
  4883  0AA9  3A00               	xorlw	0
  4884  0AAA  1903               	skipnz
  4885  0AAB  2AC7               	goto	l3992
  4886  0AAC  0020               	movlb	0	; select bank0
  4887  0AAD  083E               	movf	strcspn@s2+1,w
  4888  0AAE  01B8               	clrf	strchr@ptr+1
  4889  0AAF  07B8               	addwf	strchr@ptr+1,f
  4890  0AB0  083D               	movf	strcspn@s2,w
  4891  0AB1  01B7               	clrf	strchr@ptr
  4892  0AB2  07B7               	addwf	strchr@ptr,f
  4893  0AB3  0021               	movlb	1	; select bank1
  4894  0AB4  0822               	movf	strcspn@s1^(0+128),w
  4895  0AB5  0086               	movwf	6
  4896  0AB6  0187               	clrf	7
  4897  0AB7  0801               	movf	1,w
  4898  0AB8  0020               	movlb	0	; select bank0
  4899  0AB9  00BF               	movwf	??_strcspn
  4900  0ABA  01C0               	clrf	??_strcspn+1
  4901  0ABB  083F               	movf	??_strcspn,w
  4902  0ABC  00B9               	movwf	strchr@chr
  4903  0ABD  0840               	movf	??_strcspn+1,w
  4904  0ABE  00BA               	movwf	strchr@chr+1
  4905  0ABF  3189  2135  318A   	fcall	_strchr
  4906  0AC2  0020               	movlb	0	; select bank0
  4907  0AC3  0838               	movf	?_strchr+1,w
  4908  0AC4  0437               	iorwf	?_strchr,w
  4909  0AC5  1903               	skipnz
  4910  0AC6  2A9B               	goto	l3986
  4911  0AC7                     l3992:	
  4912  0AC7  0021               	movlb	1	; select bank1
  4913  0AC8  0821               	movf	(strcspn@i+1)^(0+128),w
  4914  0AC9  0020               	movlb	0	; select bank0
  4915  0ACA  01BE               	clrf	?_strcspn+1
  4916  0ACB  07BE               	addwf	?_strcspn+1,f
  4917  0ACC  0021               	movlb	1	; select bank1
  4918  0ACD  0820               	movf	strcspn@i^(0+128),w
  4919  0ACE  0020               	movlb	0	; select bank0
  4920  0ACF  01BD               	clrf	?_strcspn
  4921  0AD0  07BD               	addwf	?_strcspn,f
  4922  0AD1  0008               	return
  4923  0AD2                     __end_of_strcspn:	
  4924                           
  4925                           	psect	text19
  4926  0935                     __ptext19:	
  4927 ;; *************** function _strchr *****************
  4928 ;; Defined at:
  4929 ;;		line 4 in file "/Applications/microchip/xc8/v1.32/sources/common/strchr.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  ptr             2   23[BANK0 ] PTR const unsigned char 
  4932 ;;		 -> STR_24(2), STR_23(2), 
  4933 ;;  chr             2   25[BANK0 ] int 
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;		None
  4936 ;; Return value:  Size  Location     Type
  4937 ;;                  2   23[BANK0 ] PTR unsigned char 
  4938 ;; Registers used:
  4939 ;;		wreg, fsr0l, fsr0h, status,2, pclath
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4945 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4947 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4948 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4949 ;;Total ram usage:        6 bytes
  4950 ;; Hardware stack levels used:    1
  4951 ;; Hardware stack levels required when called:    2
  4952 ;; This function calls:
  4953 ;;		Nothing
  4954 ;; This function is called by:
  4955 ;;		_strcspn
  4956 ;;		_strspn
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           
  4961                           ;psect for function _strchr
  4962  0935                     _strchr:	
  4963  0935                     l1015:	
  4964                           ;incstack = 0
  4965                           ; Regs used in _strchr: [wreg-fsr0h+status,2+pclath]
  4966                           
  4967  0935  0020               	movlb	0	; select bank0
  4968  0936  0837               	movf	strchr@ptr,w
  4969  0937  0084               	movwf	4
  4970  0938  0838               	movf	strchr@ptr+1,w
  4971  0939  0085               	movwf	5
  4972  093A  0800               	movf	0,w	;code access
  4973  093B  0639               	xorwf	strchr@chr,w
  4974  093C  1903               	btfsc	3,2
  4975  093D  0008               	return
  4976  093E  0838               	movf	strchr@ptr+1,w
  4977  093F  00BC               	movwf	??_strchr+1
  4978  0940  0837               	movf	strchr@ptr,w
  4979  0941  00BB               	movwf	??_strchr
  4980  0942  0AB7               	incf	strchr@ptr,f
  4981  0943  1903               	skipnz
  4982  0944  0AB8               	incf	strchr@ptr+1,f
  4983  0945  083B               	movf	??_strchr,w
  4984  0946  0084               	movwf	4
  4985  0947  083C               	movf	??_strchr+1,w
  4986  0948  0085               	movwf	5
  4987  0949  0800               	movf	0,w	;code access
  4988  094A  3800               	iorlw	0
  4989  094B  1D03               	skipz
  4990  094C  2935               	goto	l1015
  4991  094D  01B7               	clrf	?_strchr
  4992  094E  01B8               	clrf	?_strchr+1
  4993  094F  0008               	return
  4994  0950                     __end_of_strchr:	
  4995                           
  4996                           	psect	text20
  4997  091B                     __ptext20:	
  4998 ;; *************** function _strcpy *****************
  4999 ;; Defined at:
  5000 ;;		line 8 in file "/Applications/microchip/xc8/v1.32/sources/common/strcpy.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  to              1    wreg     PTR unsigned char 
  5003 ;;		 -> parse_setup_cmd@cbuf(10), main@cmd_descr(12), 
  5004 ;;  from            1   23[BANK0 ] PTR const unsigned char 
  5005 ;;		 -> NULL(0), main@cmdbuf(10), 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;  to              1   26[BANK0 ] PTR unsigned char 
  5008 ;;		 -> parse_setup_cmd@cbuf(10), main@cmd_descr(12), 
  5009 ;;  cp              1   25[BANK0 ] PTR unsigned char 
  5010 ;;		 -> parse_setup_cmd@cbuf(10), main@cmd_descr(12), 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      PTR unsigned char 
  5013 ;; Registers used:
  5014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5020 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5021 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5022 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5023 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5024 ;;Total ram usage:        4 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    2
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_parse_setup_cmd
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           
  5035                           ;psect for function _strcpy
  5036  091B                     _strcpy:	
  5037                           
  5038                           ;incstack = 0
  5039                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
  5040                           ;strcpy@to stored from wreg
  5041  091B  0020               	movlb	0	; select bank0
  5042  091C  00BA               	movwf	strcpy@to
  5043  091D  083A               	movf	strcpy@to,w
  5044  091E  00B8               	movwf	??_strcpy
  5045  091F  0838               	movf	??_strcpy,w
  5046  0920  00B9               	movwf	strcpy@cp
  5047  0921                     l2224:	
  5048  0921  0839               	movf	strcpy@cp,w
  5049  0922  0086               	movwf	6
  5050  0923  0187               	clrf	7
  5051  0924  0837               	movf	strcpy@from,w
  5052  0925  0084               	movwf	4
  5053  0926  0185               	clrf	5
  5054  0927  0800               	movf	0,w
  5055  0928  3FC0               	movwi [0]fsr1
  5056  0929  0889               	movf	9,f
  5057  092A  1903               	btfsc	3,2
  5058  092B  0008               	return
  5059  092C  3001               	movlw	1
  5060  092D  00B8               	movwf	??_strcpy
  5061  092E  0838               	movf	??_strcpy,w
  5062  092F  07B9               	addwf	strcpy@cp,f
  5063  0930  3001               	movlw	1
  5064  0931  00B8               	movwf	??_strcpy
  5065  0932  0838               	movf	??_strcpy,w
  5066  0933  07B7               	addwf	strcpy@from,f
  5067  0934  2921               	goto	l2224
  5068  0935                     __end_of_strcpy:	
  5069                           ;	Return value of _strcpy is never used
  5070                           
  5071                           
  5072                           	psect	text21
  5073  07D7                     __ptext21:	
  5074 ;; *************** function _strcmp *****************
  5075 ;; Defined at:
  5076 ;;		line 33 in file "/Applications/microchip/xc8/v1.32/sources/common/strcmp.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  s1              1    wreg     PTR const unsigned char 
  5079 ;;		 -> parse_setup_cmd@cbuf(10), 
  5080 ;;  s2              2   23[BANK0 ] PTR const unsigned char 
  5081 ;;		 -> STR_22(7), STR_21(7), STR_20(7), STR_19(4), 
  5082 ;;		 -> STR_18(6), STR_17(6), STR_16(6), STR_15(4), 
  5083 ;;		 -> STR_14(5), 
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;  s1              1   27[BANK0 ] PTR const unsigned char 
  5086 ;;		 -> parse_setup_cmd@cbuf(10), 
  5087 ;;  r               1   26[BANK0 ] char 
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  2   23[BANK0 ] int 
  5090 ;; Registers used:
  5091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5097 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5098 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5100 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5101 ;;Total ram usage:        5 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; Hardware stack levels required when called:    2
  5104 ;; This function calls:
  5105 ;;		Nothing
  5106 ;; This function is called by:
  5107 ;;		_parse_setup_cmd
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           
  5112                           ;psect for function _strcmp
  5113  07D7                     _strcmp:	
  5114                           
  5115                           ;incstack = 0
  5116                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  5117                           ;strcmp@s1 stored from wreg
  5118  07D7  0020               	movlb	0	; select bank0
  5119  07D8  00BB               	movwf	strcmp@s1
  5120  07D9  2FE2               	goto	l2230
  5121  07DA                     l2228:	
  5122  07DA  3001               	movlw	1
  5123  07DB  00B9               	movwf	??_strcmp
  5124  07DC  0839               	movf	??_strcmp,w
  5125  07DD  07BB               	addwf	strcmp@s1,f
  5126  07DE  3001               	movlw	1
  5127  07DF  07B7               	addwf	strcmp@s2,f
  5128  07E0  3000               	movlw	0
  5129  07E1  3DB8               	addwfc	strcmp@s2+1,f
  5130  07E2                     l2230:	
  5131  07E2  083B               	movf	strcmp@s1,w
  5132  07E3  0086               	movwf	6
  5133  07E4  0187               	clrf	7
  5134  07E5  0837               	movf	strcmp@s2,w
  5135  07E6  0084               	movwf	4
  5136  07E7  0838               	movf	strcmp@s2+1,w
  5137  07E8  0085               	movwf	5
  5138  07E9  0800               	movf	0,w	;code access
  5139  07EA  3AFF               	xorlw	255
  5140  07EB  3E01               	addlw	1
  5141  07EC  0701               	addwf	1,w
  5142  07ED  00B9               	movwf	??_strcmp
  5143  07EE  0839               	movf	??_strcmp,w
  5144  07EF  00BA               	movwf	strcmp@r
  5145  07F0  08BA               	movf	strcmp@r,f
  5146  07F1  1D03               	skipz
  5147  07F2  2FF9               	goto	l2234
  5148  07F3  083B               	movf	strcmp@s1,w
  5149  07F4  0086               	movwf	6
  5150  07F5  0187               	clrf	7
  5151  07F6  0881               	movf	1,f
  5152  07F7  1D03               	skipz
  5153  07F8  2FDA               	goto	l2228
  5154  07F9                     l2234:	
  5155  07F9  083A               	movf	strcmp@r,w
  5156  07FA  00B7               	movwf	?_strcmp
  5157  07FB  01B8               	clrf	?_strcmp+1
  5158  07FC  1BB7               	btfsc	?_strcmp,7
  5159  07FD  03B8               	decf	?_strcmp+1,f
  5160  07FE  0008               	return
  5161  07FF                     __end_of_strcmp:	
  5162                           
  5163                           	psect	text22
  5164  0F25                     __ptext22:	
  5165 ;; *************** function _sprintf *****************
  5166 ;; Defined at:
  5167 ;;		line 492 in file "/Applications/microchip/xc8/v1.32/sources/common/doprnt.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;  sp              1    wreg     PTR unsigned char 
  5170 ;;		 -> errors_command@buf(10), status_command@buf(10), 
  5171 ;;  f               2    2[BANK1 ] PTR const unsigned char 
  5172 ;;		 -> STR_41(7), STR_40(8), STR_39(8), STR_38(8), 
  5173 ;;		 -> STR_34(7), STR_33(8), STR_32(8), STR_31(8), 
  5174 ;;		 -> STR_30(8), STR_29(8), STR_28(8), STR_27(8), 
  5175 ;;		 -> STR_26(8), 
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;  sp              1   18[BANK1 ] PTR unsigned char 
  5178 ;;		 -> errors_command@buf(10), status_command@buf(10), 
  5179 ;;  _val            4   13[BANK1 ] struct .
  5180 ;;  c               1   17[BANK1 ] char 
  5181 ;;  prec            1   12[BANK1 ] char 
  5182 ;;  flag            1   11[BANK1 ] unsigned char 
  5183 ;;  ap              1   10[BANK1 ] PTR void [1]
  5184 ;;		 -> ?_sprintf(2), 
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  2    2[BANK1 ] int 
  5187 ;; Registers used:
  5188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5194 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5195 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  5196 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5197 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5198 ;;Total ram usage:       17 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:    3
  5201 ;; This function calls:
  5202 ;;		___lwdiv
  5203 ;;		___lwmod
  5204 ;; This function is called by:
  5205 ;;		_status_command
  5206 ;;		_errors_command
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           
  5211                           ;psect for function _sprintf
  5212  0F25                     _sprintf:	
  5213                           
  5214                           ;incstack = 0
  5215                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5216                           ;sprintf@sp stored from wreg
  5217  0F25  0021               	movlb	1	; select bank1
  5218  0F26  00B2               	movwf	sprintf@sp^(0+128)
  5219                           
  5220                           ;doprnt.c: 494: va_list ap;
  5221                           ;doprnt.c: 499: signed char c;
  5222                           ;doprnt.c: 506: signed char prec;
  5223                           ;doprnt.c: 508: unsigned char flag;
  5224                           ;doprnt.c: 527: union {
  5225                           ;doprnt.c: 528: unsigned int _val;
  5226                           ;doprnt.c: 529: struct {
  5227                           ;doprnt.c: 530: const char * _cp;
  5228                           ;doprnt.c: 531: unsigned _len;
  5229                           ;doprnt.c: 532: } _str;
  5230                           ;doprnt.c: 533: } _val;
  5231                           ;doprnt.c: 542: *ap = __va_start();
  5232  0F27  30A4               	movlw	(?_sprintf+2)& (0+255)
  5233  0F28  00A6               	movwf	??_sprintf^(0+128)
  5234  0F29  0826               	movf	??_sprintf^(0+128),w
  5235  0F2A  00AA               	movwf	sprintf@ap^(0+128)
  5236  0F2B                     l4090:	
  5237                           ;doprnt.c: 545: while(c = *f++) {
  5238                           
  5239  0F2B  0823               	movf	(sprintf@f+1)^(0+128),w
  5240  0F2C  00A7               	movwf	(??_sprintf^(0+128)+1)
  5241  0F2D  0822               	movf	sprintf@f^(0+128),w
  5242  0F2E  00A6               	movwf	??_sprintf^(0+128)
  5243  0F2F  0AA2               	incf	sprintf@f^(0+128),f
  5244  0F30  1903               	skipnz
  5245  0F31  0AA3               	incf	(sprintf@f+1)^(0+128),f
  5246  0F32  0826               	movf	??_sprintf^(0+128),w
  5247  0F33  0084               	movwf	4
  5248  0F34  0827               	movf	(??_sprintf+1)^(0+128),w
  5249  0F35  0085               	movwf	5
  5250  0F36  0800               	movf	0,w	;code access
  5251  0F37  00A8               	movwf	(??_sprintf+2)^(0+128)
  5252  0F38  0828               	movf	(??_sprintf+2)^(0+128),w
  5253  0F39  00B1               	movwf	sprintf@c^(0+128)
  5254  0F3A  08B1               	movf	sprintf@c^(0+128),f
  5255  0F3B  1903               	btfsc	3,2
  5256  0F3C  2FFB               	goto	l4092
  5257                           
  5258                           ;doprnt.c: 547: if(c != '%')
  5259  0F3D  0831               	movf	sprintf@c^(0+128),w
  5260  0F3E  3A25               	xorlw	37
  5261  0F3F  1903               	skipnz
  5262  0F40  2F4D               	goto	l4046
  5263                           
  5264                           ;doprnt.c: 549: {
  5265                           ;doprnt.c: 550: ((*sp++ = (c)));
  5266  0F41  0831               	movf	sprintf@c^(0+128),w
  5267  0F42  00A6               	movwf	??_sprintf^(0+128)
  5268  0F43  0832               	movf	sprintf@sp^(0+128),w
  5269  0F44  0086               	movwf	6
  5270  0F45  0187               	clrf	7
  5271  0F46  0826               	movf	??_sprintf^(0+128),w
  5272  0F47  0081               	movwf	1
  5273  0F48  3001               	movlw	1
  5274  0F49  00A6               	movwf	??_sprintf^(0+128)
  5275  0F4A  0826               	movf	??_sprintf^(0+128),w
  5276  0F4B  07B2               	addwf	sprintf@sp^(0+128),f
  5277                           
  5278                           ;doprnt.c: 551: continue;
  5279  0F4C  2F2B               	goto	l4090
  5280  0F4D                     l4046:	
  5281                           
  5282                           ;doprnt.c: 552: }
  5283                           ;doprnt.c: 557: flag = 0;
  5284  0F4D  01AB               	clrf	sprintf@flag^(0+128)
  5285                           
  5286                           ;doprnt.c: 831: }
  5287                           
  5288                           ;doprnt.c: 822: continue;
  5289                           
  5290                           ;doprnt.c: 811: default:
  5291                           
  5292                           ;doprnt.c: 707: case 'i':
  5293                           ;doprnt.c: 708: break;
  5294                           
  5295                           ;doprnt.c: 706: case 'd':
  5296                           
  5297                           ;doprnt.c: 647: goto alldone;
  5298                           
  5299                           ;doprnt.c: 646: case 0:
  5300                           
  5301                           ;doprnt.c: 644: switch(c = *f++) {
  5302  0F4E  0823               	movf	(sprintf@f+1)^(0+128),w
  5303  0F4F  00A7               	movwf	(??_sprintf^(0+128)+1)
  5304  0F50  0822               	movf	sprintf@f^(0+128),w
  5305  0F51  00A6               	movwf	??_sprintf^(0+128)
  5306  0F52  0AA2               	incf	sprintf@f^(0+128),f
  5307  0F53  1903               	skipnz
  5308  0F54  0AA3               	incf	(sprintf@f+1)^(0+128),f
  5309  0F55  0826               	movf	??_sprintf^(0+128),w
  5310  0F56  0084               	movwf	4
  5311  0F57  0827               	movf	(??_sprintf+1)^(0+128),w
  5312  0F58  0085               	movwf	5
  5313  0F59  0800               	movf	0,w	;code access
  5314  0F5A  00B1               	movwf	sprintf@c^(0+128)
  5315                           
  5316                           ; Switch size 1, requested type "space"
  5317                           ; Number of cases is 3, Range of values is 0 to 105
  5318                           ; switch strategies available:
  5319                           ; Name         Instructions Cycles
  5320                           ; simple_byte           10     6 (average)
  5321                           ; direct_byte          218     6 (fixed)
  5322                           ; jumptable            260     6 (fixed)
  5323                           ;	Chosen strategy is simple_byte
  5324  0F5B  3A00               	xorlw	0	; case 0
  5325  0F5C  1903               	skipnz
  5326  0F5D  2FFB               	goto	l4092
  5327  0F5E  3A64               	xorlw	100	; case 100
  5328  0F5F  1903               	skipnz
  5329  0F60  2F65               	goto	l4052
  5330  0F61  3A0D               	xorlw	13	; case 105
  5331  0F62  1903               	skipnz
  5332  0F63  2F65               	goto	l4052
  5333  0F64  2F2B               	goto	l4090
  5334  0F65                     l4052:	
  5335                           
  5336                           ;doprnt.c: 1262: {
  5337                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5338  0F65  082A               	movf	sprintf@ap^(0+128),w
  5339  0F66  0086               	movwf	6
  5340  0F67  0187               	clrf	7
  5341  0F68  3F40               	moviw [0]fsr1
  5342  0F69  00AD               	movwf	sprintf@_val^(0+128)
  5343  0F6A  3F41               	moviw [1]fsr1
  5344  0F6B  00AE               	movwf	(sprintf@_val+1)^(0+128)
  5345  0F6C  3002               	movlw	2
  5346  0F6D  00A6               	movwf	??_sprintf^(0+128)
  5347  0F6E  0826               	movf	??_sprintf^(0+128),w
  5348  0F6F  07AA               	addwf	sprintf@ap^(0+128),f
  5349                           
  5350                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  5351  0F70  1FAE               	btfss	(sprintf@_val+1)^(0+128),7
  5352  0F71  2F7B               	goto	l4062
  5353                           
  5354                           ;doprnt.c: 1271: flag |= 0x03;
  5355  0F72  3003               	movlw	3
  5356  0F73  00A6               	movwf	??_sprintf^(0+128)
  5357  0F74  0826               	movf	??_sprintf^(0+128),w
  5358  0F75  04AB               	iorwf	sprintf@flag^(0+128),f
  5359                           
  5360                           ;doprnt.c: 1272: _val._val = -_val._val;
  5361  0F76  09AD               	comf	sprintf@_val^(0+128),f
  5362  0F77  09AE               	comf	(sprintf@_val+1)^(0+128),f
  5363  0F78  0AAD               	incf	sprintf@_val^(0+128),f
  5364  0F79  1903               	skipnz
  5365  0F7A  0AAE               	incf	(sprintf@_val+1)^(0+128),f
  5366  0F7B                     l4062:	
  5367                           
  5368                           ;doprnt.c: 1273: }
  5369                           ;doprnt.c: 1275: }
  5370                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5371  0F7B  01B1               	clrf	sprintf@c^(0+128)
  5372  0F7C  0AB1               	incf	sprintf@c^(0+128),f
  5373  0F7D  0831               	movf	sprintf@c^(0+128),w
  5374  0F7E  3A05               	xorlw	5
  5375  0F7F  1903               	btfsc	3,2
  5376  0F80  2FA0               	goto	l4074
  5377  0F81                     l4066:	
  5378                           
  5379                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  5380  0F81  0831               	movf	sprintf@c^(0+128),w
  5381  0F82  00A6               	movwf	??_sprintf^(0+128)
  5382  0F83  01A7               	clrf	(??_sprintf^(0+128)+1)
  5383  0F84  35A6               	lslf	??_sprintf^(0+128),f
  5384  0F85  0DA7               	rlf	(??_sprintf^(0+128)+1),f
  5385  0F86  3054               	movlw	low (_dpowers| (0+32768))
  5386  0F87  0726               	addwf	??_sprintf^(0+128),w
  5387  0F88  0084               	movwf	4
  5388  0F89  3083               	movlw	high (_dpowers| (0+32768))
  5389  0F8A  3D27               	addwfc	(??_sprintf+1)^(0+128),w
  5390  0F8B  0085               	movwf	5
  5391  0F8C  3F00               	moviw [0]fsr0
  5392  0F8D  00A8               	movwf	(??_sprintf+2)^(0+128)
  5393  0F8E  3F01               	moviw [1]fsr0
  5394  0F8F  00A9               	movwf	((??_sprintf+2)^(0+128)+1)
  5395  0F90  0829               	movf	(??_sprintf+3)^(0+128),w
  5396  0F91  022E               	subwf	(sprintf@_val+1)^(0+128),w
  5397  0F92  1D03               	skipz
  5398  0F93  2F96               	goto	u6105
  5399  0F94  0828               	movf	(??_sprintf+2)^(0+128),w
  5400  0F95  022D               	subwf	sprintf@_val^(0+128),w
  5401  0F96                     u6105:	
  5402  0F96  1C03               	btfss	3,0
  5403  0F97  2FA0               	goto	l4074
  5404                           
  5405                           ;doprnt.c: 1316: break;
  5406  0F98  3001               	movlw	1
  5407  0F99  00A6               	movwf	??_sprintf^(0+128)
  5408  0F9A  0826               	movf	??_sprintf^(0+128),w
  5409  0F9B  07B1               	addwf	sprintf@c^(0+128),f
  5410  0F9C  0831               	movf	sprintf@c^(0+128),w
  5411  0F9D  3A05               	xorlw	5
  5412  0F9E  1D03               	skipz
  5413  0F9F  2F81               	goto	l4066
  5414  0FA0                     l4074:	
  5415                           
  5416                           ;doprnt.c: 1431: {
  5417                           ;doprnt.c: 1447: if(flag & 0x03)
  5418  0FA0  082B               	movf	sprintf@flag^(0+128),w
  5419  0FA1  3903               	andlw	3
  5420  0FA2  1903               	btfsc	3,2
  5421  0FA3  2FAF               	goto	l4080
  5422                           
  5423                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  5424  0FA4  302D               	movlw	45
  5425  0FA5  00A6               	movwf	??_sprintf^(0+128)
  5426  0FA6  0832               	movf	sprintf@sp^(0+128),w
  5427  0FA7  0086               	movwf	6
  5428  0FA8  0187               	clrf	7
  5429  0FA9  0826               	movf	??_sprintf^(0+128),w
  5430  0FAA  0081               	movwf	1
  5431  0FAB  3001               	movlw	1
  5432  0FAC  00A6               	movwf	??_sprintf^(0+128)
  5433  0FAD  0826               	movf	??_sprintf^(0+128),w
  5434  0FAE  07B2               	addwf	sprintf@sp^(0+128),f
  5435  0FAF                     l4080:	
  5436                           
  5437                           ;doprnt.c: 1478: }
  5438                           ;doprnt.c: 1481: prec = c;
  5439  0FAF  0831               	movf	sprintf@c^(0+128),w
  5440  0FB0  00A6               	movwf	??_sprintf^(0+128)
  5441  0FB1  0826               	movf	??_sprintf^(0+128),w
  5442  0FB2  00AC               	movwf	sprintf@prec^(0+128)
  5443  0FB3                     l4088:	
  5444                           ;doprnt.c: 1483: while(prec--) {
  5445                           
  5446  0FB3  30FF               	movlw	-1
  5447  0FB4  00A6               	movwf	??_sprintf^(0+128)
  5448  0FB5  0826               	movf	??_sprintf^(0+128),w
  5449  0FB6  07AC               	addwf	sprintf@prec^(0+128),f
  5450  0FB7  082C               	movf	sprintf@prec^(0+128),w
  5451  0FB8  3AFF               	xorlw	255
  5452  0FB9  1903               	btfsc	3,2
  5453  0FBA  2F2B               	goto	l4090
  5454                           
  5455                           ;doprnt.c: 1487: {
  5456                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  5457  0FBB  300A               	movlw	10
  5458  0FBC  0020               	movlb	0	; select bank0
  5459  0FBD  00BF               	movwf	___lwmod@divisor
  5460  0FBE  3000               	movlw	0
  5461  0FBF  00C0               	movwf	___lwmod@divisor+1
  5462  0FC0  0021               	movlb	1	; select bank1
  5463  0FC1  082C               	movf	sprintf@prec^(0+128),w
  5464  0FC2  00A6               	movwf	??_sprintf^(0+128)
  5465  0FC3  01A7               	clrf	(??_sprintf^(0+128)+1)
  5466  0FC4  35A6               	lslf	??_sprintf^(0+128),f
  5467  0FC5  0DA7               	rlf	(??_sprintf^(0+128)+1),f
  5468  0FC6  3054               	movlw	low (_dpowers| (0+32768))
  5469  0FC7  0726               	addwf	??_sprintf^(0+128),w
  5470  0FC8  0084               	movwf	4
  5471  0FC9  3083               	movlw	high (_dpowers| (0+32768))
  5472  0FCA  3D27               	addwfc	(??_sprintf+1)^(0+128),w
  5473  0FCB  0085               	movwf	5
  5474  0FCC  3F00               	moviw [0]fsr0
  5475  0FCD  0020               	movlb	0	; select bank0
  5476  0FCE  00B7               	movwf	___lwdiv@divisor
  5477  0FCF  3F01               	moviw [1]fsr0
  5478  0FD0  00B8               	movwf	___lwdiv@divisor+1
  5479  0FD1  0021               	movlb	1	; select bank1
  5480  0FD2  082E               	movf	(sprintf@_val+1)^(0+128),w
  5481  0FD3  0020               	movlb	0	; select bank0
  5482  0FD4  01BA               	clrf	___lwdiv@dividend+1
  5483  0FD5  07BA               	addwf	___lwdiv@dividend+1,f
  5484  0FD6  0021               	movlb	1	; select bank1
  5485  0FD7  082D               	movf	sprintf@_val^(0+128),w
  5486  0FD8  0020               	movlb	0	; select bank0
  5487  0FD9  01B9               	clrf	___lwdiv@dividend
  5488  0FDA  07B9               	addwf	___lwdiv@dividend,f
  5489  0FDB  318A  2225  318F   	fcall	___lwdiv
  5490  0FDE  0020               	movlb	0	; select bank0
  5491  0FDF  0838               	movf	?___lwdiv+1,w
  5492  0FE0  01C2               	clrf	___lwmod@dividend+1
  5493  0FE1  07C2               	addwf	___lwmod@dividend+1,f
  5494  0FE2  0837               	movf	?___lwdiv,w
  5495  0FE3  01C1               	clrf	___lwmod@dividend
  5496  0FE4  07C1               	addwf	___lwmod@dividend,f
  5497  0FE5  3189  21EF  318F   	fcall	___lwmod
  5498  0FE8  0020               	movlb	0	; select bank0
  5499  0FE9  083F               	movf	?___lwmod,w
  5500  0FEA  3E30               	addlw	48
  5501  0FEB  0021               	movlb	1	; select bank1
  5502  0FEC  00A8               	movwf	(??_sprintf+2)^(0+128)
  5503  0FED  0828               	movf	(??_sprintf+2)^(0+128),w
  5504  0FEE  00B1               	movwf	sprintf@c^(0+128)
  5505                           
  5506                           ;doprnt.c: 1532: }
  5507                           ;doprnt.c: 1533: ((*sp++ = (c)));
  5508  0FEF  0831               	movf	sprintf@c^(0+128),w
  5509  0FF0  00A6               	movwf	??_sprintf^(0+128)
  5510  0FF1  0832               	movf	sprintf@sp^(0+128),w
  5511  0FF2  0086               	movwf	6
  5512  0FF3  0187               	clrf	7
  5513  0FF4  0826               	movf	??_sprintf^(0+128),w
  5514  0FF5  0081               	movwf	1
  5515  0FF6  3001               	movlw	1
  5516  0FF7  00A6               	movwf	??_sprintf^(0+128)
  5517  0FF8  0826               	movf	??_sprintf^(0+128),w
  5518  0FF9  07B2               	addwf	sprintf@sp^(0+128),f
  5519  0FFA  2FB3               	goto	l4088
  5520  0FFB                     l4092:	
  5521                           ;doprnt.c: 1534: }
  5522                           ;doprnt.c: 1542: }
  5523                           ;doprnt.c: 1544: alldone:
  5524                           
  5525                           
  5526                           ;doprnt.c: 1547: *sp = 0;
  5527  0FFB  0832               	movf	sprintf@sp^(0+128),w
  5528  0FFC  0086               	movwf	6
  5529  0FFD  0187               	clrf	7
  5530  0FFE  0181               	clrf	1
  5531  0FFF  0008               	return
  5532  1000                     __end_of_sprintf:	
  5533                           ;doprnt.c: 1549: return 0;
  5534                           ;	Return value of _sprintf is never used
  5535                           
  5536                           
  5537                           	psect	text23
  5538  09EF                     __ptext23:	
  5539 ;; *************** function ___lwmod *****************
  5540 ;; Defined at:
  5541 ;;		line 6 in file "/Applications/microchip/xc8/v1.32/sources/common/lwmod.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;  divisor         2   31[BANK0 ] unsigned int 
  5544 ;;  dividend        2   33[BANK0 ] unsigned int 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  counter         1    1[BANK1 ] unsigned char 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  2   31[BANK0 ] unsigned int 
  5549 ;; Registers used:
  5550 ;;		wreg, status,2, status,0
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5556 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5557 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5558 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5559 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5560 ;;Total ram usage:        6 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    2
  5563 ;; This function calls:
  5564 ;;		Nothing
  5565 ;; This function is called by:
  5566 ;;		_sprintf
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           
  5571                           ;psect for function ___lwmod
  5572  09EF                     ___lwmod:	
  5573                           
  5574                           ;incstack = 0
  5575                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5576  09EF  0020               	movlb	0	; select bank0
  5577  09F0  0840               	movf	___lwmod@divisor+1,w
  5578  09F1  043F               	iorwf	___lwmod@divisor,w
  5579  09F2  1903               	skipnz
  5580  09F3  2A1D               	goto	l3968
  5581  09F4  0021               	movlb	1	; select bank1
  5582  09F5  01A1               	clrf	___lwmod@counter^(0+128)
  5583  09F6  0AA1               	incf	___lwmod@counter^(0+128),f
  5584  09F7                     l3958:	
  5585  09F7  0020               	movlb	0	; select bank0
  5586  09F8  1BC0               	btfsc	___lwmod@divisor+1,7
  5587  09F9  2A06               	goto	l3960
  5588  09FA  3001               	movlw	1
  5589  09FB  0020               	movlb	0	; select bank0
  5590  09FC                     u5935:	
  5591  09FC  35BF               	lslf	___lwmod@divisor,f
  5592  09FD  0DC0               	rlf	___lwmod@divisor+1,f
  5593  09FE  0B89               	decfsz	9,f
  5594  09FF  29FC               	goto	u5935
  5595  0A00  3001               	movlw	1
  5596  0A01  0021               	movlb	1	; select bank1
  5597  0A02  00A0               	movwf	??___lwmod^(0+128)
  5598  0A03  0820               	movf	??___lwmod^(0+128),w
  5599  0A04  07A1               	addwf	___lwmod@counter^(0+128),f
  5600  0A05  29F7               	goto	l3958
  5601  0A06                     l3960:	
  5602  0A06  0020               	movlb	0	; select bank0
  5603  0A07  0840               	movf	___lwmod@divisor+1,w
  5604  0A08  0242               	subwf	___lwmod@dividend+1,w
  5605  0A09  1D03               	skipz
  5606  0A0A  2A0D               	goto	u5955
  5607  0A0B  083F               	movf	___lwmod@divisor,w
  5608  0A0C  0241               	subwf	___lwmod@dividend,w
  5609  0A0D                     u5955:	
  5610  0A0D  1C03               	skipc
  5611  0A0E  2A13               	goto	l3964
  5612  0A0F  083F               	movf	___lwmod@divisor,w
  5613  0A10  02C1               	subwf	___lwmod@dividend,f
  5614  0A11  0840               	movf	___lwmod@divisor+1,w
  5615  0A12  3BC2               	subwfb	___lwmod@dividend+1,f
  5616  0A13                     l3964:	
  5617  0A13  3001               	movlw	1
  5618  0A14                     u5965:	
  5619  0A14  36C0               	lsrf	___lwmod@divisor+1,f
  5620  0A15  0CBF               	rrf	___lwmod@divisor,f
  5621  0A16  0B89               	decfsz	9,f
  5622  0A17  2A14               	goto	u5965
  5623  0A18  3001               	movlw	1
  5624  0A19  0021               	movlb	1	; select bank1
  5625  0A1A  02A1               	subwf	___lwmod@counter^(0+128),f
  5626  0A1B  1D03               	btfss	3,2
  5627  0A1C  2A06               	goto	l3960
  5628  0A1D                     l3968:	
  5629  0A1D  0020               	movlb	0	; select bank0
  5630  0A1E  0842               	movf	___lwmod@dividend+1,w
  5631  0A1F  01C0               	clrf	?___lwmod+1
  5632  0A20  07C0               	addwf	?___lwmod+1,f
  5633  0A21  0841               	movf	___lwmod@dividend,w
  5634  0A22  01BF               	clrf	?___lwmod
  5635  0A23  07BF               	addwf	?___lwmod,f
  5636  0A24  0008               	return
  5637  0A25                     __end_of___lwmod:	
  5638                           
  5639                           	psect	text24
  5640  0A25                     __ptext24:	
  5641 ;; *************** function ___lwdiv *****************
  5642 ;; Defined at:
  5643 ;;		line 6 in file "/Applications/microchip/xc8/v1.32/sources/common/lwdiv.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;  divisor         2   23[BANK0 ] unsigned int 
  5646 ;;  dividend        2   25[BANK0 ] unsigned int 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  quotient        2   29[BANK0 ] unsigned int 
  5649 ;;  counter         1   28[BANK0 ] unsigned char 
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  2   23[BANK0 ] unsigned int 
  5652 ;; Registers used:
  5653 ;;		wreg, status,2, status,0
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5659 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5660 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5662 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5663 ;;Total ram usage:        8 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:    2
  5666 ;; This function calls:
  5667 ;;		Nothing
  5668 ;; This function is called by:
  5669 ;;		_sprintf
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           
  5674                           ;psect for function ___lwdiv
  5675  0A25                     ___lwdiv:	
  5676                           
  5677                           ;incstack = 0
  5678                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5679  0A25  0020               	movlb	0	; select bank0
  5680  0A26  01BD               	clrf	___lwdiv@quotient
  5681  0A27  01BE               	clrf	___lwdiv@quotient+1
  5682  0A28  0838               	movf	___lwdiv@divisor+1,w
  5683  0A29  0437               	iorwf	___lwdiv@divisor,w
  5684  0A2A  1903               	skipnz
  5685  0A2B  2A55               	goto	l3106
  5686  0A2C  01BC               	clrf	___lwdiv@counter
  5687  0A2D  0ABC               	incf	___lwdiv@counter,f
  5688  0A2E                     l3094:	
  5689  0A2E  1BB8               	btfsc	___lwdiv@divisor+1,7
  5690  0A2F  2A3A               	goto	l3096
  5691  0A30  3001               	movlw	1
  5692  0A31                     u4085:	
  5693  0A31  35B7               	lslf	___lwdiv@divisor,f
  5694  0A32  0DB8               	rlf	___lwdiv@divisor+1,f
  5695  0A33  0B89               	decfsz	9,f
  5696  0A34  2A31               	goto	u4085
  5697  0A35  3001               	movlw	1
  5698  0A36  00BB               	movwf	??___lwdiv
  5699  0A37  083B               	movf	??___lwdiv,w
  5700  0A38  07BC               	addwf	___lwdiv@counter,f
  5701  0A39  2A2E               	goto	l3094
  5702  0A3A                     l3096:	
  5703  0A3A  3001               	movlw	1
  5704  0A3B                     u4105:	
  5705  0A3B  35BD               	lslf	___lwdiv@quotient,f
  5706  0A3C  0DBE               	rlf	___lwdiv@quotient+1,f
  5707  0A3D  0B89               	decfsz	9,f
  5708  0A3E  2A3B               	goto	u4105
  5709  0A3F  0838               	movf	___lwdiv@divisor+1,w
  5710  0A40  023A               	subwf	___lwdiv@dividend+1,w
  5711  0A41  1D03               	skipz
  5712  0A42  2A45               	goto	u4115
  5713  0A43  0837               	movf	___lwdiv@divisor,w
  5714  0A44  0239               	subwf	___lwdiv@dividend,w
  5715  0A45                     u4115:	
  5716  0A45  1C03               	skipc
  5717  0A46  2A4C               	goto	l3102
  5718  0A47  0837               	movf	___lwdiv@divisor,w
  5719  0A48  02B9               	subwf	___lwdiv@dividend,f
  5720  0A49  0838               	movf	___lwdiv@divisor+1,w
  5721  0A4A  3BBA               	subwfb	___lwdiv@dividend+1,f
  5722  0A4B  143D               	bsf	___lwdiv@quotient,0
  5723  0A4C                     l3102:	
  5724  0A4C  3001               	movlw	1
  5725  0A4D                     u4125:	
  5726  0A4D  36B8               	lsrf	___lwdiv@divisor+1,f
  5727  0A4E  0CB7               	rrf	___lwdiv@divisor,f
  5728  0A4F  0B89               	decfsz	9,f
  5729  0A50  2A4D               	goto	u4125
  5730  0A51  3001               	movlw	1
  5731  0A52  02BC               	subwf	___lwdiv@counter,f
  5732  0A53  1D03               	btfss	3,2
  5733  0A54  2A3A               	goto	l3096
  5734  0A55                     l3106:	
  5735  0A55  083E               	movf	___lwdiv@quotient+1,w
  5736  0A56  01B8               	clrf	?___lwdiv+1
  5737  0A57  07B8               	addwf	?___lwdiv+1,f
  5738  0A58  083D               	movf	___lwdiv@quotient,w
  5739  0A59  01B7               	clrf	?___lwdiv
  5740  0A5A  07B7               	addwf	?___lwdiv,f
  5741  0A5B  0008               	return
  5742  0A5C                     __end_of___lwdiv:	
  5743                           
  5744                           	psect	text25
  5745  0A5C                     __ptext25:	
  5746 ;; *************** function _serputstr *****************
  5747 ;; Defined at:
  5748 ;;		line 93 in file "support.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  line            2   29[BANK0 ] PTR const unsigned char 
  5751 ;;		 -> STR_45(3), STR_44(4), STR_43(2), STR_42(2), 
  5752 ;;		 -> errors_command@buf(10), STR_37(5), STR_36(2), STR_35(2), 
  5753 ;;		 -> status_command@buf(10), STR_25(4), STR_13(2), STR_12(4), 
  5754 ;;		 -> STR_11(27), STR_10(6), STR_9(25), STR_8(6), 
  5755 ;;		 -> STR_7(24), STR_6(6), STR_5(2), STR_4(4), 
  5756 ;;		 -> STR_3(36), STR_2(6), STR_1(33), 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;  i               2    2[BANK1 ] int 
  5759 ;;  len             2    0[BANK1 ] int 
  5760 ;; Return value:  Size  Location     Type
  5761 ;;		None               void
  5762 ;; Registers used:
  5763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5769 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5770 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5771 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5772 ;;      Totals:         0       3       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5773 ;;Total ram usage:        7 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    3
  5776 ;; This function calls:
  5777 ;;		_serputchar
  5778 ;;		_strlen
  5779 ;; This function is called by:
  5780 ;;		_main
  5781 ;;		_status_command
  5782 ;;		_errors_command
  5783 ;;		_sergetline
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787                           
  5788                           ;psect for function _serputstr
  5789  0A5C                     _serputstr:	
  5790                           
  5791                           ;support.c: 95: int len, i;
  5792                           ;support.c: 97: len = strlen(line);
  5793                           
  5794                           ;incstack = 0
  5795                           ; Regs used in _serputstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5796  0A5C  0020               	movlb	0	; select bank0
  5797  0A5D  083E               	movf	serputstr@line+1,w
  5798  0A5E  01B8               	clrf	strlen@s+1
  5799  0A5F  07B8               	addwf	strlen@s+1,f
  5800  0A60  083D               	movf	serputstr@line,w
  5801  0A61  01B7               	clrf	strlen@s
  5802  0A62  07B7               	addwf	strlen@s,f
  5803  0A63  3189  216E  318A   	fcall	_strlen
  5804  0A66  0020               	movlb	0	; select bank0
  5805  0A67  0838               	movf	?_strlen+1,w
  5806  0A68  0021               	movlb	1	; select bank1
  5807  0A69  01A1               	clrf	(serputstr@len+1)^(0+128)
  5808  0A6A  07A1               	addwf	(serputstr@len+1)^(0+128),f
  5809  0A6B  0020               	movlb	0	; select bank0
  5810  0A6C  0837               	movf	?_strlen,w
  5811  0A6D  0021               	movlb	1	; select bank1
  5812  0A6E  01A0               	clrf	serputstr@len^(0+128)
  5813  0A6F  07A0               	addwf	serputstr@len^(0+128),f
  5814                           
  5815                           ;support.c: 98: for (i = 0; i < len; ++i) {
  5816  0A70  01A2               	clrf	serputstr@i^(0+128)
  5817  0A71  01A3               	clrf	(serputstr@i+1)^(0+128)
  5818  0A72                     l4004:	
  5819  0A72  0823               	movf	(serputstr@i+1)^(0+128),w
  5820  0A73  3A80               	xorlw	128
  5821  0A74  0020               	movlb	0	; select bank0
  5822  0A75  00BF               	movwf	??_serputstr
  5823  0A76  0021               	movlb	1	; select bank1
  5824  0A77  0821               	movf	(serputstr@len+1)^(0+128),w
  5825  0A78  3A80               	xorlw	128
  5826  0A79  0020               	movlb	0	; select bank0
  5827  0A7A  023F               	subwf	??_serputstr,w
  5828  0A7B  1D03               	skipz
  5829  0A7C  2A80               	goto	u6025
  5830  0A7D  0021               	movlb	1	; select bank1
  5831  0A7E  0820               	movf	serputstr@len^(0+128),w
  5832  0A7F  0222               	subwf	serputstr@i^(0+128),w
  5833  0A80                     u6025:	
  5834  0A80  1803               	btfsc	3,0
  5835  0A81  0008               	return
  5836                           
  5837                           ;support.c: 99: serputchar(line[i]);
  5838  0A82  0020               	movlb	0	; select bank0
  5839  0A83  083D               	movf	serputstr@line,w
  5840  0A84  0021               	movlb	1	; select bank1
  5841  0A85  0722               	addwf	serputstr@i^(0+128),w
  5842  0A86  0084               	movwf	4
  5843  0A87  0020               	movlb	0	; select bank0
  5844  0A88  083E               	movf	serputstr@line+1,w
  5845  0A89  0021               	movlb	1	; select bank1
  5846  0A8A  3D23               	addwfc	(serputstr@i+1)^(0+128),w
  5847  0A8B  0085               	movwf	5
  5848  0A8C  0800               	movf	0,w	;code access
  5849  0A8D  3188  20F7  318A   	fcall	_serputchar
  5850  0A90  3001               	movlw	1
  5851  0A91  0021               	movlb	1	; select bank1
  5852  0A92  07A2               	addwf	serputstr@i^(0+128),f
  5853  0A93  3000               	movlw	0
  5854  0A94  3DA3               	addwfc	(serputstr@i+1)^(0+128),f
  5855  0A95  2A72               	goto	l4004
  5856  0A96                     __end_of_serputstr:	
  5857                           
  5858                           	psect	text26
  5859  08F7                     __ptext26:	
  5860 ;; *************** function _serputchar *****************
  5861 ;; Defined at:
  5862 ;;		line 81 in file "support.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;  c               1    wreg     const unsigned char 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;  c               1   23[BANK0 ] const unsigned char 
  5867 ;; Return value:  Size  Location     Type
  5868 ;;		None               void
  5869 ;; Registers used:
  5870 ;;		wreg
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5880 ;;Total ram usage:        1 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    2
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_serputstr
  5887 ;;		_sergetline
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           
  5892                           ;psect for function _serputchar
  5893  08F7                     _serputchar:	
  5894                           
  5895                           ;incstack = 0
  5896                           ; Regs used in _serputchar: [wreg]
  5897                           ;serputchar@c stored from wreg
  5898  08F7  0020               	movlb	0	; select bank0
  5899  08F8  00B7               	movwf	serputchar@c
  5900  08F9                     l440:	
  5901                           ;support.c: 83: while(TXIF == 0);
  5902                           
  5903  08F9  1E11               	btfss	17,4	;volatile
  5904  08FA  28F9               	goto	l440
  5905                           
  5906                           ;support.c: 84: TXREG = c;
  5907  08FB  0837               	movf	serputchar@c,w
  5908  08FC  0023               	movlb	3	; select bank3
  5909  08FD  009A               	movwf	26	;volatile
  5910  08FE  0008               	return
  5911  08FF                     __end_of_serputchar:	
  5912                           
  5913                           	psect	text27
  5914  096E                     __ptext27:	
  5915 ;; *************** function _strlen *****************
  5916 ;; Defined at:
  5917 ;;		line 4 in file "/Applications/microchip/xc8/v1.32/sources/common/strlen.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;  s               2   23[BANK0 ] PTR const unsigned char 
  5920 ;;		 -> STR_45(3), STR_44(4), STR_43(2), STR_42(2), 
  5921 ;;		 -> errors_command@buf(10), STR_37(5), STR_36(2), STR_35(2), 
  5922 ;;		 -> status_command@buf(10), STR_25(4), STR_13(2), STR_12(4), 
  5923 ;;		 -> STR_11(27), STR_10(6), STR_9(25), STR_8(6), 
  5924 ;;		 -> STR_7(24), STR_6(6), main@cmd_descr(12), STR_5(2), 
  5925 ;;		 -> STR_4(4), STR_3(36), STR_2(6), main@cmdbuf(10), 
  5926 ;;		 -> STR_1(33), 
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;  cp              2   27[BANK0 ] PTR const unsigned char 
  5929 ;;		 -> STR_45(3), STR_44(4), STR_43(2), STR_42(2), 
  5930 ;;		 -> errors_command@buf(10), STR_37(5), STR_36(2), STR_35(2), 
  5931 ;;		 -> status_command@buf(10), STR_25(4), STR_13(2), STR_12(4), 
  5932 ;;		 -> STR_11(27), STR_10(6), STR_9(25), STR_8(6), 
  5933 ;;		 -> STR_7(24), STR_6(6), main@cmd_descr(12), STR_5(2), 
  5934 ;;		 -> STR_4(4), STR_3(36), STR_2(6), main@cmdbuf(10), 
  5935 ;;		 -> STR_1(33), 
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  2   23[BANK0 ] unsigned int 
  5938 ;; Registers used:
  5939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5945 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5946 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5947 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5948 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5949 ;;Total ram usage:        6 bytes
  5950 ;; Hardware stack levels used:    1
  5951 ;; Hardware stack levels required when called:    2
  5952 ;; This function calls:
  5953 ;;		Nothing
  5954 ;; This function is called by:
  5955 ;;		_main
  5956 ;;		_echo_command
  5957 ;;		_remote_command
  5958 ;;		_enable1_command
  5959 ;;		_enable2_command
  5960 ;;		_pulse_command
  5961 ;;		_power_command
  5962 ;;		_ttlout_command
  5963 ;;		_serputstr
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           
  5968                           ;psect for function _strlen
  5969  096E                     _strlen:	
  5970                           
  5971                           ;incstack = 0
  5972                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  5973  096E  0020               	movlb	0	; select bank0
  5974  096F  0838               	movf	strlen@s+1,w
  5975  0970  01BC               	clrf	strlen@cp+1
  5976  0971  07BC               	addwf	strlen@cp+1,f
  5977  0972  0837               	movf	strlen@s,w
  5978  0973  01BB               	clrf	strlen@cp
  5979  0974  07BB               	addwf	strlen@cp,f
  5980  0975                     l3940:	
  5981  0975  083B               	movf	strlen@cp,w
  5982  0976  0084               	movwf	4
  5983  0977  083C               	movf	strlen@cp+1,w
  5984  0978  0085               	movwf	5
  5985  0979  0800               	movf	0,w	;code access
  5986  097A  3800               	iorlw	0
  5987  097B  1903               	btfsc	3,2
  5988  097C  2982               	goto	l3942
  5989  097D  3001               	movlw	1
  5990  097E  07BB               	addwf	strlen@cp,f
  5991  097F  3000               	movlw	0
  5992  0980  3DBC               	addwfc	strlen@cp+1,f
  5993  0981  2975               	goto	l3940
  5994  0982                     l3942:	
  5995  0982  0937               	comf	strlen@s,w
  5996  0983  00B9               	movwf	??_strlen
  5997  0984  0938               	comf	strlen@s+1,w
  5998  0985  00BA               	movwf	??_strlen+1
  5999  0986  0AB9               	incf	??_strlen,f
  6000  0987  1903               	skipnz
  6001  0988  0ABA               	incf	??_strlen+1,f
  6002  0989  083B               	movf	strlen@cp,w
  6003  098A  0739               	addwf	??_strlen,w
  6004  098B  00B7               	movwf	?_strlen
  6005  098C  083C               	movf	strlen@cp+1,w
  6006  098D  3D3A               	addwfc	??_strlen+1,w
  6007  098E  00B8               	movwf	?_strlen+1
  6008  098F  0008               	return
  6009  0990                     __end_of_strlen:	
  6010                           
  6011                           	psect	text28
  6012  0D6F                     __ptext28:	
  6013 ;; *************** function _atoi *****************
  6014 ;; Defined at:
  6015 ;;		line 5 in file "/Applications/microchip/xc8/v1.32/sources/common/atoi.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;  s               1    wreg     PTR const unsigned char 
  6018 ;;		 -> main@cmd_descr(12), 
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;  s               1    3[BANK1 ] PTR const unsigned char 
  6021 ;;		 -> main@cmd_descr(12), 
  6022 ;;  a               2    1[BANK1 ] int 
  6023 ;;  sign            1    0[BANK1 ] unsigned char 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  2   29[BANK0 ] int 
  6026 ;; Registers used:
  6027 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6033 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6034 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6035 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6036 ;;      Totals:         0       4       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6037 ;;Total ram usage:        8 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    3
  6040 ;; This function calls:
  6041 ;;		___wmul
  6042 ;;		_isdigit
  6043 ;; This function is called by:
  6044 ;;		_echo_command
  6045 ;;		_remote_command
  6046 ;;		_enable1_command
  6047 ;;		_enable2_command
  6048 ;;		_pulse_command
  6049 ;;		_power_command
  6050 ;;		_ttlout_command
  6051 ;; This function uses a non-reentrant model
  6052 ;;
  6053                           
  6054                           
  6055                           ;psect for function _atoi
  6056  0D6F                     _atoi:	
  6057                           
  6058                           ;incstack = 0
  6059                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6060                           ;atoi@s stored from wreg
  6061  0D6F  0021               	movlb	1	; select bank1
  6062  0D70  00A3               	movwf	atoi@s^(0+128)
  6063  0D71                     l3202:	
  6064  0D71  0823               	movf	atoi@s^(0+128),w
  6065  0D72  0086               	movwf	6
  6066  0D73  0187               	clrf	7
  6067  0D74  0801               	movf	1,w
  6068  0D75  3A20               	xorlw	32
  6069  0D76  1D03               	btfss	3,2
  6070  0D77  2D7F               	goto	l3204
  6071  0D78                     l3200:	
  6072  0D78  3001               	movlw	1
  6073  0D79  0020               	movlb	0	; select bank0
  6074  0D7A  00BF               	movwf	??_atoi
  6075  0D7B  083F               	movf	??_atoi,w
  6076  0D7C  0021               	movlb	1	; select bank1
  6077  0D7D  07A3               	addwf	atoi@s^(0+128),f
  6078  0D7E  2D71               	goto	l3202
  6079  0D7F                     l3204:	
  6080  0D7F  0823               	movf	atoi@s^(0+128),w
  6081  0D80  0086               	movwf	6
  6082  0D81  0187               	clrf	7
  6083  0D82  0801               	movf	1,w
  6084  0D83  3A09               	xorlw	9
  6085  0D84  1903               	skipnz
  6086  0D85  2D78               	goto	l3200
  6087  0D86  01A1               	clrf	atoi@a^(0+128)
  6088  0D87  01A2               	clrf	(atoi@a+1)^(0+128)
  6089  0D88  01A0               	clrf	atoi@sign^(0+128)
  6090  0D89  0823               	movf	atoi@s^(0+128),w
  6091  0D8A  0086               	movwf	6
  6092  0D8B  0187               	clrf	7
  6093  0D8C  0801               	movf	1,w
  6094  0D8D  3A2D               	xorlw	45
  6095  0D8E  1D03               	skipz
  6096  0D8F  2D97               	goto	l3212
  6097  0D90  3001               	movlw	1
  6098  0D91  0020               	movlb	0	; select bank0
  6099  0D92  00BF               	movwf	??_atoi
  6100  0D93  083F               	movf	??_atoi,w
  6101  0D94  0021               	movlb	1	; select bank1
  6102  0D95  07A0               	addwf	atoi@sign^(0+128),f
  6103  0D96  2D9E               	goto	l3218
  6104  0D97                     l3212:	
  6105  0D97  0823               	movf	atoi@s^(0+128),w
  6106  0D98  0086               	movwf	6
  6107  0D99  0187               	clrf	7
  6108  0D9A  0801               	movf	1,w
  6109  0D9B  3A2B               	xorlw	43
  6110  0D9C  1D03               	skipz
  6111  0D9D  2DA4               	goto	l3220
  6112  0D9E                     l3218:	
  6113  0D9E  3001               	movlw	1
  6114  0D9F  0020               	movlb	0	; select bank0
  6115  0DA0  00BF               	movwf	??_atoi
  6116  0DA1  083F               	movf	??_atoi,w
  6117  0DA2  0021               	movlb	1	; select bank1
  6118  0DA3  07A3               	addwf	atoi@s^(0+128),f
  6119  0DA4                     l3220:	
  6120  0DA4  0823               	movf	atoi@s^(0+128),w
  6121  0DA5  0086               	movwf	6
  6122  0DA6  0187               	clrf	7
  6123  0DA7  0801               	movf	1,w
  6124  0DA8  3189  210C  318D   	fcall	_isdigit
  6125  0DAB  1C03               	btfss	3,0
  6126  0DAC  2DD4               	goto	l3222
  6127  0DAD  0021               	movlb	1	; select bank1
  6128  0DAE  0822               	movf	(atoi@a+1)^(0+128),w
  6129  0DAF  0020               	movlb	0	; select bank0
  6130  0DB0  01B8               	clrf	___wmul@multiplier+1
  6131  0DB1  07B8               	addwf	___wmul@multiplier+1,f
  6132  0DB2  0021               	movlb	1	; select bank1
  6133  0DB3  0821               	movf	atoi@a^(0+128),w
  6134  0DB4  0020               	movlb	0	; select bank0
  6135  0DB5  01B7               	clrf	___wmul@multiplier
  6136  0DB6  07B7               	addwf	___wmul@multiplier,f
  6137  0DB7  300A               	movlw	10
  6138  0DB8  00B9               	movwf	___wmul@multiplicand
  6139  0DB9  3000               	movlw	0
  6140  0DBA  00BA               	movwf	___wmul@multiplicand+1
  6141  0DBB  3189  2150  318D   	fcall	___wmul
  6142  0DBE  0021               	movlb	1	; select bank1
  6143  0DBF  0823               	movf	atoi@s^(0+128),w
  6144  0DC0  0086               	movwf	6
  6145  0DC1  0187               	clrf	7
  6146  0DC2  0801               	movf	1,w
  6147  0DC3  0020               	movlb	0	; select bank0
  6148  0DC4  0737               	addwf	?___wmul,w
  6149  0DC5  00BF               	movwf	??_atoi
  6150  0DC6  0838               	movf	?___wmul+1,w
  6151  0DC7  1803               	skipnc
  6152  0DC8  0A38               	incf	?___wmul+1,w
  6153  0DC9  00C0               	movwf	??_atoi+1
  6154  0DCA  083F               	movf	??_atoi,w
  6155  0DCB  3ED0               	addlw	208
  6156  0DCC  0021               	movlb	1	; select bank1
  6157  0DCD  00A1               	movwf	atoi@a^(0+128)
  6158  0DCE  30FF               	movlw	255
  6159  0DCF  0020               	movlb	0	; select bank0
  6160  0DD0  3D40               	addwfc	??_atoi+1,w
  6161  0DD1  0021               	movlb	1	; select bank1
  6162  0DD2  00A2               	movwf	(atoi@a+1)^(0+128)
  6163  0DD3  2D9E               	goto	l3218
  6164  0DD4                     l3222:	
  6165  0DD4  0021               	movlb	1	; select bank1
  6166  0DD5  0820               	movf	atoi@sign^(0+128),w
  6167  0DD6  1903               	btfsc	3,2
  6168  0DD7  2DE7               	goto	l3228
  6169  0DD8  0921               	comf	atoi@a^(0+128),w
  6170  0DD9  0020               	movlb	0	; select bank0
  6171  0DDA  00BF               	movwf	??_atoi
  6172  0DDB  0021               	movlb	1	; select bank1
  6173  0DDC  0922               	comf	(atoi@a+1)^(0+128),w
  6174  0DDD  0020               	movlb	0	; select bank0
  6175  0DDE  00C0               	movwf	??_atoi+1
  6176  0DDF  0ABF               	incf	??_atoi,f
  6177  0DE0  1903               	skipnz
  6178  0DE1  0AC0               	incf	??_atoi+1,f
  6179  0DE2  083F               	movf	??_atoi,w
  6180  0DE3  00BD               	movwf	?_atoi
  6181  0DE4  0840               	movf	??_atoi+1,w
  6182  0DE5  00BE               	movwf	?_atoi+1
  6183  0DE6  0008               	return
  6184  0DE7                     l3228:	
  6185  0DE7  0021               	movlb	1	; select bank1
  6186  0DE8  0822               	movf	(atoi@a+1)^(0+128),w
  6187  0DE9  0020               	movlb	0	; select bank0
  6188  0DEA  01BE               	clrf	?_atoi+1
  6189  0DEB  07BE               	addwf	?_atoi+1,f
  6190  0DEC  0021               	movlb	1	; select bank1
  6191  0DED  0821               	movf	atoi@a^(0+128),w
  6192  0DEE  0020               	movlb	0	; select bank0
  6193  0DEF  01BD               	clrf	?_atoi
  6194  0DF0  07BD               	addwf	?_atoi,f
  6195  0DF1  0008               	return
  6196  0DF2                     __end_of_atoi:	
  6197                           
  6198                           	psect	text29
  6199  090C                     __ptext29:	
  6200 ;; *************** function _isdigit *****************
  6201 ;; Defined at:
  6202 ;;		line 8 in file "/Applications/microchip/xc8/v1.32/sources/common/isdigit.c"
  6203 ;; Parameters:    Size  Location     Type
  6204 ;;  c               1    wreg     unsigned char 
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;  c               1   24[BANK0 ] unsigned char 
  6207 ;; Return value:  Size  Location     Type
  6208 ;;		None               void
  6209 ;; Registers used:
  6210 ;;		wreg, status,2, status,0
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6217 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6219 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6220 ;;Total ram usage:        2 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; Hardware stack levels required when called:    2
  6223 ;; This function calls:
  6224 ;;		Nothing
  6225 ;; This function is called by:
  6226 ;;		_atoi
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           
  6231                           ;psect for function _isdigit
  6232  090C                     _isdigit:	
  6233                           
  6234                           ;incstack = 0
  6235                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6236                           ;isdigit@c stored from wreg
  6237  090C  0020               	movlb	0	; select bank0
  6238  090D  00B8               	movwf	isdigit@c
  6239  090E  01B7               	clrf	_isdigit$598
  6240  090F  303A               	movlw	58
  6241  0910  0238               	subwf	isdigit@c,w
  6242  0911  1803               	skipnc
  6243  0912  2919               	goto	l3080
  6244  0913  3030               	movlw	48
  6245  0914  0238               	subwf	isdigit@c,w
  6246  0915  1C03               	skipc
  6247  0916  2919               	goto	l3080
  6248  0917  01B7               	clrf	_isdigit$598
  6249  0918  0AB7               	incf	_isdigit$598,f
  6250  0919                     l3080:	
  6251  0919  0C37               	rrf	_isdigit$598,w
  6252  091A  0008               	return
  6253  091B                     __end_of_isdigit:	
  6254                           
  6255                           	psect	text30
  6256  0950                     __ptext30:	
  6257 ;; *************** function ___wmul *****************
  6258 ;; Defined at:
  6259 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul16.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  multiplier      2   23[BANK0 ] unsigned int 
  6262 ;;  multiplicand    2   25[BANK0 ] unsigned int 
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;  product         2   27[BANK0 ] unsigned int 
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  2   23[BANK0 ] unsigned int 
  6267 ;; Registers used:
  6268 ;;		wreg, status,2, status,0
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6274 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6275 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6277 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6278 ;;Total ram usage:        6 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:    2
  6281 ;; This function calls:
  6282 ;;		Nothing
  6283 ;; This function is called by:
  6284 ;;		_atoi
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           
  6289                           ;psect for function ___wmul
  6290  0950                     ___wmul:	
  6291                           
  6292                           ;incstack = 0
  6293                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6294  0950  0020               	movlb	0	; select bank0
  6295  0951  01BB               	clrf	___wmul@product
  6296  0952  01BC               	clrf	___wmul@product+1
  6297  0953                     l3062:	
  6298  0953  1C37               	btfss	___wmul@multiplier,0
  6299  0954  2959               	goto	l583
  6300  0955  0839               	movf	___wmul@multiplicand,w
  6301  0956  07BB               	addwf	___wmul@product,f
  6302  0957  083A               	movf	___wmul@multiplicand+1,w
  6303  0958  3DBC               	addwfc	___wmul@product+1,f
  6304  0959                     l583:	
  6305  0959  3001               	movlw	1
  6306  095A                     u4025:	
  6307  095A  35B9               	lslf	___wmul@multiplicand,f
  6308  095B  0DBA               	rlf	___wmul@multiplicand+1,f
  6309  095C  0B89               	decfsz	9,f
  6310  095D  295A               	goto	u4025
  6311  095E  3001               	movlw	1
  6312  095F                     u4035:	
  6313  095F  36B8               	lsrf	___wmul@multiplier+1,f
  6314  0960  0CB7               	rrf	___wmul@multiplier,f
  6315  0961  0B89               	decfsz	9,f
  6316  0962  295F               	goto	u4035
  6317  0963  0838               	movf	___wmul@multiplier+1,w
  6318  0964  0437               	iorwf	___wmul@multiplier,w
  6319  0965  1D03               	skipz
  6320  0966  2953               	goto	l3062
  6321  0967  083C               	movf	___wmul@product+1,w
  6322  0968  01B8               	clrf	?___wmul+1
  6323  0969  07B8               	addwf	?___wmul+1,f
  6324  096A  083B               	movf	___wmul@product,w
  6325  096B  01B7               	clrf	?___wmul
  6326  096C  07B7               	addwf	?___wmul,f
  6327  096D  0008               	return
  6328  096E                     __end_of___wmul:	
  6329                           
  6330                           	psect	intentry
  6331  0004                     __pintentry:	
  6332 ;; *************** function _tc_int *****************
  6333 ;; Defined at:
  6334 ;;		line 26 in file "interrupt.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;		None
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;  period          2   21[BANK0 ] unsigned short 
  6339 ;;  slewed_perio    2   18[BANK0 ] unsigned short 
  6340 ;;  AD_val          2   16[BANK0 ] unsigned short 
  6341 ;;  pwm             2   14[BANK0 ] unsigned short 
  6342 ;;  i               1   20[BANK0 ] unsigned char 
  6343 ;; Return value:  Size  Location     Type
  6344 ;;		None               void
  6345 ;; Registers used:
  6346 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6355 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6356 ;;Total ram usage:       23 bytes
  6357 ;; Hardware stack levels used:    1
  6358 ;; Hardware stack levels required when called:    1
  6359 ;; This function calls:
  6360 ;;		i1___lmul
  6361 ;; This function is called by:
  6362 ;;		Interrupt level 1
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366  0004                     _tc_int:	
  6367                           
  6368                           ;incstack = 0
  6369                           ; Regs used in _tc_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6370  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6371  0005  3180               	pagesel	$
  6372  0006  0020               	movlb	0	; select bank0
  6373  0007  087F               	movf	127,w
  6374  0008  00A7               	movwf	??_tc_int+7
  6375                           
  6376                           ;interrupt.c: 28: static bit overtemp_1 = 0, overtemp_2 = 0;
  6377                           ;interrupt.c: 29: static unsigned char fet_temp_timer=0;
  6378                           ;interrupt.c: 30: static unsigned short int fault_timer_1=0, fault_timer_2=0, pulse_time
      +                          r=0;
  6379                           ;interrupt.c: 31: static unsigned long int fet_temp_1=0, fet_temp_2=0;
  6380                           ;interrupt.c: 32: unsigned short int AD_val, period, slewed_period, pwm;
  6381                           ;interrupt.c: 33: unsigned char i;
  6382                           ;interrupt.c: 36: if (TMR0IF) {
  6383  0009  1D0B               	btfss	11,2	;volatile
  6384  000A  2AAB               	goto	i1l165
  6385                           
  6386                           ;interrupt.c: 37: TMR0IF = 0;
  6387  000B  110B               	bcf	11,2	;volatile
  6388                           
  6389                           ;interrupt.c: 39: if (!remote_enabled) {
  6390  000C  1858               	btfsc	_remote_enabled/(0+8),_remote_enabled& (0+7)
  6391  000D  28B5               	goto	i1l3696
  6392                           
  6393                           ;interrupt.c: 40: enc_A_2 = enc_A_1;
  6394  000E  10FD               	bcf	_enc_A_2/(0+8),_enc_A_2& (0+7)
  6395  000F  1C7D               	btfss	_enc_A_1/(0+8),_enc_A_1& (0+7)
  6396  0010  2813               	goto	L5
  6397  0011  14FD               	bsf	_enc_A_2/(0+8),_enc_A_2& (0+7)
  6398                           
  6399                           ;interrupt.c: 41: enc_A_1 = RC4;
  6400  0012  107D               	bcf	_enc_A_1/(0+8),_enc_A_1& (0+7)
  6401  0013                     L5:	
  6402  0013  0020               	movlb	0	; select bank0
  6403  0014  1A0E               	btfsc	14,4	;volatile
  6404  0015  147D               	bsf	_enc_A_1/(0+8),_enc_A_1& (0+7)
  6405                           
  6406                           ;interrupt.c: 42: enc_B_2 = enc_B_1;
  6407  0016  11FD               	bcf	_enc_B_2/(0+8),_enc_B_2& (0+7)
  6408  0017  197D               	btfsc	_enc_B_1/(0+8),_enc_B_1& (0+7)
  6409  0018  15FD               	bsf	_enc_B_2/(0+8),_enc_B_2& (0+7)
  6410                           
  6411                           ;interrupt.c: 43: enc_B_1 = RC5;
  6412  0019  117D               	bcf	_enc_B_1/(0+8),_enc_B_1& (0+7)
  6413  001A  0020               	movlb	0	; select bank0
  6414  001B  1A8E               	btfsc	14,5	;volatile
  6415  001C  157D               	bsf	_enc_B_1/(0+8),_enc_B_1& (0+7)
  6416                           
  6417                           ;interrupt.c: 45: if (enc_A_1 && !enc_A_2) {
  6418  001D  187D               	btfsc	_enc_A_1/(0+8),_enc_A_1& (0+7)
  6419  001E  18FD               	btfsc	_enc_A_2/(0+8),_enc_A_2& (0+7)
  6420  001F  2823               	goto	i1l93
  6421                           
  6422                           ;interrupt.c: 46: if (!enc_B_1) {
  6423  0020  1D7D               	btfss	_enc_B_1/(0+8),_enc_B_1& (0+7)
  6424  0021  2834               	goto	L15
  6425                           
  6426                           ;interrupt.c: 48: } else {
  6427                           
  6428                           ;interrupt.c: 47: ++enc_position;
  6429  0022  2839               	goto	i1l3672
  6430  0023                     i1l93:	
  6431                           ;interrupt.c: 50: }
  6432                           ;interrupt.c: 51: } else if (!enc_A_1 && enc_A_2) {
  6433                           
  6434                           ;interrupt.c: 49: --enc_position;
  6435                           
  6436  0023  1C7D               	btfss	_enc_A_1/(0+8),_enc_A_1& (0+7)
  6437  0024  1CFD               	btfss	_enc_A_2/(0+8),_enc_A_2& (0+7)
  6438  0025  2829               	goto	i1l97
  6439                           
  6440                           ;interrupt.c: 52: if (!enc_B_1) {
  6441  0026  197D               	btfsc	_enc_B_1/(0+8),_enc_B_1& (0+7)
  6442  0027  2834               	goto	L15
  6443  0028  2839               	goto	i1l3672
  6444  0029                     i1l97:	
  6445                           ;interrupt.c: 56: }
  6446                           ;interrupt.c: 57: } else if (enc_B_1 && !enc_B_2) {
  6447                           
  6448                           ;interrupt.c: 55: ++enc_position;
  6449                           
  6450                           ;interrupt.c: 54: } else {
  6451                           
  6452                           ;interrupt.c: 53: --enc_position;
  6453                           
  6454  0029  197D               	btfsc	_enc_B_1/(0+8),_enc_B_1& (0+7)
  6455  002A  19FD               	btfsc	_enc_B_2/(0+8),_enc_B_2& (0+7)
  6456  002B  282F               	goto	i1l101
  6457                           
  6458                           ;interrupt.c: 58: if (!enc_A_1) {
  6459  002C  1C7D               	btfss	_enc_A_1/(0+8),_enc_A_1& (0+7)
  6460  002D  2839               	goto	i1l3672
  6461                           
  6462                           ;interrupt.c: 60: } else {
  6463                           
  6464                           ;interrupt.c: 59: --enc_position;
  6465  002E  2834               	goto	L15
  6466  002F                     i1l101:	
  6467                           ;interrupt.c: 62: }
  6468                           ;interrupt.c: 63: } else if (!enc_B_1 && enc_B_2) {
  6469                           
  6470                           ;interrupt.c: 61: ++enc_position;
  6471                           
  6472  002F  1D7D               	btfss	_enc_B_1/(0+8),_enc_B_1& (0+7)
  6473  0030  1DFD               	btfss	_enc_B_2/(0+8),_enc_B_2& (0+7)
  6474  0031  283E               	goto	i1l3674
  6475                           
  6476                           ;interrupt.c: 64: if (!enc_A_1) {
  6477  0032  187D               	btfsc	_enc_A_1/(0+8),_enc_A_1& (0+7)
  6478  0033  2839               	goto	i1l3672
  6479  0034                     L15:	
  6480                           
  6481                           ;interrupt.c: 65: ++enc_position;
  6482  0034  3001               	movlw	1
  6483  0035  0020               	movlb	0	; select bank0
  6484  0036  07CB               	addwf	_enc_position,f
  6485  0037  3000               	movlw	0
  6486  0038  283D               	goto	L12
  6487  0039                     i1l3672:	
  6488                           ;interrupt.c: 66: } else {
  6489                           
  6490                           
  6491                           ;interrupt.c: 67: --enc_position;
  6492  0039  30FF               	movlw	255
  6493  003A  0020               	movlb	0	; select bank0
  6494  003B  07CB               	addwf	_enc_position,f
  6495  003C  30FF               	movlw	255
  6496  003D                     L12:	
  6497  003D  3DCC               	addwfc	_enc_position+1,f
  6498  003E                     i1l3674:	
  6499                           
  6500                           ;interrupt.c: 68: }
  6501                           ;interrupt.c: 69: }
  6502                           ;interrupt.c: 71: if (enc_position < 0) enc_position = 0;
  6503  003E  0020               	movlb	0	; select bank0
  6504  003F  1FCC               	btfss	_enc_position+1,7
  6505  0040  2843               	goto	i1l3678
  6506  0041  01CB               	clrf	_enc_position
  6507  0042  01CC               	clrf	_enc_position+1
  6508  0043                     i1l3678:	
  6509                           
  6510                           ;interrupt.c: 72: if (enc_position > 127) enc_position = 127;
  6511  0043  084C               	movf	_enc_position+1,w
  6512  0044  3A80               	xorlw	128
  6513  0045  00A0               	movwf	??_tc_int
  6514  0046  3080               	movlw	128
  6515  0047  0220               	subwf	??_tc_int,w
  6516  0048  1D03               	skipz
  6517  0049  284C               	goto	u518_25
  6518  004A  3080               	movlw	128
  6519  004B  024B               	subwf	_enc_position,w
  6520  004C                     u518_25:	
  6521  004C  1C03               	skipc
  6522  004D  2853               	goto	i1l3682
  6523  004E  307F               	movlw	127
  6524  004F  0020               	movlb	0	; select bank0
  6525  0050  00CB               	movwf	_enc_position
  6526  0051  3000               	movlw	0
  6527  0052  00CC               	movwf	_enc_position+1
  6528  0053                     i1l3682:	
  6529                           
  6530                           ;interrupt.c: 78: for (i=0; i<8; ++i) {
  6531  0053  0020               	movlb	0	; select bank0
  6532  0054  01B4               	clrf	tc_int@i
  6533  0055                     L14:	
  6534  0055  3008               	movlw	8
  6535  0056  0234               	subwf	tc_int@i,w
  6536  0057  1803               	btfsc	3,0
  6537  0058  28BC               	goto	i1l113
  6538                           
  6539                           ;interrupt.c: 79: if (enc_position <= AD_x[i]) {
  6540  0059  0834               	movf	tc_int@i,w
  6541  005A  00A0               	movwf	??_tc_int
  6542  005B  01A1               	clrf	??_tc_int+1
  6543  005C  35A0               	lslf	??_tc_int,f
  6544  005D  0DA1               	rlf	??_tc_int+1,f
  6545  005E  3044               	movlw	low (_AD_x| (0+32768))
  6546  005F  0720               	addwf	??_tc_int,w
  6547  0060  0084               	movwf	4
  6548  0061  3083               	movlw	high (_AD_x| (0+32768))
  6549  0062  3D21               	addwfc	??_tc_int+1,w
  6550  0063  0085               	movwf	5
  6551  0064  3F00               	moviw [0]fsr0
  6552  0065  00A2               	movwf	??_tc_int+2
  6553  0066  3F01               	moviw [1]fsr0
  6554  0067  00A3               	movwf	??_tc_int+3
  6555  0068  084C               	movf	_enc_position+1,w
  6556  0069  0223               	subwf	??_tc_int+3,w
  6557  006A  1D03               	skipz
  6558  006B  286E               	goto	u520_25
  6559  006C  084B               	movf	_enc_position,w
  6560  006D  0222               	subwf	??_tc_int+2,w
  6561  006E                     u520_25:	
  6562  006E  1C03               	skipc
  6563  006F  28B0               	goto	i1l3692
  6564                           
  6565                           ;interrupt.c: 80: period = (unsigned char)((enc_position * AD_a[i]) >> 16) + AD_b[i];
  6566  0070  0834               	movf	tc_int@i,w
  6567  0071  3E5E               	addlw	low (_AD_b| (0+32768))
  6568  0072  0084               	movwf	4
  6569  0073  3083               	movlw	high (_AD_b| (0+32768))
  6570  0074  1803               	skipnc
  6571  0075  3E01               	addlw	1
  6572  0076  0085               	movwf	5
  6573  0077  0800               	movf	0,w	;code access
  6574  0078  00A0               	movwf	??_tc_int
  6575  0079  084B               	movf	_enc_position,w
  6576  007A  00F0               	movwf	i1___lmul@multiplier
  6577  007B  084C               	movf	_enc_position+1,w
  6578  007C  00F1               	movwf	i1___lmul@multiplier+1
  6579  007D  0D89               	rlf	9,f
  6580  007E  3B89               	subwfb	9,f
  6581  007F  0989               	comf	9,f
  6582  0080  00F2               	movwf	i1___lmul@multiplier+2
  6583  0081  00F3               	movwf	i1___lmul@multiplier+3
  6584  0082  0834               	movf	tc_int@i,w
  6585  0083  00A1               	movwf	??_tc_int+1
  6586  0084  01A2               	clrf	??_tc_int+2
  6587  0085  35A1               	lslf	??_tc_int+1,f
  6588  0086  0DA2               	rlf	??_tc_int+2,f
  6589  0087  35A1               	lslf	??_tc_int+1,f
  6590  0088  0DA2               	rlf	??_tc_int+2,f
  6591  0089  3024               	movlw	low (_AD_a| (0+32768))
  6592  008A  0721               	addwf	??_tc_int+1,w
  6593  008B  0084               	movwf	4
  6594  008C  3083               	movlw	high (_AD_a| (0+32768))
  6595  008D  3D22               	addwfc	??_tc_int+2,w
  6596  008E  0085               	movwf	5
  6597  008F  3F00               	moviw [0]fsr0
  6598  0090  00F4               	movwf	i1___lmul@multiplicand
  6599  0091  3F01               	moviw [1]fsr0
  6600  0092  00F5               	movwf	i1___lmul@multiplicand+1
  6601  0093  3F02               	moviw [2]fsr0
  6602  0094  00F6               	movwf	i1___lmul@multiplicand+2
  6603  0095  3F03               	moviw [3]fsr0
  6604  0096  00F7               	movwf	i1___lmul@multiplicand+3
  6605  0097  3189  2190  3180   	fcall	i1___lmul
  6606  009A  0870               	movf	?i1___lmul,w
  6607  009B  0020               	movlb	0	; select bank0
  6608  009C  00A3               	movwf	??_tc_int+3
  6609  009D  0871               	movf	?i1___lmul+1,w
  6610  009E  00A4               	movwf	??_tc_int+4
  6611  009F  0872               	movf	?i1___lmul+2,w
  6612  00A0  00A5               	movwf	??_tc_int+5
  6613  00A1  0873               	movf	?i1___lmul+3,w
  6614  00A2  00A6               	movwf	??_tc_int+6
  6615  00A3  3010               	movlw	16
  6616  00A4                     u521_25:	
  6617  00A4  36A6               	lsrf	??_tc_int+6,f
  6618  00A5  0CA5               	rrf	??_tc_int+5,f
  6619  00A6  0CA4               	rrf	??_tc_int+4,f
  6620  00A7  0CA3               	rrf	??_tc_int+3,f
  6621  00A8  0B89               	decfsz	9,f
  6622  00A9  28A4               	goto	u521_25
  6623  00AA  0823               	movf	??_tc_int+3,w
  6624  00AB  0720               	addwf	??_tc_int,w
  6625  00AC  00B5               	movwf	tc_int@period
  6626  00AD  01B6               	clrf	tc_int@period+1
  6627  00AE  0DB6               	rlf	tc_int@period+1,f
  6628                           
  6629                           ;interrupt.c: 81: break;
  6630  00AF  28BC               	goto	i1l113
  6631  00B0                     i1l3692:	
  6632  00B0  3001               	movlw	1
  6633  00B1  00A0               	movwf	??_tc_int
  6634  00B2  0820               	movf	??_tc_int,w
  6635  00B3  07B4               	addwf	tc_int@i,f
  6636  00B4  2855               	goto	L14
  6637  00B5                     i1l3696:	
  6638                           ;interrupt.c: 82: }
  6639                           ;interrupt.c: 83: }
  6640                           ;interrupt.c: 84: } else {
  6641                           
  6642                           
  6643                           ;interrupt.c: 85: period = remote_power_level;
  6644  00B5  0855               	movf	_remote_power_level,w
  6645  00B6  00A0               	movwf	??_tc_int
  6646  00B7  01A1               	clrf	??_tc_int+1
  6647  00B8  0820               	movf	??_tc_int,w
  6648  00B9  00B5               	movwf	tc_int@period
  6649  00BA  0821               	movf	??_tc_int+1,w
  6650  00BB  00B6               	movwf	tc_int@period+1
  6651  00BC                     i1l113:	
  6652                           
  6653                           ;interrupt.c: 86: }
  6654                           ;interrupt.c: 88: if (period > 256) period = 256;
  6655  00BC  3001               	movlw	1
  6656  00BD  0236               	subwf	tc_int@period+1,w
  6657  00BE  3001               	movlw	1
  6658  00BF  1903               	skipnz
  6659  00C0  0235               	subwf	tc_int@period,w
  6660  00C1  1C03               	skipc
  6661  00C2  28C7               	goto	i1l114
  6662  00C3  3000               	movlw	0
  6663  00C4  00B5               	movwf	tc_int@period
  6664  00C5  3001               	movlw	1
  6665  00C6  00B6               	movwf	tc_int@period+1
  6666  00C7                     i1l114:	
  6667                           
  6668                           ;interrupt.c: 92: ++power_light_counter;
  6669  00C7  3001               	movlw	1
  6670  00C8  07CD               	addwf	_power_light_counter,f
  6671  00C9  3000               	movlw	0
  6672  00CA  3DCE               	addwfc	_power_light_counter+1,f
  6673                           
  6674                           ;interrupt.c: 93: if (power_light_counter > 512) power_light_counter = 0;
  6675  00CB  084E               	movf	_power_light_counter+1,w
  6676  00CC  3A80               	xorlw	128
  6677  00CD  00A0               	movwf	??_tc_int
  6678  00CE  3082               	movlw	130
  6679  00CF  0220               	subwf	??_tc_int,w
  6680  00D0  1D03               	skipz
  6681  00D1  28D4               	goto	u524_25
  6682  00D2  3001               	movlw	1
  6683  00D3  024D               	subwf	_power_light_counter,w
  6684  00D4                     u524_25:	
  6685  00D4  1C03               	skipc
  6686  00D5  28D9               	goto	i1l3702
  6687  00D6  0020               	movlb	0	; select bank0
  6688  00D7  01CD               	clrf	_power_light_counter
  6689  00D8  01CE               	clrf	_power_light_counter+1
  6690  00D9                     i1l3702:	
  6691                           
  6692                           ;interrupt.c: 95: if (power_light_counter < (period << 1)) {
  6693  00D9  0020               	movlb	0	; select bank0
  6694  00DA  0836               	movf	tc_int@period+1,w
  6695  00DB  00A1               	movwf	??_tc_int+1
  6696  00DC  0835               	movf	tc_int@period,w
  6697  00DD  00A0               	movwf	??_tc_int
  6698  00DE  35A0               	lslf	??_tc_int,f
  6699  00DF  0DA1               	rlf	??_tc_int+1,f
  6700  00E0  0821               	movf	??_tc_int+1,w
  6701  00E1  024E               	subwf	_power_light_counter+1,w
  6702  00E2  1D03               	skipz
  6703  00E3  28E6               	goto	u525_25
  6704  00E4  0820               	movf	??_tc_int,w
  6705  00E5  024D               	subwf	_power_light_counter,w
  6706  00E6                     u525_25:	
  6707  00E6  1803               	skipnc
  6708  00E7  28EA               	goto	i1l116
  6709                           
  6710                           ;interrupt.c: 96: RB4 = 0;
  6711  00E8  120D               	bcf	13,4	;volatile
  6712                           
  6713                           ;interrupt.c: 97: } else {
  6714  00E9  28EB               	goto	i1l3706
  6715  00EA                     i1l116:	
  6716                           
  6717                           ;interrupt.c: 98: RB4 = 1;
  6718  00EA  160D               	bsf	13,4	;volatile
  6719  00EB                     i1l3706:	
  6720                           
  6721                           ;interrupt.c: 99: }
  6722                           ;interrupt.c: 105: if ((fault_timer_1 > 0) || (fault_timer_2 > 0)) {
  6723  00EB  0850               	movf	tc_int@fault_timer_1+1,w
  6724  00EC  044F               	iorwf	tc_int@fault_timer_1,w
  6725  00ED  1D03               	skipz
  6726  00EE  28F3               	goto	i1l3710
  6727  00EF  0852               	movf	tc_int@fault_timer_2+1,w
  6728  00F0  0451               	iorwf	tc_int@fault_timer_2,w
  6729  00F1  1903               	skipnz
  6730  00F2  28F5               	goto	i1l3712
  6731  00F3                     i1l3710:	
  6732                           
  6733                           ;interrupt.c: 106: period = 0;
  6734  00F3  01B5               	clrf	tc_int@period
  6735  00F4  01B6               	clrf	tc_int@period+1
  6736  00F5                     i1l3712:	
  6737                           
  6738                           ;interrupt.c: 107: }
  6739                           ;interrupt.c: 111: if (period < slewed_period) {
  6740  00F5  0833               	movf	tc_int@slewed_period+1,w
  6741  00F6  0236               	subwf	tc_int@period+1,w
  6742  00F7  1D03               	skipz
  6743  00F8  28FB               	goto	u528_25
  6744  00F9  0832               	movf	tc_int@slewed_period,w
  6745  00FA  0235               	subwf	tc_int@period,w
  6746  00FB                     u528_25:	
  6747  00FB  1C03               	btfss	3,0
  6748  00FC  291E               	goto	i1l3722
  6749                           
  6750                           ;interrupt.c: 113: } else if (period >= (slewed_period + 20)) {
  6751                           
  6752                           ;interrupt.c: 112: slewed_period = period;
  6753  00FD  0832               	movf	tc_int@slewed_period,w
  6754  00FE  3E14               	addlw	20
  6755  00FF  00A0               	movwf	??_tc_int
  6756  0100  3000               	movlw	0
  6757  0101  3D33               	addwfc	tc_int@slewed_period+1,w
  6758  0102  00A1               	movwf	??_tc_int+1
  6759  0103  0821               	movf	??_tc_int+1,w
  6760  0104  0236               	subwf	tc_int@period+1,w
  6761  0105  1D03               	skipz
  6762  0106  2909               	goto	u529_25
  6763  0107  0820               	movf	??_tc_int,w
  6764  0108  0235               	subwf	tc_int@period,w
  6765  0109                     u529_25:	
  6766  0109  1C03               	skipc
  6767  010A  2910               	goto	i1l3720
  6768                           
  6769                           ;interrupt.c: 114: slewed_period += 20;
  6770  010B  3014               	movlw	20
  6771  010C  07B2               	addwf	tc_int@slewed_period,f
  6772  010D  3000               	movlw	0
  6773  010E  3DB3               	addwfc	tc_int@slewed_period+1,f
  6774                           
  6775                           ;interrupt.c: 115: } else if (period < (slewed_period + 20)) {
  6776  010F  2924               	goto	i1l122
  6777  0110                     i1l3720:	
  6778  0110  0832               	movf	tc_int@slewed_period,w
  6779  0111  3E14               	addlw	20
  6780  0112  00A0               	movwf	??_tc_int
  6781  0113  3000               	movlw	0
  6782  0114  3D33               	addwfc	tc_int@slewed_period+1,w
  6783  0115  00A1               	movwf	??_tc_int+1
  6784  0116  0821               	movf	??_tc_int+1,w
  6785  0117  0236               	subwf	tc_int@period+1,w
  6786  0118  1D03               	skipz
  6787  0119  291C               	goto	u530_25
  6788  011A  0820               	movf	??_tc_int,w
  6789  011B  0235               	subwf	tc_int@period,w
  6790  011C                     u530_25:	
  6791  011C  1803               	skipnc
  6792  011D  2924               	goto	i1l122
  6793  011E                     i1l3722:	
  6794                           
  6795                           ;interrupt.c: 116: slewed_period = period;
  6796  011E  0836               	movf	tc_int@period+1,w
  6797  011F  01B3               	clrf	tc_int@slewed_period+1
  6798  0120  07B3               	addwf	tc_int@slewed_period+1,f
  6799  0121  0835               	movf	tc_int@period,w
  6800  0122  01B2               	clrf	tc_int@slewed_period
  6801  0123  07B2               	addwf	tc_int@slewed_period,f
  6802  0124                     i1l122:	
  6803                           
  6804                           ;interrupt.c: 117: }
  6805                           ;interrupt.c: 119: pwm = (unsigned short)(0x100 - slewed_period);
  6806  0124  0932               	comf	tc_int@slewed_period,w
  6807  0125  00A0               	movwf	??_tc_int
  6808  0126  0933               	comf	tc_int@slewed_period+1,w
  6809  0127  00A1               	movwf	??_tc_int+1
  6810  0128  0AA0               	incf	??_tc_int,f
  6811  0129  1903               	skipnz
  6812  012A  0AA1               	incf	??_tc_int+1,f
  6813  012B  0820               	movf	??_tc_int,w
  6814  012C  3E00               	addlw	0
  6815  012D  00AE               	movwf	tc_int@pwm
  6816  012E  3001               	movlw	1
  6817  012F  3D21               	addwfc	??_tc_int+1,w
  6818  0130  00AF               	movwf	tc_int@pwm+1
  6819                           
  6820                           ;interrupt.c: 120: CCPR2L = (unsigned char)(pwm >> 2);
  6821  0131  082F               	movf	tc_int@pwm+1,w
  6822  0132  00A1               	movwf	??_tc_int+1
  6823  0133  082E               	movf	tc_int@pwm,w
  6824  0134  00A0               	movwf	??_tc_int
  6825  0135  36A1               	lsrf	??_tc_int+1,f
  6826  0136  0CA0               	rrf	??_tc_int,f
  6827  0137  36A1               	lsrf	??_tc_int+1,f
  6828  0138  0CA0               	rrf	??_tc_int,f
  6829  0139  0820               	movf	??_tc_int,w
  6830  013A  0025               	movlb	5	; select bank5
  6831  013B  0098               	movwf	24	;volatile
  6832                           
  6833                           ;interrupt.c: 121: CCP2CON = (unsigned char)((CCP2CON & 0xCF) | ((pwm & 0x03) << 4));
  6834  013C  0020               	movlb	0	; select bank0
  6835  013D  082E               	movf	tc_int@pwm,w
  6836  013E  3903               	andlw	3
  6837  013F  00A0               	movwf	??_tc_int
  6838  0140  3004               	movlw	4
  6839  0141                     u531_25:	
  6840  0141  35A0               	lslf	??_tc_int,f
  6841  0142  0B89               	decfsz	9,f
  6842  0143  2941               	goto	u531_25
  6843  0144  0025               	movlb	5	; select bank5
  6844  0145  081A               	movf	26,w	;volatile
  6845  0146  39CF               	andlw	207
  6846  0147  0020               	movlb	0	; select bank0
  6847  0148  0420               	iorwf	??_tc_int,w
  6848  0149  0025               	movlb	5	; select bank5
  6849  014A  009A               	movwf	26	;volatile
  6850                           
  6851                           ;interrupt.c: 124: ADCON0 = 0x03;
  6852  014B  3003               	movlw	3
  6853  014C  0021               	movlb	1	; select bank1
  6854  014D  009D               	movwf	29	;volatile
  6855  014E                     i1l126:	
  6856                           ;interrupt.c: 125: while(nDONE);
  6857                           
  6858  014E  189D               	btfsc	29,1	;volatile
  6859  014F  294E               	goto	i1l126
  6860                           
  6861                           ;interrupt.c: 126: ADCON0 = 0x03;
  6862  0150  3003               	movlw	3
  6863  0151  009D               	movwf	29	;volatile
  6864  0152                     i1l129:	
  6865                           ;interrupt.c: 127: while(nDONE);
  6866                           
  6867  0152  189D               	btfsc	29,1	;volatile
  6868  0153  2952               	goto	i1l129
  6869                           
  6870                           ;interrupt.c: 128: AD_val = ((unsigned short)ADRESH << 2) + ((unsigned short)ADRESL >> 6
      +                          );
  6871  0154  081B               	movf	27,w	;volatile
  6872  0155  0020               	movlb	0	; select bank0
  6873  0156  00A0               	movwf	??_tc_int
  6874  0157  3006               	movlw	6
  6875  0158                     u534_25:	
  6876  0158  36A0               	lsrf	??_tc_int,f
  6877  0159  0B89               	decfsz	9,f
  6878  015A  2958               	goto	u534_25
  6879  015B  0820               	movf	??_tc_int,w
  6880  015C  00A1               	movwf	??_tc_int+1
  6881  015D  01A2               	clrf	??_tc_int+2
  6882  015E  0021               	movlb	1	; select bank1
  6883  015F  081C               	movf	28,w	;volatile
  6884  0160  0020               	movlb	0	; select bank0
  6885  0161  00A3               	movwf	??_tc_int+3
  6886  0162  01A4               	clrf	??_tc_int+4
  6887  0163  35A3               	lslf	??_tc_int+3,f
  6888  0164  0DA4               	rlf	??_tc_int+4,f
  6889  0165  35A3               	lslf	??_tc_int+3,f
  6890  0166  0DA4               	rlf	??_tc_int+4,f
  6891  0167  0821               	movf	??_tc_int+1,w
  6892  0168  0723               	addwf	??_tc_int+3,w
  6893  0169  00A5               	movwf	??_tc_int+5
  6894  016A  0822               	movf	??_tc_int+2,w
  6895  016B  3D24               	addwfc	??_tc_int+4,w
  6896  016C  00A6               	movwf	??_tc_int+6
  6897  016D  0825               	movf	??_tc_int+5,w
  6898  016E  00B0               	movwf	tc_int@AD_val
  6899  016F  0826               	movf	??_tc_int+6,w
  6900  0170  00B1               	movwf	tc_int@AD_val+1
  6901                           
  6902                           ;interrupt.c: 129: fet_temp_1 += AD_val;
  6903  0171  0830               	movf	tc_int@AD_val,w
  6904  0172  07C3               	addwf	tc_int@fet_temp_1,f
  6905  0173  0831               	movf	tc_int@AD_val+1,w
  6906  0174  3DC4               	addwfc	tc_int@fet_temp_1+1,f
  6907  0175  3000               	movlw	0
  6908  0176  3DC5               	addwfc	tc_int@fet_temp_1+2,f
  6909  0177  3DC6               	addwfc	tc_int@fet_temp_1+3,f
  6910                           
  6911                           ;interrupt.c: 132: ADCON0 = 0x07;
  6912  0178  3007               	movlw	7
  6913  0179  0021               	movlb	1	; select bank1
  6914  017A  009D               	movwf	29	;volatile
  6915  017B                     i1l132:	
  6916                           ;interrupt.c: 133: while(nDONE);
  6917                           
  6918  017B  189D               	btfsc	29,1	;volatile
  6919  017C  297B               	goto	i1l132
  6920                           
  6921                           ;interrupt.c: 134: ADCON0 = 0x07;
  6922  017D  3007               	movlw	7
  6923  017E  009D               	movwf	29	;volatile
  6924  017F                     i1l135:	
  6925                           ;interrupt.c: 135: while(nDONE);
  6926                           
  6927  017F  189D               	btfsc	29,1	;volatile
  6928  0180  297F               	goto	i1l135
  6929                           
  6930                           ;interrupt.c: 136: AD_val = ((unsigned short)ADRESH << 2) + ((unsigned short)ADRESL >> 6
      +                          );
  6931  0181  081B               	movf	27,w	;volatile
  6932  0182  0020               	movlb	0	; select bank0
  6933  0183  00A0               	movwf	??_tc_int
  6934  0184  3006               	movlw	6
  6935  0185                     u537_25:	
  6936  0185  36A0               	lsrf	??_tc_int,f
  6937  0186  0B89               	decfsz	9,f
  6938  0187  2985               	goto	u537_25
  6939  0188  0820               	movf	??_tc_int,w
  6940  0189  00A1               	movwf	??_tc_int+1
  6941  018A  01A2               	clrf	??_tc_int+2
  6942  018B  0021               	movlb	1	; select bank1
  6943  018C  081C               	movf	28,w	;volatile
  6944  018D  0020               	movlb	0	; select bank0
  6945  018E  00A3               	movwf	??_tc_int+3
  6946  018F  01A4               	clrf	??_tc_int+4
  6947  0190  35A3               	lslf	??_tc_int+3,f
  6948  0191  0DA4               	rlf	??_tc_int+4,f
  6949  0192  35A3               	lslf	??_tc_int+3,f
  6950  0193  0DA4               	rlf	??_tc_int+4,f
  6951  0194  0821               	movf	??_tc_int+1,w
  6952  0195  0723               	addwf	??_tc_int+3,w
  6953  0196  00A5               	movwf	??_tc_int+5
  6954  0197  0822               	movf	??_tc_int+2,w
  6955  0198  3D24               	addwfc	??_tc_int+4,w
  6956  0199  00A6               	movwf	??_tc_int+6
  6957  019A  0825               	movf	??_tc_int+5,w
  6958  019B  00B0               	movwf	tc_int@AD_val
  6959  019C  0826               	movf	??_tc_int+6,w
  6960  019D  00B1               	movwf	tc_int@AD_val+1
  6961                           
  6962                           ;interrupt.c: 137: fet_temp_2 += AD_val;
  6963  019E  0830               	movf	tc_int@AD_val,w
  6964  019F  07C7               	addwf	tc_int@fet_temp_2,f
  6965  01A0  0831               	movf	tc_int@AD_val+1,w
  6966  01A1  3DC8               	addwfc	tc_int@fet_temp_2+1,f
  6967  01A2  3000               	movlw	0
  6968  01A3  3DC9               	addwfc	tc_int@fet_temp_2+2,f
  6969  01A4  3DCA               	addwfc	tc_int@fet_temp_2+3,f
  6970                           
  6971                           ;interrupt.c: 139: ++fet_temp_timer;
  6972  01A5  3001               	movlw	1
  6973  01A6  00A0               	movwf	??_tc_int
  6974  01A7  0820               	movf	??_tc_int,w
  6975  01A8  07D7               	addwf	tc_int@fet_temp_timer,f
  6976                           
  6977                           ;interrupt.c: 140: if (!fet_temp_timer) {
  6978  01A9  08D7               	movf	tc_int@fet_temp_timer,f
  6979  01AA  1D03               	skipz
  6980  01AB  2A00               	goto	i1l3754
  6981                           
  6982                           ;interrupt.c: 141: if ((fet_temp_1 >> 8) < 431) {
  6983  01AC  0843               	movf	tc_int@fet_temp_1,w
  6984  01AD  00A0               	movwf	??_tc_int
  6985  01AE  0844               	movf	tc_int@fet_temp_1+1,w
  6986  01AF  00A1               	movwf	??_tc_int+1
  6987  01B0  0845               	movf	tc_int@fet_temp_1+2,w
  6988  01B1  00A2               	movwf	??_tc_int+2
  6989  01B2  0846               	movf	tc_int@fet_temp_1+3,w
  6990  01B3  00A3               	movwf	??_tc_int+3
  6991  01B4  3008               	movlw	8
  6992  01B5                     u539_25:	
  6993  01B5  36A3               	lsrf	??_tc_int+3,f
  6994  01B6  0CA2               	rrf	??_tc_int+2,f
  6995  01B7  0CA1               	rrf	??_tc_int+1,f
  6996  01B8  0CA0               	rrf	??_tc_int,f
  6997  01B9  0B89               	decfsz	9,f
  6998  01BA  29B5               	goto	u539_25
  6999  01BB  3000               	movlw	0
  7000  01BC  0223               	subwf	??_tc_int+3,w
  7001  01BD  1D03               	skipz
  7002  01BE  29C9               	goto	u540_25
  7003  01BF  3000               	movlw	0
  7004  01C0  0222               	subwf	??_tc_int+2,w
  7005  01C1  1D03               	skipz
  7006  01C2  29C9               	goto	u540_25
  7007  01C3  3001               	movlw	1
  7008  01C4  0221               	subwf	??_tc_int+1,w
  7009  01C5  1D03               	skipz
  7010  01C6  29C9               	goto	u540_25
  7011  01C7  30AF               	movlw	175
  7012  01C8  0220               	subwf	??_tc_int,w
  7013  01C9                     u540_25:	
  7014  01C9  1803               	skipnc
  7015  01CA  29CD               	goto	i1l139
  7016                           
  7017                           ;interrupt.c: 142: overtemp_1 = 1;
  7018  01CB  167C               	bsf	tc_int@overtemp_1/(0+8),tc_int@overtemp_1& (0+7)
  7019                           
  7020                           ;interrupt.c: 143: } else {
  7021  01CC  29CE               	goto	i1l3748
  7022  01CD                     i1l139:	
  7023                           
  7024                           ;interrupt.c: 144: overtemp_1 = 0;
  7025  01CD  127C               	bcf	tc_int@overtemp_1/(0+8),tc_int@overtemp_1& (0+7)
  7026  01CE                     i1l3748:	
  7027                           
  7028                           ;interrupt.c: 145: }
  7029                           ;interrupt.c: 147: if ((fet_temp_2 >> 8) < 431) {
  7030  01CE  0847               	movf	tc_int@fet_temp_2,w
  7031  01CF  00A0               	movwf	??_tc_int
  7032  01D0  0848               	movf	tc_int@fet_temp_2+1,w
  7033  01D1  00A1               	movwf	??_tc_int+1
  7034  01D2  0849               	movf	tc_int@fet_temp_2+2,w
  7035  01D3  00A2               	movwf	??_tc_int+2
  7036  01D4  084A               	movf	tc_int@fet_temp_2+3,w
  7037  01D5  00A3               	movwf	??_tc_int+3
  7038  01D6  3008               	movlw	8
  7039  01D7                     u541_25:	
  7040  01D7  36A3               	lsrf	??_tc_int+3,f
  7041  01D8  0CA2               	rrf	??_tc_int+2,f
  7042  01D9  0CA1               	rrf	??_tc_int+1,f
  7043  01DA  0CA0               	rrf	??_tc_int,f
  7044  01DB  0B89               	decfsz	9,f
  7045  01DC  29D7               	goto	u541_25
  7046  01DD  3000               	movlw	0
  7047  01DE  0223               	subwf	??_tc_int+3,w
  7048  01DF  1D03               	skipz
  7049  01E0  29EB               	goto	u542_25
  7050  01E1  3000               	movlw	0
  7051  01E2  0222               	subwf	??_tc_int+2,w
  7052  01E3  1D03               	skipz
  7053  01E4  29EB               	goto	u542_25
  7054  01E5  3001               	movlw	1
  7055  01E6  0221               	subwf	??_tc_int+1,w
  7056  01E7  1D03               	skipz
  7057  01E8  29EB               	goto	u542_25
  7058  01E9  30AF               	movlw	175
  7059  01EA  0220               	subwf	??_tc_int,w
  7060  01EB                     u542_25:	
  7061  01EB  1803               	skipnc
  7062  01EC  29EF               	goto	i1l141
  7063                           
  7064                           ;interrupt.c: 148: overtemp_2 = 1;
  7065  01ED  16FC               	bsf	tc_int@overtemp_2/(0+8),tc_int@overtemp_2& (0+7)
  7066                           
  7067                           ;interrupt.c: 149: } else {
  7068  01EE  29F0               	goto	i1l3752
  7069  01EF                     i1l141:	
  7070                           
  7071                           ;interrupt.c: 150: overtemp_2 = 0;
  7072  01EF  12FC               	bcf	tc_int@overtemp_2/(0+8),tc_int@overtemp_2& (0+7)
  7073  01F0                     i1l3752:	
  7074                           
  7075                           ;interrupt.c: 151: }
  7076                           ;interrupt.c: 152: fet_temp_1 = fet_temp_2 = 0;
  7077  01F0  3000               	movlw	0
  7078  01F1  00CA               	movwf	tc_int@fet_temp_2+3
  7079  01F2  3000               	movlw	0
  7080  01F3  00C9               	movwf	tc_int@fet_temp_2+2
  7081  01F4  3000               	movlw	0
  7082  01F5  00C8               	movwf	tc_int@fet_temp_2+1
  7083  01F6  3000               	movlw	0
  7084  01F7  00C7               	movwf	tc_int@fet_temp_2
  7085  01F8  084A               	movf	tc_int@fet_temp_2+3,w
  7086  01F9  00C6               	movwf	tc_int@fet_temp_1+3
  7087  01FA  0849               	movf	tc_int@fet_temp_2+2,w
  7088  01FB  00C5               	movwf	tc_int@fet_temp_1+2
  7089  01FC  0848               	movf	tc_int@fet_temp_2+1,w
  7090  01FD  00C4               	movwf	tc_int@fet_temp_1+1
  7091  01FE  0847               	movf	tc_int@fet_temp_2,w
  7092  01FF  00C3               	movwf	tc_int@fet_temp_1
  7093  0200                     i1l3754:	
  7094                           
  7095                           ;interrupt.c: 153: }
  7096                           ;interrupt.c: 157: if (RA3) {
  7097  0200  1D8C               	btfss	12,3	;volatile
  7098  0201  2A07               	goto	i1l3758
  7099                           
  7100                           ;interrupt.c: 158: fault_timer_1 = 512;
  7101  0202  3000               	movlw	0
  7102  0203  00CF               	movwf	tc_int@fault_timer_1
  7103  0204  3002               	movlw	2
  7104  0205  00D0               	movwf	tc_int@fault_timer_1+1
  7105                           
  7106                           ;interrupt.c: 159: } else {
  7107  0206  2A0F               	goto	i1l3762
  7108  0207                     i1l3758:	
  7109                           
  7110                           ;interrupt.c: 160: if (fault_timer_1) --fault_timer_1;
  7111  0207  0850               	movf	tc_int@fault_timer_1+1,w
  7112  0208  044F               	iorwf	tc_int@fault_timer_1,w
  7113  0209  1903               	skipnz
  7114  020A  2A0F               	goto	i1l3762
  7115  020B  3001               	movlw	1
  7116  020C  02CF               	subwf	tc_int@fault_timer_1,f
  7117  020D  3000               	movlw	0
  7118  020E  3BD0               	subwfb	tc_int@fault_timer_1+1,f
  7119  020F                     i1l3762:	
  7120                           
  7121                           ;interrupt.c: 161: }
  7122                           ;interrupt.c: 163: if (RA4) {
  7123  020F  1E0C               	btfss	12,4	;volatile
  7124  0210  2A16               	goto	i1l3766
  7125                           
  7126                           ;interrupt.c: 164: fault_timer_2 = 512;
  7127  0211  3000               	movlw	0
  7128  0212  00D1               	movwf	tc_int@fault_timer_2
  7129  0213  3002               	movlw	2
  7130  0214  00D2               	movwf	tc_int@fault_timer_2+1
  7131                           
  7132                           ;interrupt.c: 165: } else {
  7133  0215  2A1E               	goto	i1l147
  7134  0216                     i1l3766:	
  7135                           
  7136                           ;interrupt.c: 166: if (fault_timer_2) --fault_timer_2;
  7137  0216  0852               	movf	tc_int@fault_timer_2+1,w
  7138  0217  0451               	iorwf	tc_int@fault_timer_2,w
  7139  0218  1903               	skipnz
  7140  0219  2A1E               	goto	i1l147
  7141  021A  3001               	movlw	1
  7142  021B  02D1               	subwf	tc_int@fault_timer_2,f
  7143  021C  3000               	movlw	0
  7144  021D  3BD2               	subwfb	tc_int@fault_timer_2+1,f
  7145  021E                     i1l147:	
  7146                           
  7147                           ;interrupt.c: 167: }
  7148                           ;interrupt.c: 170: if (pulse_timer < 100) {
  7149  021E  3000               	movlw	0
  7150  021F  0254               	subwf	tc_int@pulse_timer+1,w
  7151  0220  3064               	movlw	100
  7152  0221  1903               	skipnz
  7153  0222  0253               	subwf	tc_int@pulse_timer,w
  7154  0223  1803               	skipnc
  7155  0224  2A2A               	goto	i1l3772
  7156                           
  7157                           ;interrupt.c: 171: ++pulse_timer;
  7158  0225  3001               	movlw	1
  7159  0226  07D3               	addwf	tc_int@pulse_timer,f
  7160  0227  3000               	movlw	0
  7161  0228  3DD4               	addwfc	tc_int@pulse_timer+1,f
  7162                           
  7163                           ;interrupt.c: 172: } else {
  7164  0229  2A2C               	goto	i1l3774
  7165  022A                     i1l3772:	
  7166                           
  7167                           ;interrupt.c: 173: pulse_timer = 0;
  7168  022A  01D3               	clrf	tc_int@pulse_timer
  7169  022B  01D4               	clrf	tc_int@pulse_timer+1
  7170  022C                     i1l3774:	
  7171                           
  7172                           ;interrupt.c: 174: }
  7173                           ;interrupt.c: 177: RB1 = !overtemp_1;
  7174  022C  1A7C               	btfsc	tc_int@overtemp_1/(0+8),tc_int@overtemp_1& (0+7)
  7175  022D  2A31               	goto	u548_20
  7176  022E  0020               	movlb	0	; select bank0
  7177  022F  148D               	bsf	13,1	;volatile
  7178  0230  2A33               	goto	i1l3776
  7179  0231                     u548_20:	
  7180  0231  0020               	movlb	0	; select bank0
  7181  0232  108D               	bcf	13,1	;volatile
  7182  0233                     i1l3776:	
  7183                           
  7184                           ;interrupt.c: 178: RB3 = !overtemp_2;
  7185  0233  1AFC               	btfsc	tc_int@overtemp_2/(0+8),tc_int@overtemp_2& (0+7)
  7186  0234  2A38               	goto	u550_20
  7187  0235  0020               	movlb	0	; select bank0
  7188  0236  158D               	bsf	13,3	;volatile
  7189  0237  2A3A               	goto	i1l3778
  7190  0238                     u550_20:	
  7191  0238  0020               	movlb	0	; select bank0
  7192  0239  118D               	bcf	13,3	;volatile
  7193  023A                     i1l3778:	
  7194                           
  7195                           ;interrupt.c: 179: RB0 = !(fault_timer_1 > 0);
  7196  023A  0850               	movf	tc_int@fault_timer_1+1,w
  7197  023B  044F               	iorwf	tc_int@fault_timer_1,w
  7198  023C  1D03               	btfss	3,2
  7199  023D  2A41               	goto	u552_20
  7200  023E  0020               	movlb	0	; select bank0
  7201  023F  140D               	bsf	13,0	;volatile
  7202  0240  2A43               	goto	i1l3780
  7203  0241                     u552_20:	
  7204  0241  0020               	movlb	0	; select bank0
  7205  0242  100D               	bcf	13,0	;volatile
  7206  0243                     i1l3780:	
  7207                           
  7208                           ;interrupt.c: 180: RB2 = !(fault_timer_2 > 0);
  7209  0243  0852               	movf	tc_int@fault_timer_2+1,w
  7210  0244  0451               	iorwf	tc_int@fault_timer_2,w
  7211  0245  1D03               	btfss	3,2
  7212  0246  2A4A               	goto	u554_20
  7213  0247  0020               	movlb	0	; select bank0
  7214  0248  150D               	bsf	13,2	;volatile
  7215  0249  2A4C               	goto	i1l3782
  7216  024A                     u554_20:	
  7217  024A  0020               	movlb	0	; select bank0
  7218  024B  110D               	bcf	13,2	;volatile
  7219  024C                     i1l3782:	
  7220                           
  7221                           ;interrupt.c: 182: if (remote_enabled == 1) {
  7222  024C  1C58               	btfss	_remote_enabled/(0+8),_remote_enabled& (0+7)
  7223  024D  2A7C               	goto	i1l151
  7224                           
  7225                           ;interrupt.c: 183: RB5 = 0;
  7226  024E  128D               	bcf	13,5	;volatile
  7227                           
  7228                           ;interrupt.c: 186: RC2 = !pulse_enabled || (pulse_enabled && (pulse_timer < 20));
  7229  024F  01A8               	clrf	_tc_int$70
  7230  0250  0AA8               	incf	_tc_int$70,f
  7231  0251  1DFC               	btfss	_pulse_enabled/(0+8),_pulse_enabled& (0+7)
  7232  0252  2A5C               	goto	i1l3792
  7233  0253  1DFC               	btfss	_pulse_enabled/(0+8),_pulse_enabled& (0+7)
  7234  0254  2A5B               	goto	i1l3790
  7235  0255  3000               	movlw	0
  7236  0256  0254               	subwf	tc_int@pulse_timer+1,w
  7237  0257  3014               	movlw	20
  7238  0258  1903               	skipnz
  7239  0259  0253               	subwf	tc_int@pulse_timer,w
  7240  025A  1803               	btfsc	3,0
  7241  025B                     i1l3790:	
  7242  025B  01A8               	clrf	_tc_int$70
  7243  025C                     i1l3792:	
  7244  025C  0828               	movf	_tc_int$70,w
  7245  025D  1D03               	skipz
  7246  025E  150E               	bsf	14,2	;volatile
  7247  025F  1903               	skipnz
  7248  0260  110E               	bcf	14,2	;volatile
  7249                           
  7250                           ;interrupt.c: 189: RC0 = !(fault_timer_1 > 0) && !overtemp_1 & channel1_enabled;
  7251  0261  01A9               	clrf	_tc_int$71
  7252  0262  0850               	movf	tc_int@fault_timer_1+1,w
  7253  0263  044F               	iorwf	tc_int@fault_timer_1,w
  7254  0264  1903               	btfsc	3,2
  7255  0265  1A7C               	btfsc	tc_int@overtemp_1/(0+8),tc_int@overtemp_1& (0+7)
  7256  0266  2A6B               	goto	i1l3804
  7257  0267  1C7C               	btfss	_channel1_enabled/(0+8),_channel1_enabled& (0+7)
  7258  0268  2A6B               	goto	i1l3804
  7259  0269  01A9               	clrf	_tc_int$71
  7260  026A  0AA9               	incf	_tc_int$71,f
  7261  026B                     i1l3804:	
  7262  026B  0829               	movf	_tc_int$71,w
  7263  026C  1D03               	skipz
  7264  026D  140E               	bsf	14,0	;volatile
  7265  026E  1903               	skipnz
  7266  026F  100E               	bcf	14,0	;volatile
  7267                           
  7268                           ;interrupt.c: 190: RC3 = !(fault_timer_2 > 0) && !overtemp_2 && channel2_enabled;
  7269  0270  01AA               	clrf	_tc_int$72
  7270  0271  0852               	movf	tc_int@fault_timer_2+1,w
  7271  0272  0451               	iorwf	tc_int@fault_timer_2,w
  7272  0273  1903               	btfsc	3,2
  7273  0274  1AFC               	btfsc	tc_int@overtemp_2/(0+8),tc_int@overtemp_2& (0+7)
  7274  0275  2A7A               	goto	i1l3816
  7275  0276  1CFC               	btfss	_channel2_enabled/(0+8),_channel2_enabled& (0+7)
  7276  0277  2A7A               	goto	i1l3816
  7277  0278  01AA               	clrf	_tc_int$72
  7278  0279  0AAA               	incf	_tc_int$72,f
  7279  027A                     i1l3816:	
  7280  027A  082A               	movf	_tc_int$72,w
  7281  027B  2AA7               	goto	L13
  7282  027C                     i1l151:	
  7283                           ;interrupt.c: 192: } else {
  7284                           
  7285                           
  7286                           ;interrupt.c: 193: RB5 = 1;
  7287  027C  168D               	bsf	13,5	;volatile
  7288                           
  7289                           ;interrupt.c: 196: RC2 = RA6 || (!RA6 && (pulse_timer < 20));
  7290  027D  01AB               	clrf	_tc_int$73
  7291  027E  0AAB               	incf	_tc_int$73,f
  7292  027F  1B0C               	btfsc	12,6	;volatile
  7293  0280  2A8A               	goto	i1l3824
  7294  0281  1B0C               	btfsc	12,6	;volatile
  7295  0282  2A89               	goto	i1l3822
  7296  0283  3000               	movlw	0
  7297  0284  0254               	subwf	tc_int@pulse_timer+1,w
  7298  0285  3014               	movlw	20
  7299  0286  1903               	skipnz
  7300  0287  0253               	subwf	tc_int@pulse_timer,w
  7301  0288  1803               	btfsc	3,0
  7302  0289                     i1l3822:	
  7303  0289  01AB               	clrf	_tc_int$73
  7304  028A                     i1l3824:	
  7305  028A  082B               	movf	_tc_int$73,w
  7306  028B  1D03               	skipz
  7307  028C  150E               	bsf	14,2	;volatile
  7308  028D  1903               	skipnz
  7309  028E  110E               	bcf	14,2	;volatile
  7310                           
  7311                           ;interrupt.c: 199: RC0 = !(fault_timer_1 > 0) && !overtemp_1;
  7312  028F  01AC               	clrf	_tc_int$74
  7313  0290  0850               	movf	tc_int@fault_timer_1+1,w
  7314  0291  044F               	iorwf	tc_int@fault_timer_1,w
  7315  0292  1903               	btfsc	3,2
  7316  0293  1A7C               	btfsc	tc_int@overtemp_1/(0+8),tc_int@overtemp_1& (0+7)
  7317  0294  2A97               	goto	i1l3834
  7318  0295  01AC               	clrf	_tc_int$74
  7319  0296  0AAC               	incf	_tc_int$74,f
  7320  0297                     i1l3834:	
  7321  0297  082C               	movf	_tc_int$74,w
  7322  0298  1D03               	skipz
  7323  0299  140E               	bsf	14,0	;volatile
  7324  029A  1903               	skipnz
  7325  029B  100E               	bcf	14,0	;volatile
  7326                           
  7327                           ;interrupt.c: 200: RC3 = !(fault_timer_2 > 0) && !overtemp_2 && !RA5;
  7328  029C  01AD               	clrf	_tc_int$75
  7329  029D  0852               	movf	tc_int@fault_timer_2+1,w
  7330  029E  0451               	iorwf	tc_int@fault_timer_2,w
  7331  029F  1903               	btfsc	3,2
  7332  02A0  1AFC               	btfsc	tc_int@overtemp_2/(0+8),tc_int@overtemp_2& (0+7)
  7333  02A1  2AA6               	goto	i1l3846
  7334  02A2  1A8C               	btfsc	12,5	;volatile
  7335  02A3  2AA6               	goto	i1l3846
  7336  02A4  01AD               	clrf	_tc_int$75
  7337  02A5  0AAD               	incf	_tc_int$75,f
  7338  02A6                     i1l3846:	
  7339  02A6  082D               	movf	_tc_int$75,w
  7340  02A7                     L13:	
  7341  02A7  1D03               	skipz
  7342  02A8  158E               	bsf	14,3	;volatile
  7343  02A9  1903               	skipnz
  7344  02AA  118E               	bcf	14,3	;volatile
  7345  02AB                     i1l165:	
  7346  02AB  0827               	movf	??_tc_int+7,w
  7347  02AC  00FF               	movwf	127
  7348  02AD  107E               	bcf	126,0	;clear compiler interrupt flag
  7349  02AE  0009               	retfie
  7350  02AF                     __end_of_tc_int:	
  7351                           
  7352                           	psect	text32
  7353  0990                     __ptext32:	
  7354 ;; *************** function i1___lmul *****************
  7355 ;; Defined at:
  7356 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul32.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  multiplier      4    0[COMMON] unsigned long 
  7359 ;;  multiplicand    4    4[COMMON] unsigned long 
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;  __lmul          4    8[COMMON] unsigned long 
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  4    0[COMMON] unsigned long 
  7364 ;; Registers used:
  7365 ;;		wreg, status,2, status,0
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7371 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7372 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7374 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7375 ;;Total ram usage:       12 bytes
  7376 ;; Hardware stack levels used:    1
  7377 ;; This function calls:
  7378 ;;		Nothing
  7379 ;; This function is called by:
  7380 ;;		_tc_int
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           
  7385                           ;psect for function i1___lmul
  7386  0990                     i1___lmul:	
  7387                           
  7388                           ;incstack = 0
  7389                           ; Regs used in i1___lmul: [wreg+status,2+status,0]
  7390  0990  3000               	movlw	0
  7391  0991  00FB               	movwf	i1___lmul@product+3
  7392  0992  3000               	movlw	0
  7393  0993  00FA               	movwf	i1___lmul@product+2
  7394  0994  3000               	movlw	0
  7395  0995  00F9               	movwf	i1___lmul@product+1
  7396  0996  3000               	movlw	0
  7397  0997  00F8               	movwf	i1___lmul@product
  7398  0998                     i1l3624:	
  7399  0998  1C70               	btfss	i1___lmul@multiplier,0
  7400  0999  29A2               	goto	i1l3628
  7401  099A  0874               	movf	i1___lmul@multiplicand,w
  7402  099B  07F8               	addwf	i1___lmul@product,f
  7403  099C  0875               	movf	i1___lmul@multiplicand+1,w
  7404  099D  3DF9               	addwfc	i1___lmul@product+1,f
  7405  099E  0876               	movf	i1___lmul@multiplicand+2,w
  7406  099F  3DFA               	addwfc	i1___lmul@product+2,f
  7407  09A0  0877               	movf	i1___lmul@multiplicand+3,w
  7408  09A1  3DFB               	addwfc	i1___lmul@product+3,f
  7409  09A2                     i1l3628:	
  7410  09A2  3001               	movlw	1
  7411  09A3                     u496_25:	
  7412  09A3  35F4               	lslf	i1___lmul@multiplicand,f
  7413  09A4  0DF5               	rlf	i1___lmul@multiplicand+1,f
  7414  09A5  0DF6               	rlf	i1___lmul@multiplicand+2,f
  7415  09A6  0DF7               	rlf	i1___lmul@multiplicand+3,f
  7416  09A7  0B89               	decfsz	9,f
  7417  09A8  29A3               	goto	u496_25
  7418  09A9  3001               	movlw	1
  7419  09AA                     u497_25:	
  7420  09AA  36F3               	lsrf	i1___lmul@multiplier+3,f
  7421  09AB  0CF2               	rrf	i1___lmul@multiplier+2,f
  7422  09AC  0CF1               	rrf	i1___lmul@multiplier+1,f
  7423  09AD  0CF0               	rrf	i1___lmul@multiplier,f
  7424  09AE  0B89               	decfsz	9,f
  7425  09AF  29AA               	goto	u497_25
  7426  09B0  0873               	movf	i1___lmul@multiplier+3,w
  7427  09B1  0472               	iorwf	i1___lmul@multiplier+2,w
  7428  09B2  0471               	iorwf	i1___lmul@multiplier+1,w
  7429  09B3  0470               	iorwf	i1___lmul@multiplier,w
  7430  09B4  1D03               	skipz
  7431  09B5  2998               	goto	i1l3624
  7432  09B6  087B               	movf	i1___lmul@product+3,w
  7433  09B7  00F3               	movwf	?i1___lmul+3
  7434  09B8  087A               	movf	i1___lmul@product+2,w
  7435  09B9  00F2               	movwf	?i1___lmul+2
  7436  09BA  0879               	movf	i1___lmul@product+1,w
  7437  09BB  00F1               	movwf	?i1___lmul+1
  7438  09BC  0878               	movf	i1___lmul@product,w
  7439  09BD  00F0               	movwf	?i1___lmul
  7440  09BE  0008               	return
  7441  09BF                     __end_ofi1___lmul:	
  7442  007E                     btemp	set	126	;btemp
  7443  007E                     pic14e$flags	set	126
  7444  007E                     wtemp	set	126
  7445  007E                     wtemp0	set	126
  7446  0080                     wtemp1	set	128
  7447  0082                     wtemp2	set	130
  7448  0084                     wtemp3	set	132
  7449  0086                     wtemp4	set	134
  7450  0088                     wtemp5	set	136
  7451  007F                     wtemp6	set	127
  7452  007E                     ttemp	set	126
  7453  007E                     ttemp0	set	126
  7454  0081                     ttemp1	set	129
  7455  0084                     ttemp2	set	132
  7456  0087                     ttemp3	set	135
  7457  007F                     ttemp4	set	127
  7458  007E                     ltemp	set	126
  7459  007E                     ltemp0	set	126
  7460  0082                     ltemp1	set	130
  7461  0086                     ltemp2	set	134
  7462  0080                     ltemp3	set	128


Data Sizes:
    Strings     311
    Constant    102
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     35      57
    BANK1            80     77      77
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    S111$1$0	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    status_command@param1	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    errors_command@param1	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    S77$1$0	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_24(CODE[2]), STR_23(CODE[2]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_24(CODE[2]), STR_23(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), main@cmdbuf(BANK1[10]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_24(CODE[2]), NULL(NULL[0]), STR_23(CODE[2]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_24(CODE[2]), STR_23(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), main@cmdbuf(BANK1[10]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_24(CODE[2]), STR_23(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), main@cmdbuf(BANK1[10]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), main@cmdbuf(BANK1[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_45(CODE[3]), STR_44(CODE[4]), STR_43(CODE[2]), STR_42(CODE[2]), 
		 -> errors_command@buf(BANK1[10]), STR_37(CODE[5]), STR_36(CODE[2]), STR_35(CODE[2]), 
		 -> status_command@buf(BANK1[10]), STR_25(CODE[4]), STR_13(CODE[2]), STR_12(CODE[4]), 
		 -> STR_11(CODE[27]), STR_10(CODE[6]), STR_9(CODE[25]), STR_8(CODE[6]), 
		 -> STR_7(CODE[24]), STR_6(CODE[6]), main@cmd_descr(BANK1[12]), STR_5(CODE[2]), 
		 -> STR_4(CODE[4]), STR_3(CODE[36]), STR_2(CODE[6]), main@cmdbuf(BANK1[10]), 
		 -> STR_1(CODE[33]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_45(CODE[3]), STR_44(CODE[4]), STR_43(CODE[2]), STR_42(CODE[2]), 
		 -> errors_command@buf(BANK1[10]), STR_37(CODE[5]), STR_36(CODE[2]), STR_35(CODE[2]), 
		 -> status_command@buf(BANK1[10]), STR_25(CODE[4]), STR_13(CODE[2]), STR_12(CODE[4]), 
		 -> STR_11(CODE[27]), STR_10(CODE[6]), STR_9(CODE[25]), STR_8(CODE[6]), 
		 -> STR_7(CODE[24]), STR_6(CODE[6]), main@cmd_descr(BANK1[12]), STR_5(CODE[2]), 
		 -> STR_4(CODE[4]), STR_3(CODE[36]), STR_2(CODE[6]), main@cmdbuf(BANK1[10]), 
		 -> STR_1(CODE[33]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), main@cmdbuf(BANK1[10]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 12
		 -> parse_setup_cmd@cbuf(BANK1[10]), main@cmd_descr(BANK1[12]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 12
		 -> parse_setup_cmd@cbuf(BANK1[10]), main@cmd_descr(BANK1[12]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_22(CODE[7]), STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[4]), 
		 -> STR_18(CODE[6]), STR_17(CODE[6]), STR_16(CODE[6]), STR_15(CODE[4]), 
		 -> STR_14(CODE[5]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 10
		 -> parse_setup_cmd@cbuf(BANK1[10]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_41(CODE[7]), STR_40(CODE[8]), STR_39(CODE[8]), STR_38(CODE[8]), 
		 -> STR_34(CODE[7]), STR_33(CODE[8]), STR_32(CODE[8]), STR_31(CODE[8]), 
		 -> STR_30(CODE[8]), STR_29(CODE[8]), STR_28(CODE[8]), STR_27(CODE[8]), 
		 -> STR_26(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> errors_command@buf(BANK1[10]), status_command@buf(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S393$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    sergetline@buf	PTR unsigned char  size(1) Largest target is 10
		 -> main@cmdbuf(BANK1[10]), 

    serputstr@line	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_45(CODE[3]), STR_44(CODE[4]), STR_43(CODE[2]), STR_42(CODE[2]), 
		 -> errors_command@buf(BANK1[10]), STR_37(CODE[5]), STR_36(CODE[2]), STR_35(CODE[2]), 
		 -> status_command@buf(BANK1[10]), STR_25(CODE[4]), STR_13(CODE[2]), STR_12(CODE[4]), 
		 -> STR_11(CODE[27]), STR_10(CODE[6]), STR_9(CODE[25]), STR_8(CODE[6]), 
		 -> STR_7(CODE[24]), STR_6(CODE[6]), STR_5(CODE[2]), STR_4(CODE[4]), 
		 -> STR_3(CODE[36]), STR_2(CODE[6]), STR_1(CODE[33]), 

    ttlout_command@param1	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    power_command@param1	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    pulse_command@param1	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    enable2_command@param1	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    enable1_command@param1	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    remote_command@param1	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    echo_command@param1	PTR unsigned char  size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 12
		 -> parse_setup_cmd@cbuf(BANK1[10]), main@cmd_descr(BANK1[12]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), main@cmdbuf(BANK1[10]), 

    parse_setup_cmd@buf	PTR unsigned char  size(1) Largest target is 10
		 -> main@cmdbuf(BANK1[10]), 

    parse_setup_cmd@tokptr	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), main@cmdbuf(BANK1[10]), 

    parse_setup_cmd@cmd_descr.cmdptr	PTR FTN(PTR unsigned char ,)int  size(2) Largest target is 2
		 -> errors_command(), status_command(), ttlout_command(), power_command(), 
		 -> pulse_command(), enable2_command(), enable1_command(), remote_command(), 
		 -> echo_command(), 

    parse_setup_cmd@cmd_descr	PTR struct command size(1) Largest target is 12
		 -> main@cmd_descr(BANK1[12]), 

    S111cmdlist$cmdptr	PTR FTN(PTR unsigned char ,)int  size(2) Largest target is 2
		 -> errors_command(), status_command(), ttlout_command(), power_command(), 
		 -> pulse_command(), enable2_command(), enable1_command(), remote_command(), 
		 -> echo_command(), 

    commands.cmdptr	PTR FTN(PTR unsigned char ,)int  size(2) Largest target is 2
		 -> errors_command(), status_command(), ttlout_command(), power_command(), 
		 -> pulse_command(), enable2_command(), enable1_command(), remote_command(), 
		 -> echo_command(), 

    S111cmdlist$cmdname	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_22(CODE[7]), STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[4]), 
		 -> STR_18(CODE[6]), STR_17(CODE[6]), STR_16(CODE[6]), STR_15(CODE[4]), 
		 -> STR_14(CODE[5]), 

    commands.cmdname	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_22(CODE[7]), STR_21(CODE[7]), STR_20(CODE[7]), STR_19(CODE[4]), 
		 -> STR_18(CODE[6]), STR_17(CODE[6]), STR_16(CODE[6]), STR_15(CODE[4]), 
		 -> STR_14(CODE[5]), 

    S77command$cmdptr	PTR FTN(PTR unsigned char ,)int  size(2) Largest target is 2
		 -> errors_command(), status_command(), ttlout_command(), power_command(), 
		 -> pulse_command(), enable2_command(), enable1_command(), remote_command(), 
		 -> echo_command(), 

    cmd_descr.cmdptr	PTR FTN(PTR unsigned char ,)int  size(2) Largest target is 2
		 -> errors_command(), status_command(), ttlout_command(), power_command(), 
		 -> pulse_command(), enable2_command(), enable1_command(), remote_command(), 
		 -> echo_command(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tc_int in COMMON

    _tc_int->i1___lmul

Critical Paths under _main in BANK0

    _main->___lmul
    _main->_sergetline
    _status_command->___lmul
    _sergetline->_serputstr
    _power_command->___lmul
    _parse_setup_cmd->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _serputstr->_strlen
    _atoi->___wmul

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_status_command
    _status_command->_sprintf
    _sergetline->_serputstr
    _parse_setup_cmd->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _errors_command->_sprintf
    _sprintf->___lwmod

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tc_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tc_int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _tc_int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _tc_int in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _tc_int in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _tc_int in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _tc_int in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _tc_int in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _tc_int in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    53      4   50539
                                             40 BANK1     37    33      4
                             ___lmul
                       _echo_command *
                    _enable1_command *
                    _enable2_command *
                     _errors_command *
                    _parse_setup_cmd
                          _pic_setup
                      _power_command *
                      _pulse_command *
                     _remote_command *
                         _sergetline
                          _serputstr
                     _status_command *
                             _strlen
                     _ttlout_command *
 ---------------------------------------------------------------------------------
 (1) _ttlout_command                                       5     3      2    2241
                                             19 BANK1      5     3      2
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _status_command                                      21    19      2    9669
                                             19 BANK1     21    19      2
                             ___lmul
                          _serputstr
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sergetline                                           9     7      2    5300
                                             32 BANK0      3     3      0
                                              4 BANK1      6     4      2
                         _sergetchar
                         _serputchar
                          _serputstr
                            _tolower
 ---------------------------------------------------------------------------------
 (2) _tolower                                              1     1      0      96
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _sergetchar                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _remote_command                                       5     3      2    2241
                                             19 BANK1      5     3      2
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _pulse_command                                        5     3      2    2241
                                             19 BANK1      5     3      2
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _power_command                                       14    12      2    2971
                                             19 BANK1     14    12      2
                             ___lmul
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     682
                                             23 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _pic_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _parse_setup_cmd                                     24    22      2    3676
                                              8 BANK1     24    22      2
                             _strcmp
                             _strcpy
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _strtok                                               6     4      2    2386
                                             33 BANK0      1     1      0
                                              3 BANK1      5     3      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (3) _strspn                                               7     5      2     860
                                             29 BANK0      4     2      2
                                              0 BANK1      3     3      0
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              7     5      2     860
                                             29 BANK0      4     2      2
                                              0 BANK1      3     3      0
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strchr                                               6     2      4     536
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               4     3      1     279
                                             23 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     3      2     193
                                             23 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _errors_command                                      14    12      2    8538
                                             19 BANK1     14    12      2
                          _serputstr
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             17    13      4    3669
                                              2 BANK1     17    13      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     508
                                             31 BANK0      4     0      4
                                              0 BANK1      2     2      0
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     395
                                             23 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _serputstr                                            7     5      2    4406
                                             29 BANK0      3     1      2
                                              0 BANK1      4     4      0
                         _serputchar
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _serputchar                                           1     1      0      42
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable2_command                                      5     3      2    2241
                                             19 BANK1      5     3      2
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _enable1_command                                      5     3      2    2241
                                             19 BANK1      5     3      2
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _echo_command                                         5     3      2    2241
                                             19 BANK1      5     3      2
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2    1008
                                             23 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2    1017
                                             29 BANK0      4     2      2
                                              0 BANK1      4     4      0
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                             23 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tc_int                                              23    23      0    1084
                                              0 BANK0     23    23      0
                           i1___lmul
 ---------------------------------------------------------------------------------
 (6) i1___lmul                                            12     4      8     206
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lmul
   _echo_command *
     _atoi
       ___wmul
       _isdigit
     _strlen
   _enable1_command *
     _atoi
       ___wmul
       _isdigit
     _strlen
   _enable2_command *
     _atoi
       ___wmul
       _isdigit
     _strlen
   _errors_command *
     _serputstr
       _serputchar
       _strlen
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _parse_setup_cmd *
     _strcmp
     _strcpy
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _pic_setup *
   _power_command *
     ___lmul
     _atoi
       ___wmul
       _isdigit
     _strlen
   _pulse_command *
     _atoi
       ___wmul
       _isdigit
     _strlen
   _remote_command *
     _atoi
       ___wmul
       _isdigit
     _strlen
   _sergetline *
     _sergetchar
     _serputchar
     _serputstr
       _serputchar
       _strlen
     _tolower
   _serputstr *
     _serputchar
     _strlen
   _status_command *
     ___lmul
     _serputstr
       _serputchar
       _strlen
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _strlen *
   _ttlout_command *
     _atoi
       ___wmul
       _isdigit
     _strlen

 _tc_int (ROOT)
   i1___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       1       4        1.2%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      39       5       71.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4D      4D       7       96.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      94      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      94      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Sep  9 12:38:58 2014

       ttlout_command@val 00B6       ___wmul@multiplicand 0039                       l310 0BFE  
                     l303 0BC0                       l324 02F4                       l440 08F9  
                     l274 0ECE                       l282 0B44                       l446 08EB  
                     l296 0B82                       l289 0C3C                       l583 0959  
                     _GIE 005F                       _RB0 0068                       _RB1 0069  
                     _RA3 0063                       _RC0 0070                       _RB2 006A  
                     _RA4 0064                       _RC1 0071                       _RB3 006B  
                     _RA5 0065                       _RC2 0072                       _RB4 006C  
                     _RA6 0066                       _RC3 0073                       _RB5 006D  
                     _RA7 0067                       _RC4 0074                       _RC5 0075  
                     _PR2 001B   __end_of_enable1_command 0B8A   __end_of_enable2_command 0BC8  
                     wreg 0009            ?_power_command 00B3                      l1015 0935  
                    l3102 0A4C                      l2230 07E2                      l3200 0D78  
                    l2224 0921                      l3202 0D71                      l3106 0A55  
                    l2234 07F9                      l4010 0C9E                      l3220 0DA4  
                    l3212 0D97                      l3204 0D7F                      l4004 0A72  
                    l2228 07DA                      l3062 0953                      l3222 0DD4  
                    l3302 090A                      l3080 0919                      l4032 0CF1  
                    l4024 0CC1                      l4016 0CA3                      l3312 09D2  
                    l4112 0E26                      l3218 0D9E                      l4034 0CF2  
                    l4114 0E2C                      l4106 0E0F                      l3228 0DE7  
                    l4052 0F65                      l3308 09C8                      l4132 0E58  
                    l4124 0E3F                      l3094 0A2E                      l4062 0F7B  
                    l4046 0F4D                      l4214 0C36                      l3096 0A3A  
                    l4080 0FAF                      l4312 02D2                      l4208 0C1A  
                    l4074 0FA0                      l4066 0F81                      l4090 0F2B  
                    l4162 0EC2                      l4138 0E77                      l4322 02FC  
                    l4218 0C43                      l4234 0B7C                      l4092 0FFB  
                    l4164 0EC7                      l4156 0E9E                      l4228 0B60  
                    l4412 0687                      l4318 02EE                      l4254 0BBA  
                    l4422 0693                      l4414 06C1                      l4406 0639  
                    l4088 0FB3                      l4176 0F19                      l4248 0B9E  
                    l4440 06A1                      l4178 0F1F                      l4098 0DF6  
                    l4194 0B3E                      l4274 0BF8                      l4370 0613  
                    l4450 06AD                      l4426 0698                      l4418 068C  
                    l4188 0B22                      l4268 0BDC                      l4460 06B9  
                    l4436 069A                      l4294 0D24                      l4446 06A6  
                    l4288 0D08                      l4456 06B2                      l4298 0D2A  
                    l4394 07D1                      l3940 0975                      l3942 0982  
                    l3960 0A06                      l3964 0A13                      l3980 0B03  
                    l3958 09F7                      l3974 0AD7                      l3968 0A1D  
                    l3992 0AC7                      l3976 0AE1                      l3986 0A9B  
                    l3988 0AA5                      STR_1 038A                      STR_2 0465  
                    STR_3 0366                      STR_4 048B                      STR_5 03A9  
                    STR_6 0453                      STR_7 03DF                      STR_8 0459  
                    STR_9 03C6                      _BRGH 0CF2                      _AD_a 0324  
                    _CREN 0CEC                      _AD_b 035E                      _AD_x 0344  
                    u4025 095A                      u4105 0A3B                      u4035 095F  
                    u4115 0A45                      u4125 0A4D                      u4085 0A31  
                    u6025 0A80                      u6105 0F96                      u6305 0B3C  
                    u4475 09D3                      u6235 0E6F                      _RCIF 008D  
                    u4485 09DA                      u6175 0E1A                      u6345 0C34  
                    u6425 0BB8                      u6505 0D22                      u6275 0ED8  
                    u6515 0D60                      u6603 0637                      i1l93 0023  
                    u6613 0685                      u6550 02FA                      i1l97 0029  
                    u6545 02EC                      u6385 0B7A                      u6465 0BF6  
                    u6705 0716                      u6725 071F                      u5935 09FC  
                    u6575 0556                      u5955 0A0D                      u5965 0A14  
                    u6685 070D                      _SPEN 0CEF                      _TXEN 0CF5  
                    _TXIF 008C                      _SYNC 0CF4                      _atoi 0D6F  
                    _main 0619                      fsr0h 0005                      fsr1h 0007  
                    fsr0l 0004                      indf0 0000                      indf1 0001  
                    fsr1l 0006                      btemp 007E             _pulse_enabled 03E3  
                    ltemp 007E                      start 02AF             _pulse_command 0BC8  
                    ttemp 007E              serputstr@len 00A0                      wtemp 007E  
           __CFG_IESO$OFF 0000      __end_of_echo_command 0B4C      ttlout_command@param1 00B3  
                   ?_atoi 003D                     ?_main 00C8                     STR_10 045F  
                   STR_11 03AB                     STR_12 048B                     STR_20 044C  
                   STR_13 03A9                     STR_21 0445                     STR_30 042F  
                   STR_22 043E                     STR_14 0482                     STR_23 0491  
                   STR_31 03F7                     STR_15 0493                     STR_40 0407  
                   STR_24 049B                     STR_32 040F                     _BRG16 0CFB  
                   STR_16 046B                     STR_41 0437                     STR_25 048F  
                   STR_33 0407                     STR_17 0471             __CFG_WDTE$OFF 0000  
                   STR_42 0457                     STR_34 0437                     STR_26 0427  
                   STR_18 0477                     STR_43 03A9                     STR_35 0457  
                   STR_27 03FF                     STR_19 0497                     STR_36 03A9  
                   STR_44 0487                     STR_28 0417                     STR_45 03A8  
                   STR_37 047D                     STR_29 041F                     STR_38 03F7  
                   STR_39 040F                     _T2CON 001C           __end_of___lwdiv 0A5C  
                   i1l101 002F                     i1l113 00BC                     i1l122 0124  
                   i1l114 00C7                     i1l132 017B                     i1l116 00EA  
                   i1l141 01EF                     i1l126 014E                     i1l151 027C  
                   i1l135 017F                     i1l129 0152                     i1l147 021E  
                   i1l139 01CD                     i1l165 02AB           __end_of___lwmod 0A25  
                   _RCREG 0199                     _TRISA 008C                     _TRISB 008D  
                   _TRISC 008E                     _TXREG 019A       ___lmul@multiplicand 003B  
           __CFG_PWRTE$ON 0000                     _nDONE 04E9            __CFG_FCMEN$OFF 0000  
         __end_of_dpowers 035E   __size_of_status_command 017C           __end_of_isdigit 091B  
        ??_ttlout_command 00B5                     atoi@a 00A1                     atoi@s 00A3  
                   main@i 00DB                     main@j 00CD          pulse_command@val 00B6  
          __pbitbssCOMMON 03E0          __end_ofi1___lmul 09BF                     pclath 000A  
 __end_of_parse_setup_cmd 0F25                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080          ??_errors_command 00B5  
       errors_command@buf 00B7                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003             serputstr@line 003D                     wtemp0 007E  
                   wtemp1 0080                     wtemp2 0082                     wtemp3 0084  
                   wtemp4 0086                     wtemp5 0088                     wtemp6 007F  
         __end_of_sprintf 1000           __end_of_tolower 090C           __end_of_strcspn 0AD2  
          ?_pulse_command 00B3              __end_of_AD_a 0344              __end_of_AD_b 0366  
            __end_of_AD_x 0354            __CFG_MCLRE$OFF 0000           __initialization 02B1  
            __end_of_atoi 0DF2              __end_of_main 0730       i1___lmul@multiplier 0070  
        parse_setup_cmd@i 00BD             main@cmd_descr 00E1                    ??_atoi 003F  
                  ??_main 00CC            __CFG_PLLEN$OFF 0000          ?_enable1_command 00B3  
        ?_enable2_command 00B3       parse_setup_cmd@cbuf 00B0           ??_power_command 00B5  
       status_command@buf 00BA        enable1_command@val 00B6                    _ADCON0 009D  
                  _ADCON1 009E                    _ADRESH 009C                    _ADRESL 009B  
                  _CCPR2L 0298                    _ANSELA 018C                    _ANSELB 018D  
                  i1l3710 00F3                    i1l3702 00D9                    i1l3624 0998  
                  i1l3720 0110                    i1l3712 00F5                    i1l3722 011E  
                  i1l3706 00EB                    i1l3628 09A2                    i1l3804 026B  
                  i1l3822 0289                    i1l3824 028A                    i1l3816 027A  
                  i1l3752 01F0                    i1l3672 0039                    i1l3834 0297  
                  i1l3762 020F                    i1l3754 0200                    i1l3682 0053  
                  i1l3674 003E                    i1l3780 0243                    i1l3772 022A  
                  i1l3748 01CE                    i1l3692 00B0                    i1l3846 02A6  
                  i1l3790 025B                    i1l3782 024C                    i1l3774 022C  
                  i1l3766 0216                    i1l3758 0207                    i1l3678 0043  
                  i1l3792 025C                    i1l3776 0233                    i1l3696 00B5  
                  i1l3778 023A                    u520_25 006E                    u521_25 00A4  
                  u530_25 011C                    u531_25 0141                    u540_25 01C9  
                  u524_25 00D4                    u541_25 01D7                    u525_25 00E6  
                  u550_20 0238                    u542_25 01EB                    u534_25 0158  
                  u518_25 004C                    u552_20 0241                    u528_25 00FB  
                  u537_25 0185                    u529_25 0109                    u554_20 024A  
                  _OSCCON 0099                    u539_25 01B5                    u548_20 0231  
                  u496_25 09A3                    u497_25 09AA                    _TMR0IE 005D  
                  _TMR0IF 005A                    _SPBRGH 019C                    _SPBRGL 019B  
        __end_of_commands 0324                    ___lmul 09BF                    ___wmul 0950  
 __size_of_remote_command 0041                 ??___lwdiv 003B                 ??___lwmod 00A0  
       tc_int@pulse_timer 0053                    _tc_int 0004                    _strchr 0935  
                  _strcmp 07D7                    _strcpy 091B                    _strlen 096E  
                  _strtok 0C93                    _strspn 0AD2                 ??_isdigit 0037  
         sergetline@bsize 00A4        enable2_command@val 00B6                 ??_sprintf 00A6  
               ??_tolower 0037                 ??_strcspn 003F          ?_parse_setup_cmd 00A8  
         ??_pulse_command 00B5     __size_of_echo_command 003E   __end_of__initialization 02BA  
          __pcstackCOMMON 0070          _channel1_enabled 03E0          _channel2_enabled 03E1  
               ?i1___lmul 0070              _echo_enabled 03E2              _echo_command 0B0E  
          _status_command 049D                __pbssBANK0 0043  parse_setup_cmd@cmd_descr 00A8  
    tc_int@fet_temp_timer 0057        __size_of_pic_setup 004C                __pmaintext 0619  
                 ?___lmul 0037                   ?___wmul 0037        status_command@temp 00C4  
              __pintentry 0004                   _CCP2CON 029A            ___lmul@product 003F  
                 ?_tc_int 0070                ??i1___lmul 0078      status_command@param1 00B3  
                 ?_strchr 0037                   ?_strcmp 0037                   ?_strcpy 0037  
                 ?_strlen 0037                   ?_strtok 00A3                   ?_strspn 003D  
  __end_of_status_command 0619     enable1_command@param1 00B3        __size_of_serputstr 003A  
          _remote_enabled 02C0            _remote_command 0C06           __size_of___lmul 0030  
         __size_of___wmul 001E                   ___lwdiv 0A25                   ___lwmod 09EF  
         __CFG_STVREN$OFF 0000                   _enc_A_1 03E8                   _enc_A_2 03E9  
                 _enc_B_1 03EA                   _enc_B_2 03EB           __size_of_tc_int 02AB  
                 __ptext1 0730                   __ptext2 049D                   __ptext3 0CF4  
                 __ptext4 0BC8                   __ptext5 0B8A                   __ptext6 0B4C  
                 __ptext7 0C06                   __ptext8 0B0E                   __ptext9 02BE  
         __size_of_strchr 001B           __size_of_strcmp 0028           __size_of_strcpy 001A  
         __size_of_strlen 0022           __size_of_strtok 0061           __size_of_strspn 003C  
                 _dpowers 0354              _enc_position 004B                   _isdigit 090C  
         ?_status_command 00B3         __end_of_pic_setup 0C93                   _sprintf 0F25  
                 _tolower 08FF                   clrloop0 08F2                   _strcspn 0A96  
    end_of_initialization 02BA               sergetline@c 00A9               sergetline@i 00A7  
                 tc_int@i 0034          tc_int@fet_temp_1 0043          tc_int@fet_temp_2 0047  
  __end_of_remote_command 0C47         __end_of_serputstr 0A96                _sergetchar 08EB  
              _sergetline 0DF2              __pstringtext 0300                   strcmp@r 003A  
                 strlen@s 0037                   strspn@i 00A0                _serputchar 08F7  
        __CFG_FOSC$INTOSC 0000     __end_of_power_command 0D6F  __size_of_enable1_command 003E  
    remote_command@param1 00B3  __size_of_enable2_command 003E               serputchar@c 0037  
              main@cmdbuf 00D1                main@status 00DF           ?_remote_command 00B3  
 __size_of_ttlout_command 0042   __size_of_errors_command 00A7            __end_of___lmul 09EF  
          __end_of___wmul 096E             __pbitbssBANK0 02C0            __end_of_tc_int 02AF  
          __end_of_strchr 0950            __end_of_strcmp 07FF              tc_int@AD_val 0030  
          __end_of_strcpy 0935            __end_of_strlen 0990            __end_of_strtok 0CF4  
          __end_of_strspn 0B0E     i1___lmul@multiplicand 0074         __size_ofi1___lmul 002F  
           __pbitnvCOMMON 03E8       start_initialization 02B1        parse_setup_cmd@buf 00BC  
     power_command@param1 00B3     __end_of_pulse_command 0C06          tc_int@overtemp_1 03E4  
        tc_int@overtemp_2 03E5              tc_int@period 0035  __size_of_parse_setup_cmd 00A1  
             ?_sergetchar 0070               ?_sergetline 00A4                  ??___lmul 003F  
                ??___wmul 003B                  ??_tc_int 0020                  ??_strchr 003B  
                ??_strcmp 0039               ?_serputchar 0070                  ??_strcpy 0038  
                ??_strlen 0039                  ??_strtok 00A5                  ??_strspn 003F  
               ___latbits 0003             __pcstackBANK0 0020             __pcstackBANK1 00A0  
     __end_of__stringdata 049D          i1___lmul@product 0078         power_command@temp 00BB  
     tc_int@fault_timer_1 004F       tc_int@fault_timer_2 0051               sprintf@_val 00AD  
     tc_int@slewed_period 0032               sprintf@flag 00AB               sprintf@prec 00AC  
       ??_enable1_command 00B5          ___lwdiv@dividend 0039         ??_enable2_command 00B5  
   parse_setup_cmd@tokptr 00BF                  ?___lwdiv 0037                  ?___lwmod 003F  
        ??_status_command 00B5   parse_setup_cmd@num_cmds 00BA                  ?_isdigit 0070  
                _CCPTMRS0 029E          ___lwdiv@quotient 003D                  ?_sprintf 00A2  
                ?_tolower 0070       __size_of_sergetchar 0006                  ?_strcspn 003D  
     __size_of_sergetline 0092                 _tc_int$70 0028                 _tc_int$71 0029  
               _tc_int$72 002A                 _tc_int$73 002B                 _tc_int$74 002C  
               _tc_int$75 002D                 _pic_setup 0C47            ___wmul@product 003B  
               clear_ram0 08F1       __size_of_serputchar 0008            _ttlout_command 02BE  
          _errors_command 0730                 _serputstr 0A5C         ??_parse_setup_cmd 00AA  
                i1___lmul 0990               __stringdata 0366         ___wmul@multiplier 0037  
      _remote_power_level 0055                serputstr@i 00A2         ___lmul@multiplier 0037  
              ?_pic_setup 0070          ??_remote_command 00B5    __end_of_ttlout_command 0300  
  __end_of_errors_command 07D7             sergetline@buf 00A6                ?_serputstr 003D  
        __size_of___lwdiv 0037          __size_of___lwmod 0036         remote_command@val 00B6  
             _isdigit$598 0037          power_command@val 00BF                 tc_int@pwm 002E  
           ?_echo_command 00B3          __size_of_isdigit 000F           ___lwdiv@divisor 0037  
         ___lwdiv@counter 003C                  __ptext10 0DF2                  __ptext11 08FF  
                __ptext20 091B                  __ptext12 08EB                  __ptext21 07D7  
                __ptext13 09BF                  __ptext30 0950                  __ptext22 0F25  
                __ptext14 0C47                  __ptext23 09EF                  __ptext15 0E84  
                __ptext32 0990                  __ptext24 0A25                  __ptext16 0C93  
                __ptext25 0A5C                  __ptext17 0AD2                  __ptext26 08F7  
                __ptext18 0A96                  __ptext27 096E                  __ptext19 0935  
                __ptext28 0D6F                  __ptext29 090C                  _commands 0300  
        __size_of_sprintf 00DB          __size_of_tolower 000D          __size_of_strcspn 003C  
              strcpy@from 0037        echo_command@param1 00B3             __size_of_atoi 0083  
           __size_of_main 0117           echo_command@val 00B6           ?_ttlout_command 00B3  
         ?_errors_command 00B3              ??_sergetchar 0037              ??_sergetline 0040  
                atoi@sign 00A0       pulse_command@param1 00B3                  main@argc 00C8  
                main@argv 00CA    __size_of_power_command 007B              ??_serputchar 0037  
          ??_echo_command 00B5                  isdigit@c 0038               pic14e$flags 007E  
   enable2_command@param1 00B3           _enable1_command 0B4C        __end_of_sergetchar 08F1  
                intlevel1 0000           _enable2_command 0B8A        __end_of_sergetline 0E84  
               sprintf@ap 00AA               ??_pic_setup 0037                 sprintf@sp 00B2  
               strchr@chr 0039          ___lwmod@dividend 0041                 strchr@ptr 0037  
               strcspn@s1 00A2                 strcspn@s2 003D        __end_of_serputchar 08FF  
    errors_command@param1 00B3               ??_serputstr 003F                _OPTION_REG 0095  
                sprintf@c 00B1                  sprintf@f 00A2                  tolower@c 0037  
                strcmp@s1 003B                  strcmp@s2 0037           ___lwmod@divisor 003F  
  __size_of_pulse_command 003E                  strcpy@cp 0039                  strlen@cp 003B  
                strcpy@to 003A           ___lwmod@counter 00A1                  strcspn@i 00A0  
                strtok@s1 0041                  strtok@s2 00A3                  strspn@s1 00A2  
                strspn@s2 003D                  strtok@sp 0056             _power_command 0CF4  
     _power_light_counter 004D           _parse_setup_cmd 0E84  
